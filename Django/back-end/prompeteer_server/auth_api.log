Registration failed: {'email': [ErrorDetail(string='This field is required.', code='invalid')]}
Registration failed: {'email': [ErrorDetail(string='This field is required.', code='invalid')]}
Registration failed: {'email': [ErrorDetail(string='This field is required.', code='invalid')]}
[VisitorLoginView] Incoming visitor login request: data={'anon_id': '4ad8fd38-7edb-4855-8dd3-67718f84cc9e', 'device_id': 'AE3A.240806.036', 'date_joined': '2025-07-18T23:25:04.449286'}
[VisitorLoginView] Visitor login success: status=201, resp={'message': 'Visitor session started.',
 'anon_id': '4ad8fd38-7edb-4855-8dd3-67718f84cc9e',
  'device_id': 'AE3A.240806.036',
   'date_joined': datetime.datetime(2025, 7, 18, 23, 25, 4, 449286, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}

[HealthCheckView] Health check performed.
[HealthCheckView] Health check response: status=200, resp={'status': 'ok', 'message': 'Server is up'}
[HealthCheckView] Health check performed.
[HealthCheckView] Health check response: status=200, resp={'status': 'ok', 'message': 'Server is up'}

[LoginView] Incoming login request: data={'identifier': 'sanad', 
'user_password': '12345678'}
[LoginView] Login failed: status=400, errors={'non_field_errors': 
[ErrorDetail(string='Invalid credentials', code='invalid')]}, req={'identifier': 'sanad',
 'user_password': '12345678'}
[RegisterView] Incoming registration request: data={'username': 'temp',
 'email': 'temp@temp.com'}

[RegisterView] Registration failed: status=400, errors={'email': 
[ErrorDetail(string='This field is required.', code='invalid')]}, req={'username': 'temp', 'email': 'temp@temp.com'}
[RegisterView] Incoming registration request: data={'username': 'temp', 'email': 'temp@temp.com'}
[RegisterView] Unexpected registration error: property 'email' of 'Custom_User' object has no setter, req={'username': 'temp', 'email': 'temp@temp.com'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 62, in post
    user = serializer.save()
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", line 69, in create
    user.full_clean()  # This will call model clean() and raise ValidationError if needed
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1626, in full_clean
    self.clean()
    ~~~~~~~~~~^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\user_mang\models\custom_user.py", line 19, in clean
    super().clean()
    ~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\contrib\auth\models.py", line 388, in clean
    self.email = self.__class__.objects.normalize_email(self.email)
    ^^^^^^^^^^
AttributeError: property 'email' of 'Custom_User' object has no setter
[RegisterView] Incoming registration request: data={'username': 'temp', 'email': 'temp@temp.com'}
[RegisterView] Unexpected registration error: {'password': ['This field cannot be blank.'], 'email': ['This field is required.']}, req={'username': 'temp', 'email': 'temp@temp.com'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 62, in post
    user = serializer.save()
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", line 69, in create
    user.full_clean()  # This will call model clean() and raise ValidationError if needed
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1651, in full_clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: {'password': ['This field cannot be blank.'], 'email': ['This field is required.']}
[RegisterView] Incoming registration request: data={'username': 'temp', 'email': 'temp@temp.com'}
[RegisterView] Unexpected registration error: {'password': ['This field cannot be blank.'], 'email': ['This field is required.']}, req={'username': 'temp', 'email': 'temp@temp.com'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 62, in post
    user = serializer.save()
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", line 71, in create
    user.full_clean()  # This will call model clean() and raise ValidationError if needed
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1651, in full_clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: {'password': ['This field cannot be blank.'], 'email': ['This field is required.']}
2025-07-18 23:55:08,329 INFO auth_api [RegisterView] Incoming registration request: data={'username': 'temp', 'email': 'temp@temp.com'}

2025-07-18 23:55:08,333 ERROR auth_api [RegisterView] Unexpected registration error: {'password': ['This field cannot be blank.'], 'email': ['This field is required.']}, req={'username': 'temp', 'email': 'temp@temp.com'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 62, in post
    user = serializer.save()
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", line 71, in create
    user.full_clean()  # This will call model clean() and raise ValidationError if needed
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1651, in full_clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: {'password': ['This field cannot be blank.'], 'email': ['This field is required.']}
2025-07-18 23:59:50,397 INFO auth_api [RegisterView] Incoming registration request: data={'username': 'temp', 'email': 'temp@temp.com'}

2025-07-18 23:59:50,401 ERROR auth_api [RegisterView] Unexpected registration error: {'email': ['This field is required.']}, req={'username': 'temp', 'email': 'temp@temp.com'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 62, in post
    user = serializer.save()
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", line 71, in create
    user.full_clean()  # This will call model clean() and raise ValidationError if needed
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", line 1651, in full_clean
    raise ValidationError(errors)
django.core.exceptions.ValidationError: {'email': ['This field is required.']}
2025-07-19 00:09:20,500 INFO auth_api [RegisterView] Incoming registration request: data={'username': 'temp', 'email': 'temp@temp.com'}

2025-07-19 00:09:20,502 ERROR auth_api [RegisterView] Unexpected registration error: no such column: user_mang_custom_user.email, req={'username': 'temp', 'email': 'temp@temp.com'}
Traceback (most recent call last):
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such column: user_mang_custom_user.email

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 61, in post
    if serializer.is_valid(raise_exception=True):
       ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\rest_framework\serializers.py", line 223, in is_valid
    self._validated_data = self.run_validation(self.initial_data)
                           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\rest_framework\serializers.py", line 445, in run_validation
    value = self.validate(value)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", line 54, in validate
    # Check for unique email in Custom_User model
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 1288, in exists
    return self.query.has_results(using=self.db)
           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\sql\query.py", line 660, in has_results
    return compiler.has_results()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\sql\compiler.py", line 1542, in has_results
    return bool(self.execute_sql(SINGLE))
                ~~~~~~~~~~~~~~~~^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\sql\compiler.py", line 1574, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
django.db.utils.OperationalError: no such column: user_mang_custom_user.email
2025-07-19 00:09:31,400 INFO auth_api [RegisterView] Incoming registration request: data={'username': 'temp', 'email': 'temp@temp.com'}

2025-07-19 00:09:31,402 ERROR auth_api [RegisterView] Unexpected registration error: no such column: user_mang_custom_user.email, req={'username': 'temp', 'email': 'temp@temp.com'}
Traceback (most recent call last):
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such column: user_mang_custom_user.email

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 61, in post
    if serializer.is_valid(raise_exception=True):
       ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\rest_framework\serializers.py", line 223, in is_valid
    self._validated_data = self.run_validation(self.initial_data)
                           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\rest_framework\serializers.py", line 445, in run_validation
    value = self.validate(value)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", line 54, in validate
    # Check for unique email in Custom_User model
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", line 1288, in exists
    return self.query.has_results(using=self.db)
           ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\sql\query.py", line 660, in has_results
    return compiler.has_results()
           ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\sql\compiler.py", line 1542, in has_results
    return bool(self.execute_sql(SINGLE))
                ~~~~~~~~~~~~~~~~^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\sql\compiler.py", line 1574, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
django.db.utils.OperationalError: no such column: user_mang_custom_user.email
2025-07-19 00:13:43,673 INFO auth_api [RegisterView] Incoming registration request: data={'username': 'temp', 'email': 'temp@temp.com'}

2025-07-19 00:13:43,761 ERROR auth_api [RegisterView] Unexpected registration error: 'Custom_User' object has no attribute 'id', req={'username': 'temp', 'email': 'temp@temp.com'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 81, in post
    refresh = RefreshToken.for_user(user)
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\rest_framework_simplejwt\tokens.py", line 238, in for_user
    user_id = getattr(user, api_settings.USER_ID_FIELD)
AttributeError: 'Custom_User' object has no attribute 'id'
2025-07-19 00:13:50,651 INFO auth_api [RegisterView] Incoming registration request: data={'username': 'temp', 'email': 'temp@temp.com'}

2025-07-19 00:13:50,652 WARNING auth_api [RegisterView] Registration failed: status=400, errors={'username': [ErrorDetail(string='A user with that username already exists.', code='unique')]}, req={'username': 'temp', 'email': 'temp@temp.com'}

2025-07-19 00:14:03,279 INFO auth_api [RegisterView] Incoming registration request: data={'username': 'temp1', 'email': 'temp1@temp.com'}

2025-07-19 00:14:03,299 ERROR auth_api [RegisterView] Unexpected registration error: 'Custom_User' object has no attribute 'id', req={'username': 'temp1', 'email': 'temp1@temp.com'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 81, in post
    refresh = RefreshToken.for_user(user)
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\rest_framework_simplejwt\tokens.py", line 238, in for_user
    user_id = getattr(user, api_settings.USER_ID_FIELD)
AttributeError: 'Custom_User' object has no attribute 'id'
2025-07-19 00:19:48,897 INFO auth_api [RegisterView] Incoming registration request: data={'username': 'temp1', 'email': 'temp1@temp.com'}

2025-07-19 00:19:48,899 WARNING auth_api [RegisterView] Registration failed: status=400, errors={'username': [ErrorDetail(string='A user with that username already exists.', code='unique')]}, req={'username': 'temp1', 'email': 'temp1@temp.com'}

2025-07-19 00:20:05,042 INFO auth_api [RegisterView] Incoming registration request: data={'username': 'temp2', 'email': 'temp2@temp.com'}

2025-07-19 00:20:05,375 INFO auth_api [RegisterView] Registration success: status=201, resp={'message': 'User created. Verification PIN sent to email.', 'user_id': 'b7c87403-4542-46b8-b2ba-f50c1adb879a', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.', 'email': None, 'onboarding': True}

2025-07-19 00:20:21,048 INFO auth_api [RegisterView] Incoming registration request: data={'username': 'temp3', 'email': 'temp3@temp.com'}

2025-07-19 00:20:21,085 INFO auth_api [RegisterView] Registration success: status=201, resp={'message': 'User created. Verification PIN sent to email.', 'user_id': '09e17812-6522-495a-acdc-103e4c8af2ac', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyODc3NTIxLCJpYXQiOjE3NTI4NzcyMjEsImp0aSI6ImM5ZTYzNzI1ZGVlYTQ1MjRhZmMwNDk0YjhhZjgxOGQyIiwidXNlcl9pZCI6IjA5ZTE3ODEyLTY1MjItNDk1YS1hY2RjLTEwM2U0YzhhZjJhYyJ9.NEVcEHlTNHJFaj582fdnn0SRn1QKG55BnuR4T3O_h0A', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk2MzYyMSwiaWF0IjoxNzUyODc3MjIxLCJqdGkiOiI1NjVkOTFhNmVlM2Q0YWM3YTBmYjUxMDFkOGQ4YWFmNiIsInVzZXJfaWQiOiIwOWUxNzgxMi02NTIyLTQ5NWEtYWNkYy0xMDNlNGM4YWYyYWMifQ.G3Wgx9sZJV-zIKTBU2FniiIdGBgFlwKztGU8vQNITfg', 'email': None, 'onboarding': True}

2025-07-19 00:36:48,686 | INFO | auth_api | [RegisterView] Incoming registration request: data={'username': 'temp4', 'email': 'temp4@temp.com'}

2025-07-19 00:36:48,793 | INFO | auth_api | [RegisterView] Registration success: status=201, resp={'message': 'User created. Verification PIN se

2025-07-19 00:36:59,117 | INFO | auth_api | [RegisterView] Incoming registration request: data={'username': 'temp4', 'email': 'temp4@temp.com'}

2025-07-19 00:36:59,118 | WARNING | auth_api | [RegisterView] Registration failed: status=400, errors={'username': [ErrorDetail(string='A user with

2025-07-19 00:41:08,301	|	INFO	|	auth_api	|	 [VisitorLoginView] Incoming visitor login request: data={'anon_id': '235d8a36-2c89-400d-b0e9-474d299

2025-07-19 00:41:08,339	|	INFO	|	auth_api	|	 [VisitorLoginView] Visitor login success: status=201, resp={'message': 'Visitor session started.', '

2025-07-19 00:41:08,382	|	INFO	|	auth_api	|	 [HealthCheckView] Health check performed.

2025-07-19 00:41:08,382	|	INFO	|	auth_api	|	 [HealthCheckView] Health check response: status=200, resp={'status': 'ok', 'message': 'Server is up'

2025-07-19 00:59:11,220 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 00:59:11,234 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 00:59:24,443 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data={'username': 'temp5', 'email': 'temp5@email.com'}
2025-07-19 00:59:24,553 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp={'message': 'User created. Verification PIN sent to email.', 'user_id': 
'360d418e-e435-4263-a71c-efd59d1e74a4', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2
tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyODc5ODY0LCJpYXQiOjE3NTI4Nzk1NjQsImp0aSI6IjJmOWE1ZmU3ODQ2MjRlM2
ViODFlMzNiM2YyNTBkNDQ5IiwidXNlcl9pZCI6IjM2MGQ0MThlLWU0MzUtNDI2My1hNzFjLWVmZDU5ZDFlNzRhNCJ9.FoSV6pq39
PNqdzk6_6O0KS5smHVt5RadCS_I_fGJei8', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tl
bl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk2NTk2NCwiaWF0IjoxNzUyODc5NTY0LCJqdGkiOiJhNDY1NDFlOGI1NzM0ZmE3
YTEyN2JjYWQyMzc5NmNkMyIsInVzZXJfaWQiOiIzNjBkNDE4ZS1lNDM1LTQyNjMtYTcxYy1lZmQ1OWQxZTc0YTQifQ.pTSOlXfZz
sSECHC6yhF7hZJvt1IZqHlKtWI7HcNjFrY', 'email': None, 'onboarding': True}
2025-07-19 01:07:50,950 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 01:07:50,950 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 01:08:07,615 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data={'username': 'temp6', 'email': 'temp6@email.com'}
2025-07-19 01:08:07,637 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp={'message': 'User created. Verification PIN sent to email.', 'user_id': 
'e78c0ab9-71ce-40f0-867b-d0dfaabc4956', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2
tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyODgwMzg3LCJpYXQiOjE3NTI4ODAwODcsImp0aSI6IjExMmJhNDY5OTViMjRlN2
U4NGZlNTg3NDM1ODk4OWQ1IiwidXNlcl9pZCI6ImU3OGMwYWI5LTcxY2UtNDBmMC04NjdiLWQwZGZhYWJjNDk1NiJ9.9EjPev54j
3dEAAMqnE-Djt-GF0EAln--H_Awf2eRQRw', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tl
bl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk2NjQ4NywiaWF0IjoxNzUyODgwMDg3LCJqdGkiOiJhODFlODUwNDZhODg0ZDcy
OWE0MGRiOTdmZTZiNDc3MCIsInVzZXJfaWQiOiJlNzhjMGFiOS03MWNlLTQwZjAtODY3Yi1kMGRmYWFiYzQ5NTYifQ.T6RWmbc0M
zMP6puVEP5cZtRp5L3eFbCi4FKvJ2NeiKs', 'email': None, 'onboarding': True}
2025-07-19 01:31:43,394 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data={'username': 'temp7', 'email': 'temp7@email.com'}
2025-07-19 01:31:43,416 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp={'message': 'User created. Verification PIN sent to email.', 'user_id': 
'c329a6dd-64ee-4cee-8cf8-47bf16375e96', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2
tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyODgxODAzLCJpYXQiOjE3NTI4ODE1MDMsImp0aSI6IjExMzU2YjVhZjBjZDRhYz
c5OTQ1ODNlZDVkYjUyYjBmIiwidXNlcl9pZCI6ImMzMjlhNmRkLTY0ZWUtNGNlZS04Y2Y4LTQ3YmYxNjM3NWU5NiJ9.Wnzeumt2q
pHD-eXgfVE3R2p0OqQinBRn9VL9NvEIQx4', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tl
bl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk2NzkwMywiaWF0IjoxNzUyODgxNTAzLCJqdGkiOiI2ZjcwOTc5MmFiOTQ0ZmVi
YTY2YzdmZDYzY2RkZDRlZCIsInVzZXJfaWQiOiJjMzI5YTZkZC02NGVlLTRjZWUtOGNmOC00N2JmMTYzNzVlOTYifQ.YVA3vPaFG
YPZ9gujMDSzGsNzXHKAzS0E2pR4M-qeGoQ', 'email': None, 'onboarding': True}
2025-07-19 01:32:43,818 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 01:32:43,818 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 01:33:03,082 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data={'username': 'temp8', 'email': 'temp8@email.com'}
2025-07-19 01:33:03,125 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp={'message': 'User created. Verification PIN sent to email.', 'user_id': 
'ee40a970-bb0e-46f3-9708-c38111628db2', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2
tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyODgxODgzLCJpYXQiOjE3NTI4ODE1ODMsImp0aSI6IjY1MjI2MDFjMWIzNjRlMT
Y5MzkzYjFmNjU4OThmYTc2IiwidXNlcl9pZCI6ImVlNDBhOTcwLWJiMGUtNDZmMy05NzA4LWMzODExMTYyOGRiMiJ9.vxnyOkA-
fozcXNrHuEcmU8tz5HuoLYAuM15hHIWCghk', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2t
lbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk2Nzk4MywiaWF0IjoxNzUyODgxNTgzLCJqdGkiOiIzYmZiNzlmOGE2YTU0NDl
lODU1YjRkZjVhNWNkNTgwMyIsInVzZXJfaWQiOiJlZTQwYTk3MC1iYjBlLTQ2ZjMtOTcwOC1jMzgxMTE2MjhkYjIifQ.7Vdcoso1
8vw_w0qjBLTvucYVGfUEEXB3sczavz42Qp4', 'email': None, 'onboarding': True}
2025-07-19 01:51:45,064 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 01:51:45,064 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 01:52:02,460 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'temp8', 'email': 'temp8@email.com'}
2025-07-19 01:52:02,462 |       WARNING |       auth_api        |       [RegisterView] Registration 
failed: status=400, errors={'username': [ErrorDetail(string='A user with that username already 
exists.', code='unique')]}, req={'username': 'temp8', 'email': 'temp8@email.com'}
2025-07-19 01:52:17,326 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'temp9', 'email': 'temp9@email.com'}
2025-07-19 01:52:17,644 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': '24040b74-35d1-4bbd-b5bf-3bb3ea3f7333', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyODgzMDM3LCJpYXQiOjE3NTI4ODI3MzcsImp0aSI6IjI0MDQwMTh
mYTI3OTQ5MjM4YjA0YjQ1MTQ2OGI2YTM0IiwidXNlcl9pZCI6IjI0MDQwYjc0LTM1ZDEtNGJiZC1iNWJmLTNiYjNlYTNmNzMzMyJ
9.PhQsOZJr9mBb5N2O7Iyc7uhEGF28EDWlBWqQXJDxeWg', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk2OTEzNywiaWF0IjoxNzUyODgyNzM3LCJqdGkiOiIzYTEyZjU3O
GJkMTQ0Mjk4OGRkZDZjNGU1ZTUzNDExOCIsInVzZXJfaWQiOiIyNDA0MGI3NC0zNWQxLTRiYmQtYjViZi0zYmIzZWEzZjczMzMif
Q.l4DYxHzEkt3R1A6AvRlhSNokh02Be9yTfoYrknxewxk', 'email': None, 'onboarding': True}
2025-07-19 01:52:58,297 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'sanad', 'email': 'sanad.arousi@gmail.com'}
2025-07-19 01:52:58,339 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': 'bcf3a17c-3561-4e6f-b5ca-f7fdd477bc3f', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyODgzMDc4LCJpYXQiOjE3NTI4ODI3NzgsImp0aSI6IjgxODAxMmM
wZjdiNzQ5ZDNhZjMwN2MwYWZhMjkzNzg3IiwidXNlcl9pZCI6ImJjZjNhMTdjLTM1NjEtNGU2Zi1iNWNhLWY3ZmRkNDc3YmMzZiJ
9.7G5GibD4LhW4zJsywzs9x0XDys8p7_AGTuwc6jR2l9o', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk2OTE3OCwiaWF0IjoxNzUyODgyNzc4LCJqdGkiOiJiNzU0NDE1M
zJhOWQ0MDM1YmE4N2YyMGZhY2E1ZjJjMSIsInVzZXJfaWQiOiJiY2YzYTE3Yy0zNTYxLTRlNmYtYjVjYS1mN2ZkZDQ3N2JjM2Yif
Q.7doCftRv5t_XQS1qbqwSvsujwpxRYE0kf5s-Ipe2JcI', 'email': None, 'onboarding': True}
2025-07-19 01:52:58,461 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 01:52:58,461 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 01:59:32,158 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'sanad2', 'email': 'sanad.arousi@outlook.com'}
2025-07-19 01:59:32,262 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': 'd0ff7dd9-4ffd-4889-a363-982e83411ebc', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyODgzNDcyLCJpYXQiOjE3NTI4ODMxNzIsImp0aSI6Ijg0MGUwZDg
yYmUwZjQ4ZTc4MjQ5MGNkOTRkMDgyOWM5IiwidXNlcl9pZCI6ImQwZmY3ZGQ5LTRmZmQtNDg4OS1hMzYzLTk4MmU4MzQxMWViYyJ
9.t5Puso8zDFembD-tzKOcdShbQRXibmt2r4_AiQlCZps', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk2OTU3MiwiaWF0IjoxNzUyODgzMTcyLCJqdGkiOiI5NzcxNzQ4Y
zk1NDI0MDBlYTk4YTMxOTRkYWQ3MWI2YyIsInVzZXJfaWQiOiJkMGZmN2RkOS00ZmZkLTQ4ODktYTM2My05ODJlODM0MTFlYmMif
Q.nZtgEieMwyGJ7ZxxsGeyKKogdTCiJbZXYXtjqiDBjjE', 'email': None, 'onboarding': True}
2025-07-19 01:59:32,349 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 01:59:32,349 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 02:01:55,472 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 02:01:55,486 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 02:02:11,202 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'temp10', 'email': 'a.arousi@yahoo.com'}
2025-07-19 02:02:11,310 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': '61dce326-576f-4f85-a85a-4564545f1395', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyODgzNjMxLCJpYXQiOjE3NTI4ODMzMzEsImp0aSI6ImM4NjgxMmI
wNTJjMTRhOWQ4NzhjOTJjOTc1Y2ZkZGZlIiwidXNlcl9pZCI6IjYxZGNlMzI2LTU3NmYtNGY4NS1hODVhLTQ1NjQ1NDVmMTM5NSJ
9.W9Svx-hTw32bVzZitJN34qY5X2YLtGKM6TWKicxf4Qc', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk2OTczMSwiaWF0IjoxNzUyODgzMzMxLCJqdGkiOiI4MWJlYzBjO
GFiODk0NGJlYTdkMDZjNmQxYWJiNzc5YyIsInVzZXJfaWQiOiI2MWRjZTMyNi01NzZmLTRmODUtYTg1YS00NTY0NTQ1ZjEzOTUif
Q.9pQzS9ojt8FSG-NPti10v_ErkY6g884Gxk7ULpUdjkA', 'email': None, 'onboarding': True}
2025-07-19 02:20:11,125 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 02:20:11,126 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 02:20:39,450 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'temp11', 'email': 'a.arousi@yahoo.com'}
2025-07-19 02:20:39,460 |       WARNING |       auth_api        |       [RegisterView] Registration 
failed: status=400, errors={'email': [ErrorDetail(string='A user with this email already exists.', 
code='invalid')]}, req={'username': 'temp11', 'email': 'a.arousi@yahoo.com'}
2025-07-19 02:20:56,057 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'temp11', 'email': 'sanadalarousi99@gmail.com'}
2025-07-19 02:20:56,228 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': '485556c7-584a-460c-96e6-9e64f02187f6', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyODg0NzU2LCJpYXQiOjE3NTI4ODQ0NTYsImp0aSI6IjI4YTY3NTR
hMDFiOTQ3ZTNhYjA0YWUxY2E0NTE5OWZlIiwidXNlcl9pZCI6IjQ4NTU1NmM3LTU4NGEtNDYwYy05NmU2LTllNjRmMDIxODdmNiJ
9.n2ew35IN12KeXudDBaypKsbuNWwAq1E4XHnr_EOvjxk', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk3MDg1NiwiaWF0IjoxNzUyODg0NDU2LCJqdGkiOiJiMzcyNDRlY
zk2MTk0OTkwYmRmMTBmZTkwZGM2MWNkZiIsInVzZXJfaWQiOiI0ODU1NTZjNy01ODRhLTQ2MGMtOTZlNi05ZTY0ZjAyMTg3ZjYif
Q.4J4JWpfLMniQDa1W8TaaqYfXXsF3FQufnL4IGshTvlw', 'email': None, 'onboarding': True}
2025-07-19 02:35:05,937 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 02:35:05,937 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 02:35:18,338 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'user1', 'email': 'Libyan.p.a@gmail.com'}
2025-07-19 02:35:18,391 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': '69d2d633-d27f-4d0c-8fde-74cb6eaa3efb', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyODg1NjE4LCJpYXQiOjE3NTI4ODUzMTgsImp0aSI6ImVhMmNiZmE
0NzRjMTQwZTFhMGY3NDljNmExNWIxNDY2IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM2VmYiJ
9.wbGA7XJVmFBm3DMJjmGy9bNH_Tn007Ri2DZRrfyoRsE', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk3MTcxOCwiaWF0IjoxNzUyODg1MzE4LCJqdGkiOiIxY2UyN2E5M
jNjODA0MDllYmMzMmY1YTRhODQwNWJhOSIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTNlZmIif
Q.sn_jkH96tRDB_eXv1BfUpbRK_oP_vY4_v42QwocYhZ0', 'email': None, 'onboarding': True}
2025-07-19 03:05:24,811 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 03:05:24,811 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 03:06:02,034 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'temp10', 'user_password': 'a.arousi@yahoo.com'}
2025-07-19 03:06:02,036 |       WARNING |       auth_api        |       [LoginView] Login failed: 
status=400, errors={'non_field_errors': [ErrorDetail(string='Email not verified.', 
code='invalid')]}, req={'identifier': 'temp10', 'user_password': 'a.arousi@yahoo.com'}
2025-07-19 03:10:40,968 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'temp10', 'user_password': 'a.arousi@yahoo.com'}
2025-07-19 03:10:40,969 |       ERROR   |       auth_api        |       [LoginView] Login failed: no
 such column: user_mang_custom_user.email_pin, req={'identifier': 'temp10', 'user_password': 
'a.arousi@yahoo.com'}
Traceback (most recent call last):
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such column: user_mang_custom_user.email_pin
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
179, in post
    serializer.is_valid(raise_exception=True)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\rest_framework\serializers.py", line 223, in is_valid
    self._validated_data = self.run_validation(self.initial_data)
                           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\rest_framework\serializers.py", line 445, in run_validation
    value = self.validate(value)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", 
line 93, in validate
    user = Custom_User.objects.get(username=identifier)
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", 
line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 645, in get
    num = len(clone)
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 382, in __len__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 1928, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\db\models\sql\compiler.py", line 1574, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\utils.py", line 91, 
in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
django.db.utils.OperationalError: no such column: user_mang_custom_user.email_pin
2025-07-19 03:16:13,316 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 03:16:13,316 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 03:16:27,031 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'a.arousi@yahoo.com', 'user_password': ''}
2025-07-19 03:16:27,031 |       WARNING |       auth_api        |       [LoginView] Login failed: 
status=400, errors={'user_password': [ErrorDetail(string='This field may not be blank.', 
code='blank')]}, req={'identifier': 'a.arousi@yahoo.com', 'user_password': ''}
2025-07-19 03:22:49,673 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'a.arousi@yahoo.com', 'user_password': ''}
2025-07-19 03:22:49,753 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=61dce326-576f-4f85-a85a-4564545f1395, resp=resp={'message': 'Login successful', 
'user_id': UUID('61dce326-576f-4f85-a85a-4564545f1395'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyODg4NDY5LCJpYXQiOjE3NTI4ODgxNjksImp0aSI6ImZkY
mUzNmE3OGUxYTQxYTA4Y2UwZGFkZDgzNzdlY2E5IiwidXNlcl9pZCI6IjYxZGNlMzI2LTU3NmYtNGY4NS1hODVhLTQ1NjQ1NDVmM
TM5NSJ9.3Uyf1ab0ITgUdVpSLDndjbcR4dkqAESi5y0vp8yMdHc', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk3NDU2OSwiaWF0IjoxNzUyODg4MTY5LCJqdGkiOiJkNzY
3MDg3MDM4ZGY0MWM0YjZiMTg4ZDhiN2NlN2UwZSIsInVzZXJfaWQiOiI2MWRjZTMyNi01NzZmLTRmODUtYTg1YS00NTY0NTQ1ZjE
zOTUifQ.81_S35gAgLKR_PgqIeH7e_0uWfoN2EO1MT-oWRjMReE', 'session_key': None, 'email_verified': False}
2025-07-19 03:22:49,849 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 03:22:49,849 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 03:23:47,178 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'sanad.arousi@gmail.com', 'user_password': ''}
2025-07-19 03:23:47,179 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=bcf3a17c-3561-4e6f-b5ca-f7fdd477bc3f, resp=resp={'message': 'Login successful', 
'user_id': UUID('bcf3a17c-3561-4e6f-b5ca-f7fdd477bc3f'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyODg4NTI3LCJpYXQiOjE3NTI4ODgyMjcsImp0aSI6ImJmM
WVlNjY3YjI3NTQzNGU4MGE1NmM5OGI0ZGVmZjY5IiwidXNlcl9pZCI6ImJjZjNhMTdjLTM1NjEtNGU2Zi1iNWNhLWY3ZmRkNDc3Y
mMzZiJ9.gNFIDJpraYvmsBCYdpHuLefbSLMH3S5GMWt6lHAmI5Q', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk3NDYyNywiaWF0IjoxNzUyODg4MjI3LCJqdGkiOiIxMzZ
kZDNkMmE5ZTE0YzI1ODEzZjRjNzFlMWQ0YzY1ZCIsInVzZXJfaWQiOiJiY2YzYTE3Yy0zNTYxLTRlNmYtYjVjYS1mN2ZkZDQ3N2J
jM2YifQ.BO95YD6hiH2upcXgZriZNOq0Oe3B7PW0TLw6DJt44Ew', 'session_key': None, 'email_verified': False}
2025-07-19 03:23:47,278 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 03:23:47,278 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 03:38:19,923 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 03:38:19,923 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 03:38:32,164 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'sanad.arousi@outlook.com', 'user_password': ''}
2025-07-19 03:38:32,165 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=d0ff7dd9-4ffd-4889-a363-982e83411ebc, resp=resp={'message': 'Login successful', 
'user_id': UUID('d0ff7dd9-4ffd-4889-a363-982e83411ebc'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyODg5NDEyLCJpYXQiOjE3NTI4ODkxMTIsImp0aSI6ImMzY
mJiZGQ3MmMwODQ1OGU4OThmOGQ3MDM4MmQzNmEwIiwidXNlcl9pZCI6ImQwZmY3ZGQ5LTRmZmQtNDg4OS1hMzYzLTk4MmU4MzQxM
WViYyJ9.PuihvBL9DIEIRf0c4A75mQIxLZ0CktuQw2xROhfXysc', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk3NTUxMiwiaWF0IjoxNzUyODg5MTEyLCJqdGkiOiJlODV
lMTViZTY4Yjc0NGFlOWZhYzI3NTNlZTUyMTM3OCIsInVzZXJfaWQiOiJkMGZmN2RkOS00ZmZkLTQ4ODktYTM2My05ODJlODM0MTF
lYmMifQ.3xy6bbSxxjxhCX1tB_q7VHsiP144Y5j3Otfg-3tyNVA', 'session_key': None, 'email_verified': False}
2025-07-19 03:38:32,287 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 03:38:32,287 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 05:54:47,305 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': 'ab42b340-0dea-4eba-a658-9f223def3519', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T05:54:45.985972'}
2025-07-19 05:54:47,356 |       WARNING |       auth_api.serializer     |       Visitor creation 
failed: UNIQUE constraint failed: user_mang_visitor.username
2025-07-19 05:54:47,356 |       WARNING |       auth_api        |       [VisitorLoginView] Visitor 
login failed: status=400, errors={'anon_id': ErrorDetail(string='A visitor with this anon_id already
 exists.', code='invalid')}, req={'anon_id': 'ab42b340-0dea-4eba-a658-9f223def3519', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T05:54:45.985972'}
2025-07-19 05:54:47,469 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 05:54:47,469 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 05:55:44,976 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 05:55:44,976 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-19 05:57:00,083 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '2f079704-f16e-4a8b-9f01-a37886936c4f', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T05:56:58.780181'}
2025-07-19 05:57:00,122 |       WARNING |       auth_api.serializer     |       Visitor creation 
failed: UNIQUE constraint failed: user_mang_visitor.username
2025-07-19 05:57:00,123 |       WARNING |       auth_api        |       [VisitorLoginView] Visitor 
login failed: status=400, errors={'anon_id': ErrorDetail(string='A visitor with this anon_id already
 exists.', code='invalid')}, req={'anon_id': '2f079704-f16e-4a8b-9f01-a37886936c4f', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T05:56:58.780181'}
2025-07-19 06:20:03,634 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:20:03,634 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:20:22,628 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': '83562f4a-bef8-48b3-9ef0-9cf32605080d', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:20:21.325763'}
2025-07-19 06:20:22,632 |       WARNING |       auth_api.serializer     |       Visitor creation 
failed: UNIQUE constraint failed: user_mang_visitor.username
2025-07-19 06:20:22,632 |       WARNING |       auth_api        |       [VisitorLoginView] Visitor 
login failed: status=400, errors={'anon_id': ErrorDetail(string='A visitor with this anon_id already
 exists.', code='invalid')}, req={'anon_id': '83562f4a-bef8-48b3-9ef0-9cf32605080d', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:20:21.325763'}
2025-07-19 06:21:05,562 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': 'dc65922a-5092-4c3a-9b6f-6023baf90400', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:21:04.273405'}
2025-07-19 06:21:05,565 |       WARNING |       auth_api.serializer     |       Visitor creation 
failed: UNIQUE constraint failed: user_mang_visitor.username
2025-07-19 06:21:05,565 |       WARNING |       auth_api        |       [VisitorLoginView] Visitor 
login failed: status=400, errors={'anon_id': ErrorDetail(string='A visitor with this anon_id already
 exists.', code='invalid')}, req={'anon_id': 'dc65922a-5092-4c3a-9b6f-6023baf90400', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:21:04.273405'}
2025-07-19 06:21:10,416 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': 'd7241481-d761-406b-bdd3-7dbdaed1f03c', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:21:09.122682'}
2025-07-19 06:21:10,418 |       WARNING |       auth_api.serializer     |       Visitor creation 
failed: UNIQUE constraint failed: user_mang_visitor.username
2025-07-19 06:21:10,418 |       WARNING |       auth_api        |       [VisitorLoginView] Visitor 
login failed: status=400, errors={'anon_id': ErrorDetail(string='A visitor with this anon_id already
 exists.', code='invalid')}, req={'anon_id': 'd7241481-d761-406b-bdd3-7dbdaed1f03c', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:21:09.122682'}
2025-07-19 06:22:19,019 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': 'c6e3e8ea-d341-4888-8d59-818c8d9c3252', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:22:17.733398'}
2025-07-19 06:22:19,021 |       WARNING |       auth_api.serializer     |       Visitor creation 
failed: UNIQUE constraint failed: user_mang_visitor.username
2025-07-19 06:22:19,022 |       WARNING |       auth_api        |       [VisitorLoginView] Visitor 
login failed: status=400, errors={'anon_id': ErrorDetail(string='A visitor with this anon_id already
 exists.', code='invalid')}, req={'anon_id': 'c6e3e8ea-d341-4888-8d59-818c8d9c3252', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:22:17.733398'}
2025-07-19 06:24:09,197 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': 'fb652ee0-260d-4d95-ac91-cf59246a04fb', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:24:07.906502'}
2025-07-19 06:24:09,200 |       ERROR   |       auth_api        |       [VisitorLoginView] 
Unexpected visitor login error: UNIQUE constraint failed: user_mang_visitor.username, 
req={'anon_id': 'fb652ee0-260d-4d95-ac91-cf59246a04fb', 'device_id': 'AE3A.240806.036', 
'date_joined': '2025-07-19T06:24:07.906502'}
Traceback (most recent call last):
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 948, in get_or_create
    return self.get(**kwargs), False
           ~~~~~~~~^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 649, in get
    raise self.model.DoesNotExist(
        "%s matching query does not exist." % self.model._meta.object_name
    )
user_mang.models.visitor.Visitor.DoesNotExist: Visitor matching query does not exist.
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
sqlite3.IntegrityError: UNIQUE constraint failed: user_mang_visitor.username
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
34, in post
    visitor = serializer.save()
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", 
line 30, in create
    visitor, created = Visitor.objects.get_or_create(
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        anon_id=anon_id,
        ^^^^^^^^^^^^^^^^
        defaults=validated_data
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", 
line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 955, in get_or_create
    return self.create(**params), True
           ~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 679, in create
    obj.save(force_insert=True, using=self.db)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 892, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 998, in save_base
    updated = self._save_table(
        raw,
    ...<4 lines>...
        update_fields,
    )
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 1161, in _save_table
    results = self._do_insert(
        cls._base_manager, using, fields, returning_fields, raw
    )
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 1202, in _do_insert
    return manager._insert(
           ~~~~~~~~~~~~~~~^
        [self],
        ^^^^^^^
    ...<3 lines>...
        raw=raw,
        ^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", 
line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 1847, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\db\models\sql\compiler.py", line 1836, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\utils.py", line 91, 
in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
django.db.utils.IntegrityError: UNIQUE constraint failed: user_mang_visitor.username
2025-07-19 06:24:39,342 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:24:39,342 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:24:41,688 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': '3e0f1b94-8c8e-4ed9-a581-023378bfeb38', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:24:40.375345'}
2025-07-19 06:24:41,690 |       ERROR   |       auth_api        |       [VisitorLoginView] 
Unexpected visitor login error: UNIQUE constraint failed: user_mang_visitor.username, 
req={'anon_id': '3e0f1b94-8c8e-4ed9-a581-023378bfeb38', 'device_id': 'AE3A.240806.036', 
'date_joined': '2025-07-19T06:24:40.375345'}
Traceback (most recent call last):
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 948, in get_or_create
    return self.get(**kwargs), False
           ~~~~~~~~^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 649, in get
    raise self.model.DoesNotExist(
        "%s matching query does not exist." % self.model._meta.object_name
    )
user_mang.models.visitor.Visitor.DoesNotExist: Visitor matching query does not exist.
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
sqlite3.IntegrityError: UNIQUE constraint failed: user_mang_visitor.username
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
34, in post
    visitor = serializer.save()
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", 
line 30, in create
    visitor, created = Visitor.objects.get_or_create(
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        anon_id=anon_id,
        ^^^^^^^^^^^^^^^^
        defaults=validated_data
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", 
line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 955, in get_or_create
    return self.create(**params), True
           ~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 679, in create
    obj.save(force_insert=True, using=self.db)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 892, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 998, in save_base
    updated = self._save_table(
        raw,
    ...<4 lines>...
        update_fields,
    )
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 1161, in _save_table
    results = self._do_insert(
        cls._base_manager, using, fields, returning_fields, raw
    )
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 1202, in _do_insert
    return manager._insert(
           ~~~~~~~~~~~~~~~^
        [self],
        ^^^^^^^
    ...<3 lines>...
        raw=raw,
        ^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", 
line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 1847, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\db\models\sql\compiler.py", line 1836, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\utils.py", line 91, 
in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
django.db.utils.IntegrityError: UNIQUE constraint failed: user_mang_visitor.username
2025-07-19 06:25:05,471 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': 'b748619c-3623-466e-a87c-08faf4310b0d', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:25:04.186105'}
2025-07-19 06:25:05,473 |       ERROR   |       auth_api        |       [VisitorLoginView] 
Unexpected visitor login error: UNIQUE constraint failed: user_mang_visitor.username, 
req={'anon_id': 'b748619c-3623-466e-a87c-08faf4310b0d', 'device_id': 'AE3A.240806.036', 
'date_joined': '2025-07-19T06:25:04.186105'}
Traceback (most recent call last):
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 948, in get_or_create
    return self.get(**kwargs), False
           ~~~~~~~~^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 649, in get
    raise self.model.DoesNotExist(
        "%s matching query does not exist." % self.model._meta.object_name
    )
user_mang.models.visitor.Visitor.DoesNotExist: Visitor matching query does not exist.
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
sqlite3.IntegrityError: UNIQUE constraint failed: user_mang_visitor.username
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
34, in post
    visitor = serializer.save()
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", 
line 30, in create
    visitor, created = Visitor.objects.get_or_create(
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        anon_id=anon_id,
        ^^^^^^^^^^^^^^^^
        defaults=validated_data
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", 
line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 955, in get_or_create
    return self.create(**params), True
           ~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 679, in create
    obj.save(force_insert=True, using=self.db)
    ~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 892, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 998, in save_base
    updated = self._save_table(
        raw,
    ...<4 lines>...
        update_fields,
    )
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 1161, in _save_table
    results = self._do_insert(
        cls._base_manager, using, fields, returning_fields, raw
    )
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 1202, in _do_insert
    return manager._insert(
           ~~~~~~~~~~~~~~~^
        [self],
        ^^^^^^^
    ...<3 lines>...
        raw=raw,
        ^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\manager.py", 
line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\query.py", 
line 1847, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\db\models\sql\compiler.py", line 1836, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\utils.py", line 91, 
in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\backends\utils.py", 
line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
django.db.utils.IntegrityError: UNIQUE constraint failed: user_mang_visitor.username
2025-07-19 06:28:14,285 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': 'f091d937-6d4d-4ea5-b134-599b2dcd9b59', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:28:12.998235'}
2025-07-19 06:28:14,335 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp={'message': 'Visitor session started.', 'anon_id': 
'f091d937-6d4d-4ea5-b134-599b2dcd9b59', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 28, 12, 998235, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-19 06:28:14,380 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:28:14,380 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:41:26,881 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=None
2025-07-19 06:41:26,882 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-19 06:41:26,882 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp{'detail': 'Logged out successfully.'}
2025-07-19 06:42:53,345 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:42:53,345 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:43:02,650 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': '84366864-10c8-4f63-afeb-ce811c4e8117', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:43:01.343647'}
2025-07-19 06:43:02,695 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp={'message': 'Visitor session started.', 'anon_id': 
'84366864-10c8-4f63-afeb-ce811c4e8117', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 43, 1, 343647, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-19 06:43:02,742 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:43:02,742 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:43:23,037 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': '53ef70e9-f13f-4af1-8b0f-3782327dc7a7', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:43:21.751178'}
2025-07-19 06:43:23,057 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp={'message': 'Visitor session started.', 'anon_id': 
'53ef70e9-f13f-4af1-8b0f-3782327dc7a7', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 43, 21, 751178, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-19 06:43:23,103 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:43:23,103 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:43:40,510 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': 'e12dc452-16d6-44ab-841a-fe523c86f510', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:43:39.219896'}
2025-07-19 06:43:40,530 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp={'message': 'Visitor session started.', 'anon_id': 
'e12dc452-16d6-44ab-841a-fe523c86f510', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 43, 39, 219896, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-19 06:43:40,576 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:43:40,576 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:45:16,435 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:45:16,435 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:45:18,325 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': 'b7853bdb-7761-4fac-8d8e-01ff042d9606', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:45:17.025338'}
2025-07-19 06:45:18,367 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp={'message': 'Visitor session started.', 'anon_id': 
'b7853bdb-7761-4fac-8d8e-01ff042d9606', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 45, 17, 25338, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-19 06:45:18,415 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:45:18,415 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:48:06,723 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data{'identifier': 'user', 'user_password': ''}
2025-07-19 06:48:06,756 |       WARNING |       auth_api        |       [LoginView] Login failed: 
status=400, errors={'non_field_errors': [ErrorDetail(string='Invalid credentials', 
code='invalid')]}, req={'identifier': 'user', 'user_password': ''}
2025-07-19 06:48:40,292 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data{'identifier': 'user1', 'user_password': ''}
2025-07-19 06:48:40,496 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyOTAwODIwLCJpYXQiOjE3NTI5MDA1MjAsImp0aSI6IjhkY
2Y4ZWM4YTJkNDQ0ZTY5MjBhMTgyMDlmMjAxODk4IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.1MBXWYrAL5dT2N5uJACbQlT_d4_SifSMd05K98p2K3E', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk4NjkyMCwiaWF0IjoxNzUyOTAwNTIwLCJqdGkiOiI1ODE
3YzgxYjc3ZGQ0YzcyYmM3ZGY3N2I0MDkzOGFkMSIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.I6pQ42crm8aKphMRwHo_Nvz9mepmj1OhYfmdve48uag', 'session_key': None, 'email_verified': False}
2025-07-19 06:48:40,545 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:48:40,545 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:51:52,086 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': '184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T06:51:50.798355'}
2025-07-19 06:51:52,126 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-19 06:51:52,195 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:51:52,196 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:52:34,970 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data{'identifier': 'user1', 'user_password': ''}
2025-07-19 06:52:34,971 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyOTAxMDU0LCJpYXQiOjE3NTI5MDA3NTQsImp0aSI6IjkyM
mQ2N2I1YTA1NDQ1ODJiYmQ5NzU2ZTJlYTBjMzdjIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.Ta9za_-7hX_QzSf-5hPwP8h7pQXlBxZiA1UBAvT0O1Q', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk4NzE1NCwiaWF0IjoxNzUyOTAwNzU0LCJqdGkiOiI2ODE
3MTEwYmQ4MjY0MGNmYjc0YjQxMzM3MjY0M2JhYSIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.lrIcqTDPGewgVBgR4MIl7vyutqzt-2pKV1HqOO9dVwE', 'session_key': None, 'email_verified': False}
2025-07-19 06:52:35,015 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:52:35,015 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:54:37,848 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data{'identifier': 'user2', 'user_password': ''}
2025-07-19 06:54:37,849 |       WARNING |       auth_api        |       [LoginView] Login failed: 
status=400, errors={'non_field_errors': [ErrorDetail(string='Invalid credentials', 
code='invalid')]}, req={'identifier': 'user2', 'user_password': ''}
2025-07-19 06:54:45,715 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data{'identifier': 'user1', 'user_password': ''}
2025-07-19 06:54:45,716 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyOTAxMTg1LCJpYXQiOjE3NTI5MDA4ODUsImp0aSI6ImY5Z
DI0MzM2MTYwYzRjN2Q4ZTc3MGRkMjQ2YzNhMDdhIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.Ac0VpXJszvRcGEeVcspwDdhpNIsqyv9za2-zLbMM9Xs', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk4NzI4NSwiaWF0IjoxNzUyOTAwODg1LCJqdGkiOiJkYjB
mYWJiN2EyYjU0MzQ5YWQ0ZGVmOWU3MTIwZmMyZCIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.A02TNJvJYvwQ1DPzH63wegb1NT7CQynGQN1KByo4PzA', 'session_key': None, 'email_verified': False}
2025-07-19 06:54:45,760 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:54:45,760 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:55:57,367 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data{'identifier': 'user1', 'user_password': ''}
2025-07-19 06:55:57,369 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyOTAxMjU3LCJpYXQiOjE3NTI5MDA5NTcsImp0aSI6ImEwN
zhjNTk0MTAzMzRkZDliYmFjZWJiOGMxNjQ4ZmZjIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.fb0etb_-9-91C4aWR8TjBn64lxpH-8JF7szDPDIE4oo', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk4NzM1NywiaWF0IjoxNzUyOTAwOTU3LCJqdGkiOiI5ZDl
kODQxMGI5YWU0OWNjYjQxZGQ4MDM0MGUwZmJjMiIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.PYl0TLM6okcYcyFmdN0H3aQB63KYk3ek72-_ehc2WE0', 'session_key': None, 'email_verified': False}
2025-07-19 06:55:57,405 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:55:57,405 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:57:07,260 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:57:07,260 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 06:57:13,142 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data{'identifier': 'user1', 'user_password': ''}
2025-07-19 06:57:13,143 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyOTAxMzMzLCJpYXQiOjE3NTI5MDEwMzMsImp0aSI6ImI0N
jRhNWZhNmNiZTRiNDY4NjQyZDU3OTE1ZWEyMTQyIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.TBIg_g45V6MK17dr4noEqAo3ZMXz3qn_iDboyb1I8lg', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk4NzQzMywiaWF0IjoxNzUyOTAxMDMzLCJqdGkiOiI5NGI
wNTQ3YWNmYzU0OTk2OTZiZTM4NGZhYTNiYzA4MSIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.FINnfLO-LvJdoSZbXlFE2hmkck5gqqJNBJYWAGtHZ5I', 'session_key': None, 'email_verified': False}
2025-07-19 06:57:13,219 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 06:57:13,219 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 07:00:20,858 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data{'identifier': 'user1', 'user_password': ''}
2025-07-19 07:00:20,860 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyOTAxNTIwLCJpYXQiOjE3NTI5MDEyMjAsImp0aSI6ImY0M
DlmNmI3MGEzMTQ3ODhhNmQxMjNmOWM2Y2U3OTA0IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.t0YzySO-8ngFh4h_fBCzdZMT3PkU0_pjM2TVt7YAX4Q', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk4NzYyMCwiaWF0IjoxNzUyOTAxMjIwLCJqdGkiOiIxOTU
5MjU2MjRiODM0MDkxOWZlOGYwNDUxMmVkZGI4MCIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.qOy686GcAsLoXHjD_XeyYP8XsIxFwIdy2IU90QJ9P_U', 'session_key': None, 'email_verified': False}
2025-07-19 07:00:20,918 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 07:00:20,918 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 07:00:57,312 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': '3e6ed36b-681d-41b7-9dd8-5f4d9b9c3a62', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-19T07:00:56.021545'}
2025-07-19 07:00:57,354 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp={'message': 'Visitor session started.', 'anon_id': 
'3e6ed36b-681d-41b7-9dd8-5f4d9b9c3a62', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 7, 0, 56, 21545, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-19 07:00:57,393 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 07:00:57,393 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 07:01:54,789 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data{'identifier': 'user1', 'user_password': ''}
2025-07-19 07:01:54,790 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyOTAxNjE0LCJpYXQiOjE3NTI5MDEzMTQsImp0aSI6ImE4Y
jE4ZGExODRjZjQ2NWNhYjMwNDRjNjgxNzk2NzgyIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.pGaDSgLSiYReylyhJM986pa_UT2cP1Wt3fpQXjjr8ws', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk4NzcxNCwiaWF0IjoxNzUyOTAxMzE0LCJqdGkiOiJhMWU
zZWNkZWQ2ZTc0ZGIwYWZlNmE5NzY0Yzg5ZmEwNiIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.onRQdjcWvMEJX_yy2P0zgdLrH12X2TbpGP5QnLaJ0Qk', 'session_key': None, 'email_verified': False}
2025-07-19 07:01:54,841 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 07:01:54,841 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 07:04:47,632 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 07:04:47,632 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 07:04:53,044 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data{'identifier': 'user1', 'user_password': ''}
2025-07-19 07:04:53,047 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyOTAxNzkzLCJpYXQiOjE3NTI5MDE0OTMsImp0aSI6ImI3Y
TE5ODcxODMxODRiMGQ4MTkwZTUwODFlNmYxYjQ5IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9._fyPHuBaWo9eXobSOKNdOZaMgxaZNLWhRIrDSLcfP-k', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk4Nzg5MywiaWF0IjoxNzUyOTAxNDkzLCJqdGkiOiI5MDk
0NmEwNWMxMjA0MzFjYjQwNTg4ZmYwMjNlNWQxNyIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.8tx3cTt48TIs5n25XIIrvLKXsPtY1uQ7Q_q0j60iAmI', 'session_key': None, 'email_verified': False}
2025-07-19 07:04:53,178 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 07:04:53,178 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 07:06:48,472 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data{'identifier': 'user1', 'user_password': ''}
2025-07-19 07:06:48,473 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyOTAxOTA4LCJpYXQiOjE3NTI5MDE2MDgsImp0aSI6Ijk0Z
TY4NmRjN2M4MjQ0ZDNiZTEyNWNkMDgzMmJiNDViIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.J2RxxFUO8RFvHa-6qqZtIFGdKp-J0j8J-18n_H9k3hA', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk4ODAwOCwiaWF0IjoxNzUyOTAxNjA4LCJqdGkiOiIzYTh
hNjBlZDNmZGY0YzhlYmY5NWJjM2ZmNjg3MmE0MCIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.JqQkH_bUll9DoHEcx70PBQJo9SH4lcpX4dL6bLo2wLE', 'session_key': None, 'email_verified': False}
2025-07-19 07:06:48,543 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 07:06:48,543 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 07:07:01,706 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 07:07:01,706 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 07:07:04,441 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data{'identifier': 'user1', 'user_password': ''}
2025-07-19 07:07:04,442 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyOTAxOTI0LCJpYXQiOjE3NTI5MDE2MjQsImp0aSI6IjlhZ
GNjNzMxOTU1MDQ0YWU4OWMwNjY0ZGJmZTBlY2M0IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.TTV8fRdE-mhP2OlUQlDq8UAyjylmnKB8aNXzpr9bOj0', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk4ODAyNCwiaWF0IjoxNzUyOTAxNjI0LCJqdGkiOiIwMjk
3ZjQyNThjOTI0OTMwYTFkYTZkYmVjYTMyYmM2YyIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.ZI029dkiNpIBFstMIwWtsa8ObbLKt0CcqTYmViweQpY', 'session_key': None, 'email_verified': False}
2025-07-19 07:07:04,512 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 07:07:04,513 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 07:08:20,484 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 07:08:20,484 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 07:08:24,823 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data{'identifier': 'user1', 'user_password': ''}
2025-07-19 07:08:24,825 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyOTAyMDA0LCJpYXQiOjE3NTI5MDE3MDQsImp0aSI6IjYzM
jA0ZTdhNjhhYTRjMGU4M2M3MjVhNzdkYWViNTg5IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.sQINi1RLRPej7ApGMLOmUKHMnlWJ1ag0XQJ5Vmf1nNM', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk4ODEwNCwiaWF0IjoxNzUyOTAxNzA0LCJqdGkiOiJmYjM
0ZDUxMWFmYjE0ZjJiOWNlZDBmYWI2NGY2OWJmNyIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.ishlKzXPUoSPJxIPADou6BhZVEDAiiIgCLki--RS3E8', 'session_key': None, 'email_verified': False}
2025-07-19 07:08:24,899 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 07:08:24,899 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 07:29:51,060 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 07:29:51,061 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-19 07:29:52,113 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': '27bffaea-8345-4231-96fa-12a6c84d4873', 'device_id': 
'AQ3A.240912.001', 'date_joined': '2025-07-19T07:29:20.360670'}
2025-07-19 07:29:52,132 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp={'message': 'Visitor session started.', 'anon_id': 
'27bffaea-8345-4231-96fa-12a6c84d4873', 'device_id': 'AQ3A.240912.001', 'date_joined': 
datetime.datetime(2025, 7, 19, 7, 29, 20, 360670, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-19 07:29:55,369 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': '162c765e-b834-4f42-886e-fa9e5b6f8dc8', 'device_id': 
'AQ3A.240912.001', 'date_joined': '2025-07-19T07:29:23.483860'}
2025-07-19 07:29:55,413 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp={'message': 'Visitor session started.', 'anon_id': 
'162c765e-b834-4f42-886e-fa9e5b6f8dc8', 'device_id': 'AQ3A.240912.001', 'date_joined': 
datetime.datetime(2025, 7, 19, 7, 29, 23, 483860, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-19 07:30:04,078 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data{'anon_id': 'bfc7fea6-d786-4402-8343-4b46cf7e5fa8', 'device_id': 
'AQ3A.240912.001', 'date_joined': '2025-07-19T07:29:32.395538'}
2025-07-19 07:30:04,099 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp={'message': 'Visitor session started.', 'anon_id': 
'bfc7fea6-d786-4402-8343-4b46cf7e5fa8', 'device_id': 'AQ3A.240912.001', 'date_joined': 
datetime.datetime(2025, 7, 19, 7, 29, 32, 395538, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-19 07:30:13,215 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data{'identifier': 'user1', 'user_password': ''}
2025-07-19 07:30:13,235 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUyOTAzMzEzLCJpYXQiOjE3NTI5MDMwMTMsImp0aSI6IjRkN
DI2NjkzOTVhZTQxNWM5MDUxZjE1OGI5NzAwMzI1IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.hZr35BqZPwhOsGUbJfCqp526mrHhNo-EALf4OjzI5Fk', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1Mjk4OTQxMywiaWF0IjoxNzUyOTAzMDEzLCJqdGkiOiI0OTN
jMjlmZDRlZmU0Yjk3YTRiNTQ4ODhhNDk1NjA0OCIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.RhMuATOnXAt5GgCHnK3lAWt7zXryLhXYUDoH8x8CfdU', 'session_key': None, 'email_verified': False}
2025-07-19 07:30:23,797 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-19 07:30:23,798 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp{'status': 'ok', 'message': 'Server is up'}
2025-07-20 17:10:30,127 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-20 17:10:30,151 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-20 17:11:50,386 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-20 17:11:50,739 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDI0NjEwLCJpYXQiOjE3NTMwMjQzMTAsImp0aSI6IjcyM
jA3M2Q1YTY3ZDRjNzZhZDU2YjkwMWEwODk2ZTQ0IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.IOmL0STFlt5OLdxIQs5a3nR7dEyP_lEWPntyIRT5xiE', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzExMDcxMCwiaWF0IjoxNzUzMDI0MzEwLCJqdGkiOiI0ZjE
1ZTM4MmRkMjY0OGI5YjVjZTFmN2MwODRlNWJmNiIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.Q4c1Ei2qsQ3lAcGrfJ68GCBAQ8QwhMsWhkOEFmhNBsc', 'session_key': None, 'email_verified': False}
2025-07-20 17:11:50,799 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-20 17:11:50,800 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-20 17:13:27,978 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-20 17:13:27,980 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDI0NzA3LCJpYXQiOjE3NTMwMjQ0MDcsImp0aSI6IjdmZ
GYxMDhkZDRmYjQ0MmNhMjU2MjljMzgyYmM5MDgxIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.o43g_gZzBXcUpfWz2x3K3wI2W1Mw3OECNxYtoYYrj-c', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzExMDgwNywiaWF0IjoxNzUzMDI0NDA3LCJqdGkiOiJmN2Y
zZDhiNTkxZDg0NDY4OTAyNGVmNDZjYjIwZTAyMCIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.Pm42bY0zdQDeXulXuTqRFUgLm1x7VjwIXUevhMrLVk4', 'session_key': None, 'email_verified': False}
2025-07-20 17:13:28,023 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-20 17:13:28,023 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-20 17:25:14,282 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-20 17:25:14,289 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDI1NDE0LCJpYXQiOjE3NTMwMjUxMTQsImp0aSI6IjY4M
WIyOGFjNmI5MjQ1OGNiOTVlMWFjN2U5NThjODJmIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.6T8G2RaxUTPYDpkCkupR_Do7BNwr_0o8306Pc0I4fAQ', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzExMTUxNCwiaWF0IjoxNzUzMDI1MTE0LCJqdGkiOiI3ZTQ
3ZWQ0NTlmOTY0ZDA4YjAyMDJhMjVmMDU5NWFhOSIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.JlhqYMPr-Wif1RBFt9ucovm7l5_sBmpSo14MIzpZIEQ', 'session_key': None, 'email_verified': False}
2025-07-20 17:25:14,336 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-20 17:25:14,336 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-20 17:26:20,037 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-20 17:26:20,039 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDI1NDgwLCJpYXQiOjE3NTMwMjUxODAsImp0aSI6IjFlN
zVmMzExNjIwNjQzYzJiNDdlNDUzMDZlMTJmYTVmIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9._j9S3gssboGWeqcc5Svt4gKPu_oy0V_9FqnoPKleWxo', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzExMTU4MCwiaWF0IjoxNzUzMDI1MTgwLCJqdGkiOiJiMDI
wYzIyMGM3YjA0OTJiOTBjNTk4N2VlYzAwN2NhZSIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.Kk_eNprgFuYTxZ-yJv2AXYWeykYMei-0b1TLrpluDh0', 'session_key': None, 'email_verified': False}
2025-07-20 17:26:20,089 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-20 17:26:20,089 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-20 17:30:09,132 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-20 17:30:09,133 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDI1NzA5LCJpYXQiOjE3NTMwMjU0MDksImp0aSI6IjYwO
DRiN2I4OGI2YzQ2ZjQ4YjczZjc4NWIyYTZmNjU1IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.PlwEuqpbzk1n_Zg8JRbnSeNBGMP6NzSgJ2MRZgp2PxA', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzExMTgwOSwiaWF0IjoxNzUzMDI1NDA5LCJqdGkiOiJhZjM
0Zjk0MDI0ZTY0YTRjOTNmYThlMzljYTAyMTAxMCIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.EPHQFMHWs3xOUobdpyc7CuJSMZDvMPxRer0Nb6FWzRo', 'session_key': None, 'email_verified': False}
2025-07-20 17:30:09,188 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-20 17:30:09,188 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-20 17:30:24,922 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-20 17:30:24,922 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-20 17:30:28,278 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-20 17:30:28,279 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDI1NzI4LCJpYXQiOjE3NTMwMjU0MjgsImp0aSI6IjkxN
Tc3N2JhMzZiNDRmYTViZTQxMmY5YWY4ZGMyZGU5IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.7VvpEBy6WdCgv0S1QY9ZE2GXLLmHs9VgfjBtUw261No', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzExMTgyOCwiaWF0IjoxNzUzMDI1NDI4LCJqdGkiOiI1NzU
2ZTdlMjM4ODQ0YjBmYjBlMWU0MWUxZDc4MzYyNCIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.3bFDO8P6Zd010vaJOmjx8JWU5qm6Al-6cY_qumMoYyQ', 'session_key': None, 'email_verified': False}
2025-07-20 17:30:28,338 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-20 17:30:28,338 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-20 18:11:37,893 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-20 18:11:37,893 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-20 18:12:01,871 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-20 18:12:01,879 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDI4MjIxLCJpYXQiOjE3NTMwMjc5MjEsImp0aSI6IjBiN
zg5MTk5ZDI4NDRjZDE4YjZjYTVmOTQyMjQwMzVmIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.K4ghQpOUDqE9VX-h0YPbeVneJA6BAEHJZ0525mp8lgQ', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzExNDMyMSwiaWF0IjoxNzUzMDI3OTIxLCJqdGkiOiI1ZWE
5ODRiZGRmNDc0NjhjYjZjMGE4NTZhZmE4M2EyMiIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.IbSDV6Q_SuT-mVLVam2wKTsxwllN2oVBj1wtOEUlWCs', 'session_key': None, 'email_verified': False}
2025-07-20 18:12:01,987 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-20 18:12:01,987 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-20 18:12:15,712 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=None
2025-07-20 18:12:15,713 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-20 18:12:15,713 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-07-21 07:11:06,601 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 07:11:06,615 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 07:12:02,360 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 07:12:02,360 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 07:13:34,188 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'user99', 'email': 'user99@user99.com'}
2025-07-21 07:13:34,229 |       ERROR   |       auth_api        |       [RegisterView] Unexpected 
registration error: 'Custom_User' object has no attribute 'profile_email_verified', req={'username':
 'user99', 'email': 'user99@user99.com'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
61, in post
    user = serializer.save()
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", 
line 67, in create
    user.full_clean()  # This will call model clean() and raise ValidationError if needed
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 1626, in full_clean
    self.clean()
    ~~~~~~~~~~^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-
end\prompeteer_server\user_mang\models\custom_user.py", line 44, in clean
    if self.profile_email_verified:
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Custom_User' object has no attribute 'profile_email_verified'
2025-07-21 07:25:35,216 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'user99', 'email': 'user99@user99.com'}
2025-07-21 07:25:35,218 |       ERROR   |       auth_api        |       [RegisterView] Unexpected 
registration error: 'Custom_User' object has no attribute 'profile_email_verified', req={'username':
 'user99', 'email': 'user99@user99.com'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
61, in post
    user = serializer.save()
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", 
line 67, in create
    user.full_clean()  # This will call model clean() and raise ValidationError if needed
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 1626, in full_clean
    self.clean()
    ~~~~~~~~~~^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-
end\prompeteer_server\user_mang\models\custom_user.py", line 44, in clean
    if self.profile_email_verified:
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Custom_User' object has no attribute 'profile_email_verified'
2025-07-21 07:27:28,885 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 07:27:28,885 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 07:27:41,873 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'user99', 'email': 'user99@user99.com'}
2025-07-21 07:27:41,874 |       ERROR   |       auth_api        |       [RegisterView] Unexpected 
registration error: 'Custom_User' object has no attribute 'profile_email_verified', req={'username':
 'user99', 'email': 'user99@user99.com'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
61, in post
    user = serializer.save()
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", 
line 67, in create
    user.full_clean()  # This will call model clean() and raise ValidationError if needed
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 1626, in full_clean
    self.clean()
    ~~~~~~~~~~^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-
end\prompeteer_server\user_mang\models\custom_user.py", line 44, in clean
    if self.profile_email_verified:
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Custom_User' object has no attribute 'profile_email_verified'
2025-07-21 07:30:01,176 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'user99', 'email': 'user99@user99.com'}
2025-07-21 07:30:01,177 |       ERROR   |       auth_api        |       [RegisterView] Unexpected 
registration error: 'Custom_User' object has no attribute 'profile_email_verified', req={'username':
 'user99', 'email': 'user99@user99.com'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
61, in post
    user = serializer.save()
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", 
line 67, in create
    user.full_clean()  # This will call model clean() and raise ValidationError if needed
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 1626, in full_clean
    self.clean()
    ~~~~~~~~~~^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-
end\prompeteer_server\user_mang\models\custom_user.py", line 44, in clean
    if self.profile_email_verified:
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Custom_User' object has no attribute 'profile_email_verified'
2025-07-21 07:30:08,167 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 07:30:08,167 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 07:30:27,820 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'user99', 'email': 'user99@user99.com'}
2025-07-21 07:30:27,822 |       ERROR   |       auth_api        |       [RegisterView] Unexpected 
registration error: 'Custom_User' object has no attribute 'profile_email_verified', req={'username':
 'user99', 'email': 'user99@user99.com'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
61, in post
    user = serializer.save()
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", 
line 67, in create
    user.full_clean()  # This will call model clean() and raise ValidationError if needed
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 1626, in full_clean
    self.clean()
    ~~~~~~~~~~^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-
end\prompeteer_server\user_mang\models\custom_user.py", line 44, in clean
    if self.profile_email_verified:
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Custom_User' object has no attribute 'profile_email_verified'
2025-07-21 07:34:29,545 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': 'ae1e165a-63bb-42c4-a2cb-47a6e29875f8', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T07:34:29.426368'}
2025-07-21 07:34:29,604 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'ae1e165a-63bb-42c4-a2cb-47a6e29875f8', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 7, 34, 29, 426368, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 07:41:21,111 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 07:41:21,112 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 07:48:26,442 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '98d9752d-07c1-4348-96b8-7c897e2cfa0f', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T07:48:26.322229'}
2025-07-21 07:48:26,480 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'98d9752d-07c1-4348-96b8-7c897e2cfa0f', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 7, 48, 26, 322229, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 07:53:34,949 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 07:53:34,950 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 07:53:36,870 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '26f566a8-23c9-413e-a8bf-17926be5b1a7', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T07:53:36.741866'}
2025-07-21 07:53:36,887 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'26f566a8-23c9-413e-a8bf-17926be5b1a7', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 7, 53, 36, 741866, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 07:57:06,628 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 07:57:06,628 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 07:59:56,184 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 07:59:56,184 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:00:10,286 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '672a1c5d-46e4-4074-abb6-46dacab2bb66', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T08:00:10.161134'}
2025-07-21 08:00:10,304 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'672a1c5d-46e4-4074-abb6-46dacab2bb66', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 8, 0, 10, 161134, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 08:00:10,367 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:00:10,367 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:05:29,921 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:05:29,921 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:06:09,648 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:06:09,648 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:06:24,363 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': 'e0c96fdc-cf75-435b-85e1-af572b434c42', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T08:06:24.240928'}
2025-07-21 08:06:24,381 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 'e0c96fdc-
cf75-435b-85e1-af572b434c42', 'device_id': 'AE3A.240806.036', 'date_joined': datetime.datetime(2025,
 7, 21, 8, 6, 24, 240928, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 08:06:24,446 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:06:24,446 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:06:42,514 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': 'a55f42e8-f1d6-4e96-84d6-ec534a6cc112', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T08:06:42.402847'}
2025-07-21 08:06:42,531 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'a55f42e8-f1d6-4e96-84d6-ec534a6cc112', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 8, 6, 42, 402847, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 08:14:49,610 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '87806d04-9a26-4f25-8622-0019a260e392', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T08:14:49.497821'}
2025-07-21 08:14:49,628 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'87806d04-9a26-4f25-8622-0019a260e392', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 8, 14, 49, 497821, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 08:14:59,132 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 08:14:59,478 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 08:14:59,484 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDc4Nzk5LCJpYXQiOjE3NTMwNzg0OTksImp0aSI6IjUyZ
GJiYTBjYmM5YzRlY2I5MzY1ZmEyNTczNjhiZWU2IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.dhVszijJJatn077QwVrcxyJEDc_yPMflMTxbF0t-L6M', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE2NDg5OSwiaWF0IjoxNzUzMDc4NDk5LCJqdGkiOiI2MDU
5NTA5YTk1YmE0MzlkOWE0NTYyMWE2Y2E5NTFmNSIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.Jq3XraEsXw43huToWM-mgqjYEcdP2xp8kFgvEVOYtrg', 'session_key': None, 'email_verified': False}
2025-07-21 08:14:59,486 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDc4Nzk5LCJpYXQiOjE3NTMwNzg0OTksImp0aSI6IjFlO
DE0ZGZjNTI5ZDQ5M2I5ZmYzZjY5MmIxOWJiMDAyIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.tGdgP0MvosKAkKW8vEprUehyfDgZGFGljK278HraHK0', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE2NDg5OSwiaWF0IjoxNzUzMDc4NDk5LCJqdGkiOiI0MjQ
xZmUyZjcwMDI0N2FlOWU1ZTRjZTQzZWEzMmY0NiIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.PCIGjbT6kN-JduwIutqbvumAieMLsvCq4Z_Fb5bX8ds', 'session_key': None, 'email_verified': False}
2025-07-21 08:17:25,425 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:17:25,425 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:21:33,249 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:21:33,249 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:34:22,447 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:34:22,447 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:35:38,969 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:35:38,970 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:39:00,971 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:39:00,971 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:39:03,477 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=None
2025-07-21 08:39:03,477 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-21 08:39:03,477 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-07-21 08:39:12,607 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 08:39:12,608 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDgwMjUyLCJpYXQiOjE3NTMwNzk5NTIsImp0aSI6IjhjZ
DI1ODk3MGJkZDRlODI5YzczY2NiOWUwOWY3NjM2IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.DtPCLzgNXeskkeSAnEvdTARP2tWtjl8_bUXfno9Zq3M', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE2NjM1MiwiaWF0IjoxNzUzMDc5OTUyLCJqdGkiOiI1OGF
iYzg0YjgzN2Q0NzRlODQzNmRjNTRkM2VlOGE0NSIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.iYkJ3kNBteFhcZLHskUw65pzabO4Iplp5GUlD0jgrgI', 'session_key': None, 'email_verified': False}
2025-07-21 08:47:10,523 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:47:10,523 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:47:14,547 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=None
2025-07-21 08:47:14,547 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-21 08:47:14,547 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-07-21 08:48:52,005 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:48:52,005 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:48:57,624 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 08:48:57,626 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDgwODM3LCJpYXQiOjE3NTMwODA1MzcsImp0aSI6IjRkO
GQ4NDQzNDkzMTQyNzRhZTdmYThkNzgxYTAwZDRlIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.xb4sCjbab95JYrjKFr6Mb4AomMLhY_HvwssLTmKa_Z0', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE2NjkzNywiaWF0IjoxNzUzMDgwNTM3LCJqdGkiOiI0Y2E
0MDQ0MTAxNGQ0NDE3OWY0NDg1YzdiMmZmMGU0MSIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.ukLoObGI9sSnYCnlRTRRrnuLjeptXv8DXex-D0A37Hs', 'session_key': None, 'email_verified': False}
2025-07-21 08:48:58,341 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=None
2025-07-21 08:48:58,341 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-21 08:48:58,341 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-07-21 08:49:01,743 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 08:49:01,745 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDgwODQxLCJpYXQiOjE3NTMwODA1NDEsImp0aSI6IjcyZ
jRmYWVjNDYwMjQ0MmRiOThkODA2NWViYTAyNDA2IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.cMFHrksCPaY_rgQ1synTT23V7496EXPiaiGq34Bn7Wo', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE2Njk0MSwiaWF0IjoxNzUzMDgwNTQxLCJqdGkiOiI5YTc
wY2Q2YzE0YWI0ZTA4YWFhMDMyYTdlM2MwNmRhNyIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.0qN30lVvIPjMqTmS-jSy-CqJMfYqxxqb00LIuemQu8g', 'session_key': None, 'email_verified': False}
2025-07-21 08:49:06,022 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=None
2025-07-21 08:49:06,022 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-21 08:49:06,022 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-07-21 08:49:39,229 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:49:39,229 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:52:40,995 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:52:40,995 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:52:42,737 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '66b8a504-d6f1-43ff-a920-0fc841ca2dea', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T08:52:42.608493'}
2025-07-21 08:52:42,756 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'66b8a504-d6f1-43ff-a920-0fc841ca2dea', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 8, 52, 42, 608493, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 08:52:46,128 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '2bbae69b-3b1f-49f5-bb2d-4588192ddfac', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T08:52:46.014446'}
2025-07-21 08:52:46,146 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'2bbae69b-3b1f-49f5-bb2d-4588192ddfac', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 8, 52, 46, 14446, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 08:52:46,207 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:52:46,208 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 08:52:52,821 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 08:52:52,822 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDgxMDcyLCJpYXQiOjE3NTMwODA3NzIsImp0aSI6ImNkM
mFmMTVhYjRkYzQ4NDQ5YTJkYmUyOTEwNWQ4NTM4IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9._y1Hsg8I0mediPDICl31NfxDbJc_BfQtxLm8-vN-ffM', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE2NzE3MiwiaWF0IjoxNzUzMDgwNzcyLCJqdGkiOiIyNTF
kODBlMDczZDc0NjEwOTE3ODdmZTE5Y2Q5Njg4OSIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.KsmX6_TwHJERCVvaUzycU8mSMSSKj0ypA2QOzyfPm0Y', 'session_key': None, 'email_verified': False}
2025-07-21 08:52:52,947 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 08:52:52,947 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 09:04:01,091 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 09:04:01,091 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 09:04:04,867 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=None
2025-07-21 09:04:04,867 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-21 09:04:04,867 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-07-21 09:04:10,258 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 09:04:10,260 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDgxNzUwLCJpYXQiOjE3NTMwODE0NTAsImp0aSI6ImUyM
2ZlOTFkOGVkYTQ3MWM4MTVlZTIwZTlkZjIwNWY0IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.ssK-TE5oan0a_HoZOfAVAxo-7FKuknfmRMIzYMUZTA8', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE2Nzg1MCwiaWF0IjoxNzUzMDgxNDUwLCJqdGkiOiIxMGE
zMDhlMzUxZGU0N2ViYmNhYjQ4ZjIyMDAyZmY4YSIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.vuq0n7RAKXEWjjiGHX5dWzVzvUymC44KC5_lMn2Ysic', 'session_key': None, 'email_verified': False}
2025-07-21 09:04:10,349 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 09:04:10,349 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 09:07:41,915 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 09:07:41,915 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 09:07:46,524 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=None
2025-07-21 09:07:46,524 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-21 09:07:46,524 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-07-21 09:07:51,461 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 09:07:51,462 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDgxOTcxLCJpYXQiOjE3NTMwODE2NzEsImp0aSI6IjI1Y
TMzMWM3MmI5NDRiYjNhMmQ2OWY5MjBkMTdhNDc2IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.k5BpF9vuB5E-Tk9p81WWNIjFyX9oeEQ7n5FZ7CKp3DU', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE2ODA3MSwiaWF0IjoxNzUzMDgxNjcxLCJqdGkiOiI5N2Y
5Yzg5OWU1MDU0NmZlOWQ1MTZiNmQxMTdkZjA3NiIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.j8xWuNgewFayn-6G4I95Gsv5TnqwYj1c-IUROaai548', 'session_key': None, 'email_verified': False}
2025-07-21 09:07:51,553 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 09:07:51,553 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 09:13:17,431 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 09:13:17,431 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 09:13:38,486 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=None
2025-07-21 09:13:38,486 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-21 09:13:38,486 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-07-21 09:13:43,282 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 09:13:43,284 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDgyMzIzLCJpYXQiOjE3NTMwODIwMjMsImp0aSI6IjBjY
jVmMTk1YjAwNDQxYmViZDJjZjVkZTE4MmE0YzU4IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.LM8z0SjyG0-zgThaSEYbrfeOkt0VqZ68B02kmuqLUx4', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE2ODQyMywiaWF0IjoxNzUzMDgyMDIzLCJqdGkiOiJlMjk
5ZjEwZTI5N2M0MjEwYTNiMTk5NDZlZDA5MDM1NSIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.CKC8noHxbU263xVuI6jNDM08GEFEEBh5x4O1owiXvBA', 'session_key': None, 'email_verified': False}
2025-07-21 09:13:43,383 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 09:13:43,383 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 09:31:45,573 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 09:31:45,573 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 09:37:39,979 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=None
2025-07-21 09:37:39,979 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-21 09:37:39,979 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-07-21 09:37:43,521 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 09:37:43,541 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDgzNzYzLCJpYXQiOjE3NTMwODM0NjMsImp0aSI6ImFmO
Dk1MWFlYTZjNjQwMWRiNDlhNWM2MTIyMWEwZDBhIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.z57HzsBW-VD6igjWKOWNzQLCeIWf2sqDIHGguT4O1WM', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE2OTg2MywiaWF0IjoxNzUzMDgzNDYzLCJqdGkiOiJmZjE
zMDU3YzEwYzA0YmM0OTczMjRmYjIzZjFjYzAyMiIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.ucELINBm6NWcMHEY1YbrIf00v1skN54y_72KXJn7thM', 'email_verified': False}
2025-07-21 09:37:43,647 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 09:37:43,647 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 09:44:33,051 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 09:44:33,051 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 10:00:03,478 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 10:00:03,480 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzUzMDg1MTAzLCJpYXQiOjE3NTMwODQ4MDMsImp0aSI6Ijc3Z
GZiODA0NTYyOTRmNjc5MDdhMDc5Yzc5NzZmNzgwIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.Oszq2cD5CeXY5UzO3vFnw_BbiaNghfyXYHurW7ejxb4', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE3MTIwMywiaWF0IjoxNzUzMDg0ODAzLCJqdGkiOiJiMTE
3ZjhhMThkMjM0MjA5YmJhYWQ2OTAzNmYwMDNhYyIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.SUQ8ozI28xyv4LFi0NNoYVgM_SMdwF3BFyShksdzVrc', 'email_verified': False}
2025-07-21 10:00:03,588 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 10:00:03,588 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 10:06:06,225 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 10:06:06,226 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1Njc3MTY2LCJpYXQiOjE3NTMwODUxNjYsImp0aSI6IjI4O
TI0ZmNhOWVkZDQyMDBiNmU1YmI4NDUwNTA3NDM4IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.-7RtiqzYwtSVgA6pw2wjAQHm5Z6qyO1p-WjgrH2x3rg', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE3MTU2NiwiaWF0IjoxNzUzMDg1MTY2LCJqdGkiOiIyOTF
hNzMwODJlNjM0ZGE1YmIxMjA2NDdlMjNjNjI5MCIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.rROnUcOgM0BM0nnT3Mirgc6qioeQ3A-yzXvYflbd2WU', 'email_verified': False}
2025-07-21 10:06:06,350 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 10:06:06,351 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 10:11:15,037 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'user00', 'email': 'user00@user00.com'}
2025-07-21 10:11:15,072 |       ERROR   |       auth_api        |       [RegisterView] Unexpected 
registration error: 'Custom_User' object has no attribute 'profile_email_verified', req={'username':
 'user00', 'email': 'user00@user00.com'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
61, in post
    user = serializer.save()
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-
packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", 
line 67, in create
    user.full_clean()  # This will call model clean() and raise ValidationError if needed
    ~~~~~~~~~~~~~~~^^
  File "C:\Users\Sanad\AppData\Roaming\Python\Python313\site-packages\django\db\models\base.py", 
line 1626, in full_clean
    self.clean()
    ~~~~~~~~~~^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-
end\prompeteer_server\user_mang\models\custom_user.py", line 44, in clean
    if self.profile_email_verified:
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Custom_User' object has no attribute 'profile_email_verified'
2025-07-21 10:13:06,703 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 10:13:06,705 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1Njc3NTg2LCJpYXQiOjE3NTMwODU1ODYsImp0aSI6ImFlN
TBlZDRhZGM1YzRiYTJhYzljMDk2YTIzYzFkNjI5IiwiaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTNlZmIif
Q.ZdlkCCK9QpF3sQZA-IsB5-p0PHNSas-QbatiD-v-W-0', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE3MTk4NiwiaWF0IjoxNzUzMDg1NTg2LCJqdGkiOiJhNThiZjRkO
DcwOTQ0ZGU3YjY4N2IxZTczYTI1MmI0NiIsImlkIjoiNjlkMmQ2MzMtZDI3Zi00ZDBjLThmZGUtNzRjYjZlYWEzZWZiIn0.Ypr-
aSt5RD_L5P5p7FymTRZe3ASkVB-9umrF9tTlrIs', 'email_verified': False}
2025-07-21 10:13:06,799 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 10:13:06,799 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 10:20:52,804 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 10:20:52,806 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1Njc4MDUyLCJpYXQiOjE3NTMwODYwNTIsImp0aSI6IjZkO
TczM2E2NjQxNDQwOWRiNmQzYzdkMWZhZmEyNDhmIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.88AH0llhobf4HVYaOHTnCU88Dwx49GHjn42yI747Xvo', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE3MjQ1MiwiaWF0IjoxNzUzMDg2MDUyLCJqdGkiOiJlMWM
zMDAyMDVlZTg0NThkYjljNzFhOTkyY2E2YjFmZiIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.z9GLFKSsxQcNC1kOFkJB_c89g7y-dN1aXe35ktRX92E', 'email_verified': False}
2025-07-21 10:20:52,889 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 10:20:52,889 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 10:30:36,695 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 10:30:36,696 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1Njc4NjM2LCJpYXQiOjE3NTMwODY2MzYsImp0aSI6IjUzY
jliMTVhZmVhNzQzYWY5NzhhZWFkOTU2Y2IzZDJmIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.eieuD4kHoSuIQhoBZNEVVL3vdeTf9bkjwOUfL6MW1TM', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE3MzAzNiwiaWF0IjoxNzUzMDg2NjM2LCJqdGkiOiIzYTB
jZGMxYzZhNjM0OWViYTJkNDE2ZjA2Mjk3MDNlMiIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.gSmpf9w_9m8WyizmuIo2C6n_-UDo-mdinO0THDl3qp4', 'email_verified': False}
2025-07-21 10:30:36,764 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 10:30:36,764 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 10:34:22,274 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 10:34:22,275 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1Njc4ODYyLCJpYXQiOjE3NTMwODY4NjIsImp0aSI6IjcyM
jYzYmE3YmE3MDRjYjg5NGRiMTVmNTA5NjhhMzYyIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.i4dKMiueGN-lF1R5UvyvBohF6haHf7fO9HQTF4pJako', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE3MzI2MiwiaWF0IjoxNzUzMDg2ODYyLCJqdGkiOiIyMTU
1ZTA1ZjYxNWY0MmIzYjVlZjAwZTJlZjhiYThkMyIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.Oe20UbZjeumOLPlXmz2SPNXHkJInH6l2VA9U7YQjNvM', 'email_verified': False}
2025-07-21 10:34:22,353 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 10:34:22,353 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 10:39:59,810 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 10:39:59,811 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1Njc5MTk5LCJpYXQiOjE3NTMwODcxOTksImp0aSI6ImUzN
GFhOGUxNmZjNTQ3ZTlhZjM1MWE4YjkzY2JkNGI0IiwidXNlcl9pZCI6Ik5vbmUifQ.QEULFvCqLCOophufJB4WeS0yAO2fGILVYb
qaIia3Suw', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsI
mV4cCI6MTc1MzE3MzU5OSwiaWF0IjoxNzUzMDg3MTk5LCJqdGkiOiI0MDliOWMzNGMwNzI0ZWM5YTJhNzkyODlmYWRiOTRiNiIsI
nVzZXJfaWQiOiJOb25lIn0.UsE-5DLyfXfDFJae8h4y2UrGNPsNmXdLAHnTn_ZurOU', 'email_verified': False}
2025-07-21 10:39:59,889 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 10:39:59,889 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 10:57:09,274 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 10:57:09,275 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1NjgwMjI5LCJpYXQiOjE3NTMwODgyMjksImp0aSI6IjcyZ
jM1N2FiODg0MDQ0MTA5NmI1MTNmMzIyNTMzNzNkIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.N0uDbrWYU3nPGgZPKvoKcUdW3qEVMPzOaDSFLHTbnvE', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE3NDYyOSwiaWF0IjoxNzUzMDg4MjI5LCJqdGkiOiJjYjM
yN2U4MzI5MzU0ZjEwYWYxNTc5NjNjNDJhOWZjYyIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.KIPtUs771dTJxfbRlfaPk8b7HFozdhr-YRlMWwMTvvI', 'email_verified': False}
2025-07-21 10:57:09,368 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 10:57:09,368 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 10:59:14,765 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 10:59:14,765 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 10:59:22,040 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 10:59:22,041 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1NjgwMzYyLCJpYXQiOjE3NTMwODgzNjIsImp0aSI6IjMxN
jI1ZDJhMDc3OTRjODI5NTkzMGJhYWNkN2M1ZDg0IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.EPH98rBFMLjgNPaB57_3yIF7HjxoqYwa5pDFV5E2QZo', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE3NDc2MiwiaWF0IjoxNzUzMDg4MzYyLCJqdGkiOiI2MTk
zNTc2ZWVmNGE0MjM1YjNhZTdlY2VjOTc1MmYwZiIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.51yeFwB-g_PsuDO8GWE4SH3MLU5ZcOtugjR4zojM7SE', 'email_verified': False}
2025-07-21 11:25:35,026 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 11:25:35,026 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 11:25:44,919 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb
2025-07-21 11:25:44,919 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-21 11:25:44,919 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-07-21 11:25:49,311 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 11:25:49,327 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1NjgxOTQ5LCJpYXQiOjE3NTMwODk5NDksImp0aSI6IjM3O
WJhZWUzNmE5YzQ2ZGU4NTFhZjZlYmYxNTdjNjQ5IiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.0Tog4HoWo9-D1-VKULniDD7Q4F67jDCQjgTQPWFnfGA', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE3NjM0OSwiaWF0IjoxNzUzMDg5OTQ5LCJqdGkiOiI4OTA
2MTdjNjViN2E0Nzc0OWY3OTAxNThmNTE0NDExOSIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.mtOtJYHNlNLbiJ0dB7YJlw1OHQlUpz-StxM-7jQGIV4', 'email_verified': False}
2025-07-21 11:25:49,436 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 11:25:49,436 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 11:28:24,607 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb
2025-07-21 11:28:24,607 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-21 11:28:24,607 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-07-21 11:28:28,466 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 11:28:28,468 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1NjgyMTA4LCJpYXQiOjE3NTMwOTAxMDgsImp0aSI6IjEwN
2M0YzQwYTQzMDQ4NTk5Y2QzOTdhZmRlNTM3NDIyIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.1ia42HKuS0oEQaf_r_U8TkNfTmyDfKvhEsNtAdYPTOE', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE3NjUwOCwiaWF0IjoxNzUzMDkwMTA4LCJqdGkiOiJjMjM
4ODllMDZmZGM0NDU3YTlkYTNmNDYyNjE1OTE4NyIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.RQSOppg-gYh8bBHbuis6AONo5dfcynuIEDW326x9ylQ', 'email_verified': False}
2025-07-21 11:28:28,557 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 11:28:28,558 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 11:43:58,985 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 11:43:58,986 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 11:44:05,422 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb
2025-07-21 11:44:05,422 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-21 11:44:05,422 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-07-21 11:44:07,594 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '90e33eee-04ad-43fd-8a1c-90be9da086fb', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T11:44:07.485808'}
2025-07-21 11:44:07,612 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'90e33eee-04ad-43fd-8a1c-90be9da086fb', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 11, 44, 7, 485808, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 11:44:12,646 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': 'f925d21a-d451-4df3-b358-42231a0a01ed', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T11:44:12.529502'}
2025-07-21 11:44:12,664 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'f925d21a-d451-4df3-b358-42231a0a01ed', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 11, 44, 12, 529502, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 11:44:57,349 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '1b74313a-1868-4882-b8b1-dfa88fb7dab9', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T11:44:57.228744'}
2025-07-21 11:44:57,386 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'1b74313a-1868-4882-b8b1-dfa88fb7dab9', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 11, 44, 57, 228744, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 11:46:39,938 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '3975ccf2-c1c0-4ed6-b115-6eb4d2565043', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T11:46:39.829717'}
2025-07-21 11:46:39,974 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'3975ccf2-c1c0-4ed6-b115-6eb4d2565043', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 11, 46, 39, 829717, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 11:48:46,080 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '1e254f56-728f-441e-94d8-21b5d62352a5', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T11:48:45.974899'}
2025-07-21 11:48:46,114 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'1e254f56-728f-441e-94d8-21b5d62352a5', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 11, 48, 45, 974899, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 11:48:49,968 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 11:48:49,968 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 11:48:53,204 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '2fb2b0ef-ac2f-4124-be98-d25ac3c622c8', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T11:48:53.085256'}
2025-07-21 11:48:53,222 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': '2fb2b0ef-
ac2f-4124-be98-d25ac3c622c8', 'device_id': 'AE3A.240806.036', 'date_joined': datetime.datetime(2025,
 7, 21, 11, 48, 53, 85256, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 12:01:42,105 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 12:01:42,105 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 12:01:44,968 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': 'e87f57a7-45c9-40aa-a309-564b3d84ff92', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T12:01:44.849381'}
2025-07-21 12:01:44,984 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'e87f57a7-45c9-40aa-a309-564b3d84ff92', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 12, 1, 44, 849381, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 12:02:14,392 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': 'c052c52a-815a-4f74-afc0-fe557282395f', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T12:02:14.279726'}
2025-07-21 12:02:14,427 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'c052c52a-815a-4f74-afc0-fe557282395f', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 12, 2, 14, 279726, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 12:02:14,513 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 12:02:14,513 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 12:18:09,752 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 12:18:09,752 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 12:18:12,012 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': 'e81a5480-ab7a-4026-a6c1-c450d9c6bb68', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T12:18:11.891939'}
2025-07-21 12:18:12,049 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'e81a5480-ab7a-4026-a6c1-c450d9c6bb68', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 12, 18, 11, 891939, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 12:24:26,717 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 12:24:26,717 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 12:24:27,646 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '9e0755d7-6d3d-4cf5-9127-f3c68025e186', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T12:24:27.528329'}
2025-07-21 12:24:27,664 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'9e0755d7-6d3d-4cf5-9127-f3c68025e186', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 12, 24, 27, 528329, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 12:25:22,928 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': 'd924d38d-f26e-4049-adb0-896da0e80f6c', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T12:25:22.814798'}
2025-07-21 12:25:22,965 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'd924d38d-f26e-4049-adb0-896da0e80f6c', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 12, 25, 22, 814798, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 12:25:23,049 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 12:25:23,049 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 12:25:29,553 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user1', 'user_password': ''}
2025-07-21 12:25:29,555 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb, resp=resp={'message': 'Login successful', 
'user_id': UUID('69d2d633-d27f-4d0c-8fde-74cb6eaa3efb'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1Njg1NTI5LCJpYXQiOjE3NTMwOTM1MjksImp0aSI6IjMwZ
TAyZTZmMTU0ZTQ3YmJhYTFjZjY1YmJiZTdhYzQwIiwidXNlcl9pZCI6IjY5ZDJkNjMzLWQyN2YtNGQwYy04ZmRlLTc0Y2I2ZWFhM
2VmYiJ9.X4IBW44-g8J2OlozeEIJ7nufHGiBNk4KiKH7yprki24', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE3OTkyOSwiaWF0IjoxNzUzMDkzNTI5LCJqdGkiOiJjZTJ
jNzBiOTA4ZGY0ZmUyYjc4YzdlZTgwNWEyMTljMCIsInVzZXJfaWQiOiI2OWQyZDYzMy1kMjdmLTRkMGMtOGZkZS03NGNiNmVhYTN
lZmIifQ.mmZTVmXe4Vf01my1AMfx8mn6i2sp2aPvwiFn4xB5Wbc', 'email_verified': False}
2025-07-21 12:25:29,661 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 12:25:29,661 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 12:29:45,095 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 12:29:45,095 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 14:42:45,515 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=69d2d633-d27f-4d0c-8fde-74cb6eaa3efb
2025-07-21 14:42:45,516 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-21 14:42:45,516 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-07-21 14:43:49,331 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 14:43:49,331 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 14:44:34,217 |       INFO    |       auth_api        |       [] Incoming 
registration request: data=data={'username': 'user13', 'email': 'user13@usRegisterViewer13.com'}
2025-07-21 14:44:34,308 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': 'c9297080-7ff3-4fbd-b8e9-35bad436282f', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1NjkzODc0LCJpYXQiOjE3NTMxMDE4NzQsImp0aSI6IjVkYmMwOTQ
1ZjdjMDRmYWU5NjFmNzNkMWFkMzkwYjcwIiwidXNlcl9pZCI6ImM5Mjk3MDgwLTdmZjMtNGZiZC1iOGU5LTM1YmFkNDM2MjgyZiJ
9.SUVX30kfVcHVQeABgHBWsegO3v19xKbNTqp8WwebfJI', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE4ODI3NCwiaWF0IjoxNzUzMTAxODc0LCJqdGkiOiI2ZWIzYTdhN
WQ3NjE0OWQwODUwMDY1MWM0ZGI5YTk3ZCIsInVzZXJfaWQiOiJjOTI5NzA4MC03ZmYzLTRmYmQtYjhlOS0zNWJhZDQzNjI4MmYif
Q.EnpEqP2I327S7quP0wLXkMdWXypjfOQQRqKcbkH1KJs', 'email': None, 'onboarding': True}
2025-07-21 14:47:57,167 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user13', 'user_password': ''}
2025-07-21 14:47:57,174 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=c9297080-7ff3-4fbd-b8e9-35bad436282f, resp=resp={'message': 'Login successful', 
'user_id': UUID('c9297080-7ff3-4fbd-b8e9-35bad436282f'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1Njk0MDc3LCJpYXQiOjE3NTMxMDIwNzcsImp0aSI6IjEwZ
jRkYWViMzEyMjQ5MjU4N2Q3ZmFiYTg3MGNhY2VmIiwidXNlcl9pZCI6ImM5Mjk3MDgwLTdmZjMtNGZiZC1iOGU5LTM1YmFkNDM2M
jgyZiJ9.EtGsjDi8ijG-7H5qSgh1GtSFKxSq6Aw0l8_f_1heX6c', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE4ODQ3NywiaWF0IjoxNzUzMTAyMDc3LCJqdGkiOiJhMmN
lZGVmMDlmOGY0ODhjYjExMGE1MzZkMzgwNTRmYSIsInVzZXJfaWQiOiJjOTI5NzA4MC03ZmYzLTRmYmQtYjhlOS0zNWJhZDQzNjI
4MmYifQ.oDJr_n_T-oqQF0PlCLhPHc-jvJTSif0Ww9LT1oI3T6c', 'email_verified': False}
2025-07-21 14:47:57,361 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 14:47:57,361 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 14:49:02,594 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=c9297080-7ff3-4fbd-b8e9-35bad436282f
2025-07-21 14:49:02,594 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-21 14:49:02,594 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-07-21 14:49:33,778 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '9b20be45-e565-4ff9-a105-0c21f4d5735f', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T14:49:33.668850'}
2025-07-21 14:49:33,798 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'9b20be45-e565-4ff9-a105-0c21f4d5735f', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 14, 49, 33, 668850, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 14:50:31,550 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '98190759-fbcc-431a-ad71-f45a79b183e2', 'device_id': 
'AE3A.240806.036', 'date_joined': '2025-07-21T14:50:31.440657'}
2025-07-21 14:50:31,587 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'98190759-fbcc-431a-ad71-f45a79b183e2', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 21, 14, 50, 31, 440657, tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-07-21 14:50:48,168 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'identifier': 'user13', 'user_password': ''}
2025-07-21 14:50:48,169 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=c9297080-7ff3-4fbd-b8e9-35bad436282f, resp=resp={'message': 'Login successful', 
'user_id': UUID('c9297080-7ff3-4fbd-b8e9-35bad436282f'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1Njk0MjQ4LCJpYXQiOjE3NTMxMDIyNDgsImp0aSI6ImQxY
TM0NjBmMjBkYzRhOGM5ZTJjZTA2ODFmNTU5ZWYyIiwidXNlcl9pZCI6ImM5Mjk3MDgwLTdmZjMtNGZiZC1iOGU5LTM1YmFkNDM2M
jgyZiJ9.FwkmdcVcJ-D-3NUOqm3WHypTP7mmF36ZC7did3wR5i4', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1MzE4ODY0OCwiaWF0IjoxNzUzMTAyMjQ4LCJqdGkiOiJiNzU
5NThhZmYzNmI0NWJiOTAzN2QxMDc2NTNhYjkxMiIsInVzZXJfaWQiOiJjOTI5NzA4MC03ZmYzLTRmYmQtYjhlOS0zNWJhZDQzNjI
4MmYifQ.-0mkZfAhJTe74Hya3soqtXCdViP9XXnpg9CWZ6E1B9M', 'email_verified': False}
2025-07-21 14:50:48,290 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-07-21 14:50:48,290 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-07-21 14:59:06,527 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=c9297080-7ff3-4fbd-b8e9-35bad436282f
2025-07-21 14:59:06,527 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-07-21 14:59:06,528 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-08-01 19:16:43,359 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '56fc1c96-44e4-4881-ad4f-687d91ea3b6d', 'device_id': 
'094dbc15-c27a-406a-afc0-14aa2226f65f', 'date_joined': '2025-08-01T17:16:43.024Z'}
2025-08-01 19:16:43,380 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'56fc1c96-44e4-4881-ad4f-687d91ea3b6d', 'device_id': '094dbc15-c27a-406a-afc0-14aa2226f65f', 
'date_joined': datetime.datetime(2025, 8, 1, 17, 16, 43, 24000, 
tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-08-01 19:30:49,927 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '286fac18-5145-4145-893c-48986dc60391', 'device_id': 
'cfd2d92c-1c5b-45a3-8210-b75413db7a57', 'date_joined': '2025-08-01T17:30:49.614Z'}
2025-08-01 19:30:49,948 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'286fac18-5145-4145-893c-48986dc60391', 'device_id': 'cfd2d92c-1c5b-45a3-8210-b75413db7a57', 
'date_joined': datetime.datetime(2025, 8, 1, 17, 30, 49, 614000, 
tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-08-01 19:31:22,989 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': 'fc6aee5d-0911-4130-b482-faa393008a55', 'device_id': 
'bba22f87-e6a2-4144-a20a-36e0c8c96d38', 'date_joined': '2025-08-01T17:31:22.988Z'}
2025-08-01 19:31:23,009 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'fc6aee5d-0911-4130-b482-faa393008a55', 'device_id': 'bba22f87-e6a2-4144-a20a-36e0c8c96d38', 
'date_joined': datetime.datetime(2025, 8, 1, 17, 31, 22, 988000, 
tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-08-01 19:31:56,148 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': 'e3ccbef1-a689-4dea-854a-a4aa8632e86f', 'device_id': 
'208a90b6-1ee3-48d6-8d32-bc01eca6ca31', 'date_joined': '2025-08-01T17:31:56.146Z'}
2025-08-01 19:31:56,171 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'e3ccbef1-a689-4dea-854a-a4aa8632e86f', 'device_id': '208a90b6-1ee3-48d6-8d32-bc01eca6ca31', 
'date_joined': datetime.datetime(2025, 8, 1, 17, 31, 56, 146000, 
tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-08-01 19:31:58,167 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': 'dd88b8a0-9c34-4ddb-8fe9-21fba4495f36', 'device_id': 
'5680416b-10bb-4716-8b97-a3adce8c6dc7', 'date_joined': '2025-08-01T17:31:58.166Z'}
2025-08-01 19:31:58,179 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'dd88b8a0-9c34-4ddb-8fe9-21fba4495f36', 'device_id': '5680416b-10bb-4716-8b97-a3adce8c6dc7', 
'date_joined': datetime.datetime(2025, 8, 1, 17, 31, 58, 166000, 
tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-08-01 19:32:01,859 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'anon_id': '4d3d9fae-5a6a-4292-8297-116dbfe81ff9', 'device_id': 
'3c99000e-4c39-4656-a266-94d1c67d75a6', 'date_joined': '2025-08-01T17:32:01.857Z'}
2025-08-01 19:32:01,867 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'4d3d9fae-5a6a-4292-8297-116dbfe81ff9', 'device_id': '3c99000e-4c39-4656-a266-94d1c67d75a6', 
'date_joined': datetime.datetime(2025, 8, 1, 17, 32, 1, 857000, 
tzinfo=zoneinfo.ZoneInfo(key='UTC'))}
2025-08-01 22:21:02,109 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-01 22:21:02,109 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-01 22:41:47,114 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={}
2025-08-01 22:41:47,114 |       WARNING |       auth_api        |       [VisitorLoginView] Visitor 
login failed: status=400, errors={'anon_id': [ErrorDetail(string='This field is required.', 
code='required')]}, req={}
2025-08-01 22:54:16,883 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'john_doe', 'email': 'john@example.com', 'password': 
'hashedpassword123'}
2025-08-01 22:54:17,216 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': '01dd0c43-93cc-439d-bc50-177337006965', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0MDgxOTU2LCJpYXQiOjE3NTQwODE2NTYsImp0aSI6ImI5ODA0MzN
mZTQzZTRkYzI5NzAwYzU1ZDgyNTk2MjRjIiwidXNlcl9pZCI6IjAxZGQwYzQzLTkzY2MtNDM5ZC1iYzUwLTE3NzMzNzAwNjk2NSJ
9.1yxmFgUf1CiXPurHOs4HqYFO2tod5TKgrIag5zvYtdE', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDE2ODA1NiwiaWF0IjoxNzU0MDgxNjU2LCJqdGkiOiI2NmJiNTBhN
GE5NWU0ZDEyOGExYTk4NzI1MjJlMmUzOCIsInVzZXJfaWQiOiIwMWRkMGM0My05M2NjLTQzOWQtYmM1MC0xNzczMzcwMDY5NjUif
Q.BmbFU1r0x9mQ6_kxxkZuIPAql5262U6-WgWVe687TAs', 'email': None, 'onboarding': True}
2025-08-01 23:12:37,717 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-01 23:12:37,717 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-01 23:12:58,074 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-01 23:12:58,074 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-01 23:13:06,410 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-01 23:13:06,410 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-02 19:43:56,790 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-02 19:43:56,790 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-02 19:44:23,158 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'device1'}
2025-08-02 19:44:23,158 |       WARNING |       auth_api        |       [VisitorLoginView] Visitor 
login failed: status=400, errors={'anon_id': [ErrorDetail(string='This field is required.', 
code='required')]}, req={'device_id': 'device1'}
2025-08-02 19:46:21,872 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'device1'}
2025-08-02 19:46:21,898 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'6238ec19-e743-40aa-995a-00bae6eea5af', 'device_id': 'device1', 'date_joined': 
datetime.datetime(2025, 8, 2, 17, 46, 21, 888454, tzinfo=datetime.timezone.utc)}
2025-08-02 19:52:57,381 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'device1'}
2025-08-02 19:52:57,418 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started successfully.', 'anon_id':
 '4bb79925-38a1-43b9-966b-181a528dcb7b', 'device_id': 'device1', 'date_joined': 
datetime.datetime(2025, 8, 2, 17, 52, 57, 383099, tzinfo=datetime.timezone.utc), 'fields_generated':
 ['anon_id']}
2025-08-02 20:00:52,010 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'device1'}
2025-08-02 20:01:19,688 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'device2'}
2025-08-02 20:01:19,725 |       ERROR   |       auth_api        |       [VisitorLoginView] 
Unexpected visitor login error: 'Visitor' object has no attribute 'user_id', req={'device_id': 
'device2'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
86, in post
    refresh = RefreshToken.for_user(visitor)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework_simplejwt\tokens.py", line 238, in for_user
    user_id = getattr(user, api_settings.USER_ID_FIELD)
AttributeError: 'Visitor' object has no attribute 'user_id'
2025-08-02 20:04:30,160 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'device2'}
2025-08-02 20:04:30,161 |       WARNING |       auth_api        |       [VisitorLoginView] Visitor 
login failed: status=400, errors={'anon_id': [ErrorDetail(string='This field is required.', 
code='required')]}, req={'device_id': 'device2'}
2025-08-02 20:09:08,361 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'device2'}
2025-08-02 20:09:08,363 |       ERROR   |       auth_api        |       [VisitorLoginView] 
Unexpected visitor login error: 'Visitor' object has no attribute 'user_id', req={'device_id': 
'device2'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
114, in post
    refresh = RefreshToken.for_user(visitor)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework_simplejwt\tokens.py", line 238, in for_user
    user_id = getattr(user, api_settings.USER_ID_FIELD)
AttributeError: 'Visitor' object has no attribute 'user_id'
2025-08-02 20:10:53,786 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'device2'}
2025-08-02 20:10:53,787 |       ERROR   |       auth_api        |       [VisitorLoginView] 
Unexpected visitor login error: 'Visitor' object has no attribute 'user_id', req={'device_id': 
'device2'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
114, in post
    refresh = RefreshToken.for_user(visitor)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework_simplejwt\tokens.py", line 238, in for_user
    user_id = getattr(user, api_settings.USER_ID_FIELD)
AttributeError: 'Visitor' object has no attribute 'user_id'
2025-08-02 20:11:48,283 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'device2'}
2025-08-02 20:11:48,284 |       WARNING |       auth_api        |       [VisitorLoginView] Visitor 
login failed: status=400, errors={'anon_id': [ErrorDetail(string='This field is required.', 
code='required')]}, req={'device_id': 'device2'}
2025-08-02 20:15:16,132 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'device2'}
2025-08-02 20:15:16,132 |       WARNING |       auth_api        |       [VisitorLoginView] Visitor 
login failed: status=400, errors={'anon_id': [ErrorDetail(string='This field is required.', 
code='required')]}, req={'device_id': 'device2'}
2025-08-02 20:15:24,714 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'device3'}
2025-08-02 20:15:24,714 |       WARNING |       auth_api        |       [VisitorLoginView] Visitor 
login failed: status=400, errors={'anon_id': [ErrorDetail(string='This field is required.', 
code='required')]}, req={'device_id': 'device3'}
2025-08-02 20:16:32,201 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'device3'}
2025-08-02 20:16:32,237 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'1e6a3ee5-4038-4a6c-ad17-65ad2103c1a2', 'device_id': 'device3', 'date_joined': 
datetime.datetime(2025, 8, 2, 18, 16, 32, 203940, tzinfo=datetime.timezone.utc)}
2025-08-02 21:30:05,555 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-02 21:30:05,559 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-02 21:30:07,263 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T21:30:06.253567'}
2025-08-02 21:30:07,378 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 21:30:07,437 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-02 21:30:07,438 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-02 21:30:35,862 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T21:30:34.881290'}
2025-08-02 21:30:35,890 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 21:33:40,041 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-02 21:33:40,041 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-02 21:33:41,864 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T21:33:40.877163'}
2025-08-02 21:33:41,894 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 21:33:41,949 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-02 21:33:41,949 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-02 21:33:57,304 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T21:33:56.320142'}
2025-08-02 21:33:57,342 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 21:34:59,586 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-02 21:34:59,586 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-02 21:35:11,223 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T21:35:10.231385'}
2025-08-02 21:35:11,243 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 21:35:28,275 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-02 21:35:28,275 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-02 21:35:30,394 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T21:35:29.400935'}
2025-08-02 21:35:30,424 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 21:38:28,964 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-02 21:38:28,964 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-02 21:38:31,985 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T21:38:30.987367'}
2025-08-02 21:38:32,010 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 21:38:46,628 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T21:38:45.636860'}
2025-08-02 21:38:46,650 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 21:40:28,983 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-02 21:40:28,983 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-02 21:40:30,237 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T21:40:29.239559'}
2025-08-02 21:40:30,262 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 21:40:35,572 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T21:40:34.591799'}
2025-08-02 21:40:35,598 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 21:40:39,096 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T21:40:38.115845'}
2025-08-02 21:40:39,122 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 21:40:40,049 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T21:40:39.062920'}
2025-08-02 21:40:40,071 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 21:40:40,990 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T21:40:40.009262'}
2025-08-02 21:40:41,018 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 21:41:06,482 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-02 21:41:06,482 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-02 21:41:08,603 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T21:41:07.602219'}
2025-08-02 21:41:08,622 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 22:03:02,018 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T22:03:00.989591'}
2025-08-02 22:03:02,039 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 22:04:35,181 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T22:04:34.152685'}
2025-08-02 22:04:35,201 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 22:05:37,935 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T22:05:36.909004'}
2025-08-02 22:05:37,955 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 22:06:32,626 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T22:06:31.597594'}
2025-08-02 22:06:32,662 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 22:06:33,004 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T22:06:32.018009'}
2025-08-02 22:06:33,029 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 22:07:49,490 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T22:07:48.465501'}
2025-08-02 22:07:49,509 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 22:15:34,877 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T22:15:33.847612'}
2025-08-02 22:15:34,898 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 22:18:17,596 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T22:18:16.570419'}
2025-08-02 22:18:17,610 |       INFO    |       auth_api        |       [VisitorLoginView] Visitor 
login success: status=201, resp=resp={'message': 'Visitor session started.', 'anon_id': 
'184470e9-707d-4c12-82f7-1c7646ec15b0', 'device_id': 'AE3A.240806.036', 'date_joined': 
datetime.datetime(2025, 7, 19, 6, 51, 50, 798355, tzinfo=datetime.timezone.utc)}
2025-08-02 22:18:17,876 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-02 22:18:17,876 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-02 22:25:50,549 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T22:25:49.529303'}
2025-08-02 22:25:50,556 |       ERROR   |       auth_api        |       [VisitorLoginView] 
Unexpected visitor login error: 'Visitor' object has no attribute 'user_id', req={'device_id': 
'AE3A.240806.036', 'timestamp': '2025-08-02T22:25:49.529303'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
57, in post
    refresh = RefreshToken.for_user(visitor)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework_simplejwt\tokens.py", line 238, in for_user
    user_id = getattr(user, api_settings.USER_ID_FIELD)
AttributeError: 'Visitor' object has no attribute 'user_id'
2025-08-02 22:25:55,088 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T22:25:54.099340'}
2025-08-02 22:25:55,110 |       ERROR   |       auth_api        |       [VisitorLoginView] 
Unexpected visitor login error: 'Visitor' object has no attribute 'user_id', req={'device_id': 
'AE3A.240806.036', 'timestamp': '2025-08-02T22:25:54.099340'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
57, in post
    refresh = RefreshToken.for_user(visitor)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework_simplejwt\tokens.py", line 238, in for_user
    user_id = getattr(user, api_settings.USER_ID_FIELD)
AttributeError: 'Visitor' object has no attribute 'user_id'
2025-08-02 22:26:17,677 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-02T22:26:16.687415'}
2025-08-02 22:26:17,696 |       ERROR   |       auth_api        |       [VisitorLoginView] 
Unexpected visitor login error: 'Visitor' object has no attribute 'user_id', req={'device_id': 
'AE3A.240806.036', 'timestamp': '2025-08-02T22:26:16.687415'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
57, in post
    refresh = RefreshToken.for_user(visitor)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework_simplejwt\tokens.py", line 238, in for_user
    user_id = getattr(user, api_settings.USER_ID_FIELD)
AttributeError: 'Visitor' object has no attribute 'user_id'
2025-08-06 08:40:16,504 |       INFO    |       auth_api        |       [VisitorLoginView] Incoming 
visitor login request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-06T08:40:16.029054'}
2025-08-06 08:40:16,520 |       ERROR   |       auth_api        |       [VisitorLoginView] 
Unexpected visitor login error: Field name `anon_id` is not valid for model `Custom_User` in 
`auth_api.serializer.VisitorSerializer`., req={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-06T08:40:16.029054'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
54, in post
    serializer.is_valid(raise_exception=True)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 223, in is_valid
    self._validated_data = self.run_validation(self.initial_data)
                           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 442, in run_validation
    value = self.to_internal_value(data)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 495, in to_internal_value
    for field in fields:
                 ^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 378, in _writable_fields
    for field in self.fields.values():
                 ^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\utils\functional.py", line 47, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
                                         ~~~~~~~~~^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 372, in fields
    for key, value in self.get_fields().items():
                      ~~~~~~~~~~~~~~~^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 1103, in get_fields
    field_class, field_kwargs = self.build_field(
                                ~~~~~~~~~~~~~~~~^
        source, info, model, depth
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 1249, in build_field
    return self.build_unknown_field(field_name, model_class)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 1367, in build_unknown_field
    raise ImproperlyConfigured(
    ...<2 lines>...
    )
django.core.exceptions.ImproperlyConfigured: Field name `anon_id` is not valid for model 
`Custom_User` in `auth_api.serializer.VisitorSerializer`.
2025-08-06 08:53:29,479 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 08:53:29,479 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 08:53:29,734 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 08:53:29,734 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 08:54:13,589 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 08:54:13,589 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 08:54:13,826 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 08:54:13,826 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 08:57:29,705 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 08:57:29,705 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 08:57:29,964 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 08:57:29,964 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 09:00:12,312 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 09:00:12,312 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 09:00:12,639 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 09:00:12,639 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 09:00:56,078 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T09:00:55.563425'}
2025-08-06 09:00:56,079 |       WARNING |       auth_api        |       [LoginView] Login failed: 
status=400, errors={'identifier': [ErrorDetail(string='This field is required.', code='required')], 
'user_password': [ErrorDetail(string='This field is required.', code='required')]}, 
req={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T09:00:55.563425'}
2025-08-06 09:01:14,884 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T09:01:14.410191'}
2025-08-06 09:01:14,884 |       WARNING |       auth_api        |       [LoginView] Login failed: 
status=400, errors={'identifier': [ErrorDetail(string='This field is required.', code='required')], 
'user_password': [ErrorDetail(string='This field is required.', code='required')]}, 
req={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T09:01:14.410191'}
2025-08-06 09:04:25,431 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T09:04:24.949690'}
2025-08-06 09:04:25,433 |       ERROR   |       auth_api        |       [LoginView] Login failed: no
 such column: user_mang_custom_user.is_visitor, req={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-06T09:04:24.949690'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such column: user_mang_custom_user.is_visitor
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
284, in post
    serializer.is_valid(raise_exception=True)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 223, in is_valid
    self._validated_data = self.run_validation(self.initial_data)
                           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 445, in run_validation
    value = self.validate(value)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", 
line 117, in validate
    user = Custom_User.objects.filter(device_id=device_id, is_visitor=True).first()
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\query.py", line 1097, in first
    for obj in queryset[:1]:
               ~~~~~~~~^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\query.py", line 400, in __iter__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\query.py", line 1928, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\sql\compiler.py", line 1574, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
django.db.utils.OperationalError: no such column: user_mang_custom_user.is_visitor
2025-08-06 09:04:29,983 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T09:04:29.511638'}
2025-08-06 09:04:29,984 |       ERROR   |       auth_api        |       [LoginView] Login failed: no
 such column: user_mang_custom_user.is_visitor, req={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-06T09:04:29.511638'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such column: user_mang_custom_user.is_visitor
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
284, in post
    serializer.is_valid(raise_exception=True)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 223, in is_valid
    self._validated_data = self.run_validation(self.initial_data)
                           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 445, in run_validation
    value = self.validate(value)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", 
line 117, in validate
    user = Custom_User.objects.filter(device_id=device_id, is_visitor=True).first()
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\query.py", line 1097, in first
    for obj in queryset[:1]:
               ~~~~~~~~^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\query.py", line 400, in __iter__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\query.py", line 1928, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\sql\compiler.py", line 1574, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
django.db.utils.OperationalError: no such column: user_mang_custom_user.is_visitor
2025-08-06 09:04:40,314 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T09:04:39.836665'}
2025-08-06 09:04:40,315 |       ERROR   |       auth_api        |       [LoginView] Login failed: no
 such column: user_mang_custom_user.is_visitor, req={'device_id': 'AE3A.240806.036', 'timestamp': 
'2025-08-06T09:04:39.836665'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
sqlite3.OperationalError: no such column: user_mang_custom_user.is_visitor
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
284, in post
    serializer.is_valid(raise_exception=True)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 223, in is_valid
    self._validated_data = self.run_validation(self.initial_data)
                           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 445, in run_validation
    value = self.validate(value)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", 
line 117, in validate
    user = Custom_User.objects.filter(device_id=device_id, is_visitor=True).first()
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\query.py", line 1097, in first
    for obj in queryset[:1]:
               ~~~~~~~~^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\query.py", line 400, in __iter__
    self._fetch_all()
    ~~~~~~~~~~~~~~~^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\query.py", line 1928, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
                         ~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
        chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size
    )
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\sql\compiler.py", line 1574, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
django.db.utils.OperationalError: no such column: user_mang_custom_user.is_visitor
2025-08-06 09:15:12,700 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T09:15:12.226123'}
2025-08-06 09:15:12,997 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDY0ODEyLCJpYXQiOjE3NTQ0NjQ1MTIsImp0aSI6IjQyY
WQ1NTM2MjJmYzRmNWM5MjdmNjNiNWVkNTA5ODZkIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.q_XOWzq805xs_5j4NubvFOCWrIPW9LwbyBw3RtuBYtg', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1MDkxMiwiaWF0IjoxNzU0NDY0NTEyLCJqdGkiOiI5Yzc
2MzRhNTQ2MGU0YjhkOTYwY2IzOTUxYWNkMGNlMyIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.rZWH4BOjH5InyDOCHP0b0gnuZPFFqciUQG1kPkQU3Fc', 'email_verified': False}
2025-08-06 09:18:14,890 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T09:18:14.365740'}
2025-08-06 09:18:14,892 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDY0OTk0LCJpYXQiOjE3NTQ0NjQ2OTQsImp0aSI6IjE5Y
zgwYzdkOTk1NTRlZjg5YjZkNjdhYThhYzhlOTgwIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.BBgMAfwy2CeHoKDAnjVPZjqCZja7cOrNcMyC7jwiM-M', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1MTA5NCwiaWF0IjoxNzU0NDY0Njk0LCJqdGkiOiIxOGY
1ZTM1ZDIxNTk0MjlkODYxNmZjYjY3MjVmYzcwNCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.WOQShIP47eZi3u5hspSrHTyii2SQ6I2AU5IPfgyRxs8', 'email_verified': False}
2025-08-06 09:18:22,370 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T09:18:21.892683'}
2025-08-06 09:18:22,372 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDY1MDAyLCJpYXQiOjE3NTQ0NjQ3MDIsImp0aSI6IjdkY
zA2MzJlOGE4ZTQxMTQ5YzU1ODdkN2FmYWY3MDdlIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.OeNRcyFkv3Bdt_Cty-L3IyOZH7F9fRh6cqGNVQfYMhI', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1MTEwMiwiaWF0IjoxNzU0NDY0NzAyLCJqdGkiOiJjOTl
iNTRkZjIwZjE0ZGM0ODRhNGZjOWI5MGZjNjI2YiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.089fCanaJcwUdmrZzQ15_3iLGlt-zIRn_ERE7KInBWE', 'email_verified': False}
2025-08-06 09:32:59,068 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T09:32:58.542872'}
2025-08-06 09:32:59,070 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDY1ODc5LCJpYXQiOjE3NTQ0NjU1NzksImp0aSI6ImM0Y
TEwNmM3MjJhOTQyYWQ5YzMzNzM4YjY1NDk3MmMwIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.YZrk-nbih5hyfAsdmPHVbT5NqWPyUanIFVimpzgHh-4', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1MTk3OSwiaWF0IjoxNzU0NDY1NTc5LCJqdGkiOiI5MDI
0NmE1MzMwYWE0ODcyOTc2OGRhMjI5OGRhZTgwMCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.xWCvQ-fJxoQgbKi7FW3lZ2ToQzRZNVJjAv81KGrADgw', 'email_verified': False}
2025-08-06 09:32:59,215 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 09:32:59,215 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 09:44:53,803 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T09:44:53.325852'}
2025-08-06 09:44:53,804 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDY2NTkzLCJpYXQiOjE3NTQ0NjYyOTMsImp0aSI6ImZhY
zIyZGM0OTc4MzQ0NzE4YmU1ODViMDUwODEyZjljIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.yHaVSBRpQfMJEwuuCcMqvvDPVZZaZgI_vNOrOqFOXxI', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1MjY5MywiaWF0IjoxNzU0NDY2MjkzLCJqdGkiOiJmMmM
yNTc3MGU2ZmQ0MTYyODdiYjE5NmI3MDk4OGI3NCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.3QQEegIQNis1KD618HcblbsrVFN3_sxJB0_Hx_T2EBs', 'email_verified': False}
2025-08-06 09:44:53,857 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 09:44:53,857 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 09:45:04,693 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c
2025-08-06 09:45:04,693 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-08-06 09:45:04,693 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-08-06 09:54:33,133 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T09:54:32.612591'}
2025-08-06 09:54:33,134 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDY3MTczLCJpYXQiOjE3NTQ0NjY4NzMsImp0aSI6IjAxM
mVmYWY4ZTNjNDQ5MWU4MTVkM2U1MmE0MWNjZGUxIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.zcBXuRbSQVRBFle54JkZJnTEoLtM7a9CcUqk_G_89lc', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1MzI3MywiaWF0IjoxNzU0NDY2ODczLCJqdGkiOiJlYTd
lNDcxMGZjNmQ0NWQ4OTk3ZTRkNGQxZjViMTU0NCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.Ocv6KEDiA78kxfnc94DpAbY36EiyrxmUMKfPTLdJKe0', 'email_verified': False}
2025-08-06 09:54:33,256 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 09:54:33,256 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 09:54:36,240 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c
2025-08-06 09:54:36,241 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-08-06 09:54:36,241 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-08-06 09:54:43,276 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T09:54:42.796619'}
2025-08-06 09:54:43,277 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDY3MTgzLCJpYXQiOjE3NTQ0NjY4ODMsImp0aSI6ImE3O
GE1NTc0YjMwNTQxYzE5ZjY1NmRkNTZmOTQ2NzM1IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.axjt67cgwHXOEAZB-P0gY9hcYDEvTr74mdtDY-9wBu4', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1MzI4MywiaWF0IjoxNzU0NDY2ODgzLCJqdGkiOiJjZjU
2OTIyMzZiMmI0YzExYjczZWFkMGMxOWY0MWY4NSIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.l5WspxrCUjQCDv9jghnr3Xr2HO_iftScCAHWe6NZ3nc', 'email_verified': False}
2025-08-06 09:54:43,327 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 09:54:43,327 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 10:10:59,851 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 10:10:59,852 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 10:11:00,112 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 10:11:00,112 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 10:11:13,636 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 10:11:13,636 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 10:11:13,895 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 10:11:13,895 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 10:11:24,216 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 10:11:24,216 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 10:11:24,447 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 10:11:24,447 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 10:12:03,022 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T10:12:02.489191'}
2025-08-06 10:12:03,024 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDY4MjIzLCJpYXQiOjE3NTQ0Njc5MjMsImp0aSI6IjJjN
TYzYmY5NzM1ZTQwMzI4NWQwZjNmNzkwNzBjNWU0IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.TmHG2c-VkaXlqPSfWxrKp9L3CVTEnyDeR_5Iv2m8W-g', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1NDMyMywiaWF0IjoxNzU0NDY3OTIzLCJqdGkiOiJjYWZ
lNmQ3MjZhZTI0MzEyODBmMzJmOThjOWVmZjA5ZCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.ZNezIvflLKeOSvvJ6a1bpIB745knsD-tQP3eyh1wuUQ', 'email_verified': False}
2025-08-06 10:12:03,190 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 10:12:03,190 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 10:24:53,633 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 10:24:53,633 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 10:25:23,279 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T10:25:22.749693'}
2025-08-06 10:25:23,283 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDY5MDIzLCJpYXQiOjE3NTQ0Njg3MjMsImp0aSI6IjQ1Y
zZkY2ZhMjk3NTQ0M2M5NzgzYzNlNzNhYzFmYjg2IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.d19Cgzv0EI64QA0dWpENbOlb-BmABlA6BPvdTiOvN2Q', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1NTEyMywiaWF0IjoxNzU0NDY4NzIzLCJqdGkiOiJkMTk
5NjNmZWNlOTE0NzU2OGMzNjcyOWY1ZTFiOTYyMyIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.vdBJtI0o8AIQUYkNigYxVjiwfaEjrKW4-fNxlQkmQYc', 'email_verified': False}
2025-08-06 10:25:23,452 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 10:25:23,452 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 10:56:05,820 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 10:56:05,820 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 10:56:06,072 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 10:56:06,072 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 10:56:37,757 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T10:56:37.236774'}
2025-08-06 10:56:37,759 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDcwODk3LCJpYXQiOjE3NTQ0NzA1OTcsImp0aSI6IjdhO
GQ1YWJkMjQ5MTQ0YWZiYjkxZWYwYWY2MjFhM2I2IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.0hi5ONGzmc5PfiOYnHQfT98RtH3SRq0Gm9YZ_Kg-BKU', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1Njk5NywiaWF0IjoxNzU0NDcwNTk3LCJqdGkiOiIxYWV
hYmIxNzYzNzU0NWYxODZjMjhmYWRlNjg2YTFhNCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.JrKkKSZ8YVnPG7SF8JKfB8gZt3yljhKjAGD7iEUzAxE', 'email_verified': False}
2025-08-06 10:56:37,900 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 10:56:37,900 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 11:11:20,049 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 11:11:20,050 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 11:11:20,321 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 11:11:20,322 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 11:11:48,282 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T11:11:47.738123'}
2025-08-06 11:11:48,284 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDcxODA4LCJpYXQiOjE3NTQ0NzE1MDgsImp0aSI6IjliZ
DY1NTMxNzg0MDQ4Njg4ZTViZWE1Mzg5MjgyN2E1IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.4XCbMId4X-CpKoWSdudrAI1ZpEdN92SHxOw7nkPetMk', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1NzkwOCwiaWF0IjoxNzU0NDcxNTA4LCJqdGkiOiJiYjY
xOGE0ZmJmMmQ0ODgyYmYyMWY0NjhiNTE2YThmMyIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.iSfqskPAJCNc5gq4duQUnbIIcOfoGPO6mbCePPhBAsA', 'email_verified': False}
2025-08-06 11:11:48,413 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 11:11:48,413 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 11:12:34,348 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 11:12:34,348 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 11:12:34,603 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 11:12:34,603 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 11:13:01,990 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T11:13:01.449459'}
2025-08-06 11:13:01,994 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDcxODgxLCJpYXQiOjE3NTQ0NzE1ODEsImp0aSI6ImE2M
jA2MjYzNDI3MzQwMDhiN2M2Njc0Y2ZlNTljZjgwIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.N09O5KlP9IjdKMZwq_tcNkeFjqDVYPnuXzujASq2TAw', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1Nzk4MSwiaWF0IjoxNzU0NDcxNTgxLCJqdGkiOiJlYjB
kMmNiY2QxZDU0YTYyYjk1MTNhODgxNTczNDNjMyIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.un6De0m58nKMGvKndYcxh9CPyXn7tv6iJbLpIg9X-Pw', 'email_verified': False}
2025-08-06 11:13:02,145 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 11:13:02,145 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 11:16:23,301 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c
2025-08-06 11:16:23,303 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-08-06 11:16:23,303 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-08-06 11:16:23,988 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T11:16:23.495982'}
2025-08-06 11:16:23,991 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDcyMDgzLCJpYXQiOjE3NTQ0NzE3ODMsImp0aSI6IjBhY
zczOWIwYWQ5NDQ5MWQ5ZjQ0YzY5YzQzM2Q2ZTUxIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.yU8ELo7Wq66TTpAWd1TEbUeQ-NBHOOJN2PkepSrfejE', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1ODE4MywiaWF0IjoxNzU0NDcxNzgzLCJqdGkiOiI4M2Y
5ZThhZDllZTI0ODZhODI3Yzg1YTE0YWViYThiMSIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.I0_-D3WT2afuwJ3NR7FxqwwV86kGPnWRkVKkJ5DfBsk', 'email_verified': False}
2025-08-06 11:16:24,045 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 11:16:24,045 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 11:16:56,514 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T11:16:55.974952'}
2025-08-06 11:16:56,516 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDcyMTE2LCJpYXQiOjE3NTQ0NzE4MTYsImp0aSI6IjA2O
TBhNjUxNzE3NDRiMmJhZWUwZGQ3NDU4ODZjNDNjIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.mebksD0Mr5oU7NBXIt8kKk4Vi4Z1krdXPYCbzkXGaf4', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1ODIxNiwiaWF0IjoxNzU0NDcxODE2LCJqdGkiOiI5ZjQ
xNWZlODcyYzE0MTg5YjE4YTc2NTllMDBiZDYyZiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.q055w3LmAnYJm43OOupBcigZSH5gFNXAKdJFPj3EC4E', 'email_verified': False}
2025-08-06 11:16:56,656 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 11:16:56,656 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 11:18:27,909 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 11:18:27,909 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 11:18:28,221 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 11:18:28,221 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 11:19:00,777 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T11:19:00.229455'}
2025-08-06 11:19:00,779 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDcyMjQwLCJpYXQiOjE3NTQ0NzE5NDAsImp0aSI6ImQxM
zEzMDgyZGZkMjRlNmFiZmZmNWRlZWY1ZTMzYTRjIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.rTA7oF5Kh-CG5fXkfkVeItJnkQyUJSTbg2VVmWwqQpw', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1ODM0MCwiaWF0IjoxNzU0NDcxOTQwLCJqdGkiOiI0OGE
wYWNjMjIxM2E0ZTgxOTE4YjVhMTQ1YWY4YzRiMiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.f-25YFHV0IVHCQUwbTmGs27bAXDz2BjHZ91V4ZjtEJc', 'email_verified': False}
2025-08-06 11:19:00,935 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 11:19:00,935 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 11:20:53,540 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T11:20:53.003144'}
2025-08-06 11:20:53,542 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDcyMzUzLCJpYXQiOjE3NTQ0NzIwNTMsImp0aSI6IjJiM
2MwYjQwYzljYTRlYTM4MjUwODYzYjVkMWZlNjJiIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.jMeSTqyIjvZI-6ENhvVHGpVOPZR_fty7dbcpv4ZHbb8', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1ODQ1MywiaWF0IjoxNzU0NDcyMDUzLCJqdGkiOiI2YjJ
iZDU3NDY3Mzk0OGFlOTA0YTY5YTQ5NjUxYmZiZiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.vrBtb6Dg7g2jLUYoB9I0CQNteRkCQSzAOLre7cKWa5M', 'email_verified': False}
2025-08-06 11:20:53,706 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 11:20:53,706 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-06 11:24:37,457 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-06T11:24:36.918660'}
2025-08-06 11:24:37,459 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NDcyNTc3LCJpYXQiOjE3NTQ0NzIyNzcsImp0aSI6ImMwM
zdkYzk0ZGRkNDQ3NzY4NjBiNmM4ZmQ5NmNmMTZlIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.WlVq3-vLFZm9Jg7HL77r86Ks1xrX20Pd1A435unqQ-U', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDU1ODY3NywiaWF0IjoxNzU0NDcyMjc3LCJqdGkiOiJlOWQ
3ODlmYjNlMDY0Yjk3YmExMjJkZjM5NTBhZWU3NiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.zdf4EKcTwiopob-7zMxiKnMI5I4qv7srrhhObag3rlg', 'email_verified': False}
2025-08-06 11:24:37,624 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-06 11:24:37,624 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 02:18:02,567 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-07T02:18:01.925476'}
2025-08-07 02:18:02,870 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NTI2MTgyLCJpYXQiOjE3NTQ1MjU4ODIsImp0aSI6IjhlM
mEwMTYzMjAyZDQ4NTI5MDc3OTljY2JiMmUwMzZiIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.p1_Cet2bVaEBnmdW686jPLCLYBpBjT87zT-6qsC-WsE', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDYxMjI4MiwiaWF0IjoxNzU0NTI1ODgyLCJqdGkiOiI5MGV
lMDZiYjZlZDQ0NWQ3YmM4ZjUxNzI3NzFlZTc1NiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.r6fX-7YNVRn1wn6R4nFqNz33ak0tMdj_S8qUgjGl6yw', 'email_verified': False}
2025-08-07 02:18:03,131 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 02:18:03,131 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:10:11,685 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:10:11,685 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:10:11,690 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:10:11,690 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:11:06,483 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:11:06,483 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:11:06,488 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:11:06,488 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:11:06,795 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:11:06,795 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:11:29,736 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:11:29,736 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:11:29,748 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:11:29,748 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:14:22,099 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:14:22,099 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:14:22,109 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:14:22,110 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:15:31,432 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:15:31,432 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:15:31,446 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:15:31,446 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:15:50,612 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:15:50,613 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:15:50,619 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:15:50,620 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:15:50,968 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:15:50,968 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:16:10,979 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:16:10,979 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 03:16:10,985 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 03:16:10,985 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 04:06:11,020 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-07T04:06:10.466357'}
2025-08-07 04:06:11,097 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NTMyNjcxLCJpYXQiOjE3NTQ1MzIzNzEsImp0aSI6ImVhN
DFhZGM4YmYzNDRlYmQ5NjA0NTAzMzljY2VmZDI1IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.jmWdaJZjc3rXSfUQx4ScpLAYM1LvWD1NVuX-LQL7nJg', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDYxODc3MSwiaWF0IjoxNzU0NTMyMzcxLCJqdGkiOiIwN2V
kNWM5ZjQxZDk0OThiYWU2Njg5MmRkNjBlYzk4ZSIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.1tJ13eXq3WtNq72g_DVbIDpGTkyUay96TsYJu_E2zxU', 'email_verified': False}
2025-08-07 04:06:11,368 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 04:06:11,368 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 04:06:11,374 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 04:06:11,374 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 04:06:32,977 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 04:06:32,977 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 04:06:32,985 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 04:06:32,985 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 04:07:30,353 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 04:07:30,353 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 04:07:30,359 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 04:07:30,359 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 04:07:30,679 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 04:07:30,679 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 04:07:34,679 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 04:07:34,679 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 04:07:34,680 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 04:07:34,680 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 04:08:01,009 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 04:08:01,009 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 04:08:01,018 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 04:08:01,019 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 04:09:42,961 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 04:09:42,961 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 04:09:42,966 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 04:09:42,966 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 04:09:43,281 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 04:09:43,281 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 23:30:00,614 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-07T23:29:59.882941'}
2025-08-07 23:30:00,854 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjAyNTAwLCJpYXQiOjE3NTQ2MDIyMDAsImp0aSI6ImI3O
DQ2MTgzY2QzYzRkOTNiZTFiMDNmOWQ5MjJiZWMyIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.JCvA724xItCchmynx0VPjAIjYQNdM6MIIb1q20Ywi00', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDY4ODYwMCwiaWF0IjoxNzU0NjAyMjAwLCJqdGkiOiI4MzE
xZWZjZDJiODU0MmZiODBlNzZlMzM1ZjY3MTM0NCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.1jS-7CrQZ9_Go9nNL-RHtscfOJBUdlq5gHI6gMlMHkc', 'email_verified': False}
2025-08-07 23:30:01,025 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 23:30:01,025 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 23:30:01,026 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 23:30:01,026 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 23:33:21,364 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c
2025-08-07 23:33:21,364 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-08-07 23:33:21,364 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-08-07 23:33:22,087 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-07T23:33:21.411697'}
2025-08-07 23:33:22,089 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjAyNzAyLCJpYXQiOjE3NTQ2MDI0MDIsImp0aSI6IjJiN
jBlZTU1OGQ4NTQ1MzFhZGExNDQzZWUzYWNjOGY2IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.RWzPZCHqjwmxJ5A1byIs1Qv2k_WUY0wDaQ63z3yRAQ4', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDY4ODgwMiwiaWF0IjoxNzU0NjAyNDAyLCJqdGkiOiI3OTQ
2OWM1ZDczY2Q0YThkYTk2ZDMzOTFiNjNjNWRiNSIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.NfryVFfRp_mz3fDAgpWJUdVWo_gvydvt8ZXDqBF_Ni8', 'email_verified': False}
2025-08-07 23:33:22,169 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 23:33:22,169 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 23:33:22,171 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 23:33:22,171 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 23:37:40,758 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c
2025-08-07 23:37:40,758 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-08-07 23:37:40,758 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-08-07 23:37:41,363 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-07T23:37:40.689469'}
2025-08-07 23:37:41,366 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjAyOTYxLCJpYXQiOjE3NTQ2MDI2NjEsImp0aSI6ImQ1Z
GJlZjkzNjY3YzQxZTA4MzIxYTc3ZTEyOWI5MWUyIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.U86DKlDmn4z-JnsO8gK5FZ_MspWreIOPoVhsd_ZXVtE', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDY4OTA2MSwiaWF0IjoxNzU0NjAyNjYxLCJqdGkiOiJkOGF
kYmVlYWZiZmI0NDUzYTEyZmEwMjEwMWMzODIwOCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.dTgGytCzzLGjTsEOP14AjbdKSIobQjxKZAcbWdK5JPs', 'email_verified': False}
2025-08-07 23:37:41,439 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 23:37:41,439 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-07 23:37:41,440 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-07 23:37:41,441 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 02:25:07,875 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T02:25:07.033662'}
2025-08-08 02:25:07,985 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjEzMDA3LCJpYXQiOjE3NTQ2MTI3MDcsImp0aSI6ImVjY
jhlMzcwMjJhMjRiNjk5MjI3MjE0OGVmNjBhMjM4IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.0DiYZMhr7foDYiJFiRgIpuDWMjRR0uePPijgBbUM0k4', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDY5OTEwNywiaWF0IjoxNzU0NjEyNzA3LCJqdGkiOiJhMGZ
mMzdjNThlZjI0ZjAzOGFjZGNjM2E1MjczNWMxNiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.Uab1nhYRaDQRIVQJLstnsWLeGiPaQKrAdLs3oWrooHE', 'email_verified': False}
2025-08-08 02:25:08,376 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 02:25:08,377 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 02:25:08,378 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 02:25:08,378 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 02:53:57,807 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 02:53:57,807 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 02:53:57,822 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 02:53:57,822 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 02:53:58,242 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 02:53:58,242 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 02:54:01,792 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 02:54:01,792 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 02:54:17,186 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 02:54:17,186 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 02:54:17,193 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 02:54:17,194 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 02:54:17,632 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 02:54:17,632 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 02:54:23,062 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 02:54:23,062 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:28:00,120 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:28:00,120 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:28:00,127 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:28:00,127 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:28:00,542 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:28:00,542 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:28:44,997 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:28:44,998 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:28:45,008 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:28:45,008 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:29:26,873 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:29:26,873 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:29:26,891 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:29:26,891 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:29:27,327 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:29:27,327 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:29:27,949 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:29:27,949 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:29:27,951 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:29:27,952 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:32:33,482 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T03:32:32.693385'}
2025-08-08 03:32:33,502 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjE3MDUzLCJpYXQiOjE3NTQ2MTY3NTMsImp0aSI6IjQzM
Dg3NTNmNTcyZjQ0ZTViOGY0ZDU2MmQxYjhlZjkzIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.PdDi-SBOuDyxzgLpR3ZREW8ZWZah-ZyARoYLDiU5HGY', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcwMzE1MywiaWF0IjoxNzU0NjE2NzUzLCJqdGkiOiJkZjQ
4ZmJhZDE0ZmQ0MzZjYmFjYjY0NjcxNWVlY2JlMCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.ckx2I6FeJByvecg2mXHtyEcx_qr8SAWgWmK0PJcovSc', 'email_verified': False}
2025-08-08 03:32:33,765 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:32:33,765 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:32:33,767 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:32:33,767 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:32:51,111 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c
2025-08-08 03:32:51,111 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-08-08 03:32:51,111 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-08-08 03:32:51,792 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T03:32:51.056764'}
2025-08-08 03:32:51,793 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjE3MDcxLCJpYXQiOjE3NTQ2MTY3NzEsImp0aSI6ImI0Y
WYwZjdlMmQwYzRlOTE4ODFmOWJlZmE1NDczODRhIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.UGlEAfnb4rXwoiGbDCbeunJEINcqMpT7CAh0ROB3zO4', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcwMzE3MSwiaWF0IjoxNzU0NjE2NzcxLCJqdGkiOiI5MjQ
3NzZmYmQzNWI0YzIzOGJiNzgxNzNhZjAzNTgzMCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.geCCWYztIrn9iewLGHSXJXHoQ9YiCREYh1beONAXJTU', 'email_verified': False}
2025-08-08 03:32:51,913 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:32:51,913 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:32:51,915 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:32:51,915 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:34:19,859 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:34:19,859 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:34:19,866 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:34:19,866 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:34:20,328 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:34:20,328 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:34:21,015 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:34:21,015 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:34:21,018 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:34:21,018 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:34:46,998 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:34:46,998 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:34:47,021 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:34:47,021 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:35:13,013 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:35:13,013 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:35:13,019 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:35:13,019 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:35:31,097 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:35:31,097 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:35:31,100 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:35:31,100 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:35:31,433 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:35:31,433 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:36:05,464 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:36:05,464 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:36:05,483 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:36:05,483 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:52:16,923 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:52:16,923 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:52:16,928 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:52:16,928 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:52:45,422 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T03:52:44.647535'}
2025-08-08 03:52:45,424 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjE4MjY1LCJpYXQiOjE3NTQ2MTc5NjUsImp0aSI6Ijc1M
WNmNThhOGExZDQ2ODBiNmI3NjhmZTg4MTJiNTI5IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.X2iua1XVR4LdSwD4_cKr8MbUGHbKtrnvh-f0HLudSbQ', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcwNDM2NSwiaWF0IjoxNzU0NjE3OTY1LCJqdGkiOiJjZjZ
jMTQzMTU4OGI0Zjg4OTYxM2ZlODA2NmJhYzhlMiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.cgWe_JH-I9B3CMtYmAUl3rj_E5vE5o-rBakBfAHlpXI', 'email_verified': False}
2025-08-08 03:52:45,632 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:52:45,632 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:52:45,633 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:52:45,633 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:54:27,640 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:54:27,640 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 03:54:27,645 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 03:54:27,646 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 04:28:26,175 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 04:28:26,175 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 04:28:52,209 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T04:28:51.467819'}
2025-08-08 04:28:52,217 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjIwNDMyLCJpYXQiOjE3NTQ2MjAxMzIsImp0aSI6IjU5M
DIxY2YyNjhlYjRlNjk5YTU5YTY5ZDlkYTcxMjE2IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9._skXaOUYbkghGEWjWcydYq-rPsMsZeN4oYJdrz4kWTc', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcwNjUzMiwiaWF0IjoxNzU0NjIwMTMyLCJqdGkiOiI2YTY
zNGE0NjQwNmY0ZjcyODdlNWZkNjFhNmU3ODM1MCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.9GFdf5-Nay0l306zY0MhvEE43vjxKuiR-79KPt8iAJQ', 'email_verified': False}
2025-08-08 04:28:52,316 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 04:28:52,317 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 04:47:40,478 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 04:47:40,478 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 04:49:05,256 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 04:49:05,256 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 04:49:29,149 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T04:49:28.385137'}
2025-08-08 04:49:29,158 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjIxNjY5LCJpYXQiOjE3NTQ2MjEzNjksImp0aSI6ImU5M
jA5ZTMzNTkwNTQzN2RiZGJiMmQ5Yjc5MjkzM2UyIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.ilhsU8OGSu1JEON64Yir_2bQatjPA6wgObJgR7cICCk', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcwNzc2OSwiaWF0IjoxNzU0NjIxMzY5LCJqdGkiOiI0ZDE
2YmI4OTIyNWE0NWE3YmE4M2ViZTAwYzQyYmRjYiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.Hx6w9WDMoCflCgeMEcTT0BjMkAZplDmiImyJD3xrg_w', 'email_verified': False}
2025-08-08 04:49:29,315 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 04:49:29,315 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 04:50:43,980 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 04:50:43,980 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 04:53:22,677 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 04:53:22,677 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 04:58:40,670 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 04:58:40,670 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 04:59:18,477 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T04:59:17.731470'}
2025-08-08 04:59:18,479 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjIyMjU4LCJpYXQiOjE3NTQ2MjE5NTgsImp0aSI6IjQyM
mFkNTlkNDRhNzRkMTFiZjZiY2ZlYmJlZDVlOWMxIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.k7BJZfX9B_WBiITob2XaIE2Gb4UI6lytT9OiBWxyj6U', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcwODM1OCwiaWF0IjoxNzU0NjIxOTU4LCJqdGkiOiI0NjM
wNTM1OWMwYzU0ZGI1OGU5NzQ1YjIyOWQxOTE2YSIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.YC6mMm0G_O1m_fUyJyWalLXj_G1CZEVu5oOewtBYDxc', 'email_verified': False}
2025-08-08 04:59:18,572 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 04:59:18,572 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:15:08,499 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:15:08,499 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:15:31,451 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T05:15:30.689560'}
2025-08-08 05:15:31,454 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjIzMjMxLCJpYXQiOjE3NTQ2MjI5MzEsImp0aSI6IjgyZ
DkwNWNiMWUwMzQ5MDY5YzA3ODEwZTE0NDY5YWIyIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.c4IOYrJc-CGzay2fs7bANyc2VY6uKK-0teLX80ocUwA', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcwOTMzMSwiaWF0IjoxNzU0NjIyOTMxLCJqdGkiOiJiMzE
zMWJhMWFkMjc0ZGQ5ODk3OTg0ZDRlODU2ZmJhOSIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.QYIa2K4I43VCfLVeTzyEG5DW9MSfmvInu-gdIIBv98E', 'email_verified': False}
2025-08-08 05:15:31,564 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:15:31,564 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:22:37,386 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:22:37,386 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:22:49,258 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T05:22:48.355178'}
2025-08-08 05:22:49,276 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjIzNjY5LCJpYXQiOjE3NTQ2MjMzNjksImp0aSI6IjJmZ
jEzOWNjOTFmZDRlMWE4MGNhYjM3NjI1NmMxM2VlIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.tX4Xz84VC59C0xVwhwCMoG0B0ETr_Iolj3uCofDrP2I', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcwOTc2OSwiaWF0IjoxNzU0NjIzMzY5LCJqdGkiOiI4MWQ
wM2QxMWYzYzY0NzVhYWJkNGEwZWEzNWUzY2YxNyIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.zk2WDqofi6ER3JwS6I4DBIT_srKIqAl6imnAHnVZJUU', 'email_verified': False}
2025-08-08 05:22:49,334 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:22:49,334 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:35:30,819 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:35:30,819 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:35:36,188 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T05:35:35.277779'}
2025-08-08 05:35:36,204 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjI0NDM2LCJpYXQiOjE3NTQ2MjQxMzYsImp0aSI6ImM1N
TNkNGFiN2ZkODRlMGM4NjA5YWNiYzBkNTM2NTIwIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.KuMFoOARLBX90k-iKuydgsHP7bzqbOAqYPAe1LxGEOM', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcxMDUzNiwiaWF0IjoxNzU0NjI0MTM2LCJqdGkiOiI4OWN
kNjYwZTRlNzE0N2FmYjk2NTYyMWJhZDUwOGMzYyIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.TIzDViWhamvOnCYJGCGZM7UyEj0xNeVDfRJCleyORco', 'email_verified': False}
2025-08-08 05:35:36,299 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:35:36,299 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:36:58,306 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:36:58,306 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:36:58,616 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:36:58,616 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:36:59,641 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:36:59,641 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:37:25,550 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:37:25,550 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:37:27,247 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c
2025-08-08 05:37:27,249 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-08-08 05:37:27,249 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-08-08 05:37:27,944 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T05:37:27.031251'}
2025-08-08 05:37:27,947 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjI0NTQ3LCJpYXQiOjE3NTQ2MjQyNDcsImp0aSI6ImFkN
WIxOWMyYTk5MDQxOWM4MDcwNTA4YzgzZDI1ODRkIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.MsUJhblObud4MSUJ3PE04wtdm2zuCYkGGptQ_EjMzsk', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcxMDY0NywiaWF0IjoxNzU0NjI0MjQ3LCJqdGkiOiI0YjV
iYWE2YTRmNTE0Zjc5YTdhOTAyMTRhYTk5YWFkOSIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.pOIljEsXI6w0OWS4YlAgP_CJRUvqUR0pwHY8b6PYjag', 'email_verified': False}
2025-08-08 05:37:28,078 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:37:28,078 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:40:02,664 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:40:02,664 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:40:04,719 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c
2025-08-08 05:40:04,719 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-08-08 05:40:04,719 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-08-08 05:40:05,467 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T05:40:04.554559'}
2025-08-08 05:40:05,472 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjI0NzA1LCJpYXQiOjE3NTQ2MjQ0MDUsImp0aSI6IjM5O
DU2MGM3ZGYwOTQwOWViMDA3MTRlNWM4YjE1ZGZkIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.1QGpcnQxBWArhPwin1biZaBD1Jh_iya3-rajSZirzUk', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcxMDgwNSwiaWF0IjoxNzU0NjI0NDA1LCJqdGkiOiIwMGR
mOTM2M2IwMmM0NjE3OWZjNWFhMzRjZTZlZGYzMSIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.64dccnzLht-vTGBfBgTNUrmUqnEmzgyIGW7FQp59nLQ', 'email_verified': False}
2025-08-08 05:40:05,550 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:40:05,550 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:46:03,494 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T05:46:02.543376'}
2025-08-08 05:46:03,498 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjI1MDYzLCJpYXQiOjE3NTQ2MjQ3NjMsImp0aSI6IjE5N
jljMzAwNGMxOTRjMjk4ODM4YTlkOWRlNzk4OWYwIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.2_AEMf6NSbpoxAOpnePIg83PoV8Wdi9qLgpqKfZ1TC0', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcxMTE2MywiaWF0IjoxNzU0NjI0NzYzLCJqdGkiOiJmMmV
lNjdiZTYwMWM0ODRiOGJhNTlkY2U5YWIzZDE1ZiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.zd721icrCJc0B0HvV4kybL1Jthti0AGBX7ICihEziOY', 'email_verified': False}
2025-08-08 05:46:03,728 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:46:03,728 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:59:11,676 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:59:11,676 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 05:59:17,087 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T05:59:16.181494'}
2025-08-08 05:59:17,089 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjI1ODU3LCJpYXQiOjE3NTQ2MjU1NTcsImp0aSI6ImFmN
GI1NWYyMWI2MzRkNGM4MWQ4YmRjZWFkYWYwYzZkIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9._Kf92r3odIoaraXOPvpqH_eAMFtmEhqC1xNk_-qrsa8', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcxMTk1NywiaWF0IjoxNzU0NjI1NTU3LCJqdGkiOiI4Y2Z
jMmIxZWYyMTY0ZTFhOGNjMmNjOGMyZTYwODFhOCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.1rmzH2JWOHVM5Oj531R83ID6lPG_GXSCzmnSwjaN9lE', 'email_verified': False}
2025-08-08 05:59:17,165 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 05:59:17,165 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 06:06:10,602 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T06:06:09.645315'}
2025-08-08 06:06:10,604 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjI2MjcwLCJpYXQiOjE3NTQ2MjU5NzAsImp0aSI6IjdlO
WFhMGI0ZDMwNTQyYWNiMzU4MDY5ODdmNTM1NTdkIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.rDh4V6novFAbXr6LOBlWfQQnxAtCJeBnN0sIwz-ZDVU', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcxMjM3MCwiaWF0IjoxNzU0NjI1OTcwLCJqdGkiOiJmMjg
wZDU0OTI2YjQ0ZWMxODI5NDk4NmM1MTg1ZTdlMiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.UWWC_FG6YUyiocrD8W3ipbR_2mifP2wScSTRcus5ECk', 'email_verified': False}
2025-08-08 06:06:10,768 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 06:06:10,769 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 06:22:30,215 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 06:22:30,215 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 06:22:33,329 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T06:22:32.420543'}
2025-08-08 06:22:33,331 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjI3MjUzLCJpYXQiOjE3NTQ2MjY5NTMsImp0aSI6IjNjN
DI4Y2NmMzkwZjRlZTNiZTY3YThhZjNlYWEyMGM0IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.rYeEXdwE58Vv6EZRvGoGMBFkZStXIXvhxSeYLi3Uylg', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcxMzM1MywiaWF0IjoxNzU0NjI2OTUzLCJqdGkiOiI4MWV
jMjdiMDI3NjA0OGE5OWE0OGRjZDBhN2Q5YmI1OSIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.uaVLnsPzlTt8MYsqy1_QEYbrylH4XarFNfOg2gKq_O8', 'email_verified': False}
2025-08-08 06:22:33,417 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 06:22:33,417 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 06:32:13,810 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T06:32:12.838447'}
2025-08-08 06:32:13,813 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjI3ODMzLCJpYXQiOjE3NTQ2Mjc1MzMsImp0aSI6IjQ1M
DdiODY5MTYzZDRlZmM4ODA5ODlmYjY0OWVmM2NiIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.8IRMGQ6qQqHUGqIT9YGG6SmbvsObLAaTnzyAmBmVYAk', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcxMzkzMywiaWF0IjoxNzU0NjI3NTMzLCJqdGkiOiI4ZGV
iNjljZjcyM2U0NGM0YmZhMTE1YmNkNTExYjNiNyIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.JYExtVqSZ7Bz1NxJSINfJCLUhZCW3ozwYSN0ugDCO9U', 'email_verified': False}
2025-08-08 06:32:14,014 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 06:32:14,014 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 06:40:16,965 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 06:40:16,965 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 06:40:55,936 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T06:40:55.027020'}
2025-08-08 06:40:55,938 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjI4MzU1LCJpYXQiOjE3NTQ2MjgwNTUsImp0aSI6IjliY
2I1YjAyZWI0NjRjZjVhZWY0ZDZkM2ZjNjVlNWQxIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.sLcR-4_AOy4S2a3q6HlNKvEvB_JE4F5TwudjpTkEgHw', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcxNDQ1NSwiaWF0IjoxNzU0NjI4MDU1LCJqdGkiOiJiZTF
lYWZkZmZkZGE0YmM0OThmNTI1NWQ3M2RjOGNjMCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.Foknn8xoQmxOgps0SLo8mAijcLxnVG2LyhmIegfT7yw', 'email_verified': False}
2025-08-08 06:40:56,020 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 06:40:56,020 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 06:46:49,721 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 06:46:49,721 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 06:46:56,042 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 06:46:56,042 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 06:46:56,464 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 06:46:56,464 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 06:46:56,482 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 06:46:56,482 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 06:46:58,671 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T06:46:57.761787'}
2025-08-08 06:46:58,673 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjI4NzE4LCJpYXQiOjE3NTQ2Mjg0MTgsImp0aSI6IjAxZ
GJiYWJmOTY2MjRiM2FhNjQ3MzQ5NzZjNWM4MzFjIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.ks6ZpWQ7lI2jTm1SCjSvwiwwWZ7XWBZpWxh1t9MzBgw', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcxNDgxOCwiaWF0IjoxNzU0NjI4NDE4LCJqdGkiOiI5Yzd
iOWU5ZWFlMmE0NTdmOWE3YmM1MDg2NGY1ZDE2MiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.1mVQg9uurLq0Qet2AsjbQlEpwfsFUM9L1ESVa3xS67Y', 'email_verified': False}
2025-08-08 06:46:58,755 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 06:46:58,755 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 06:55:56,228 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T06:55:55.325265'}
2025-08-08 06:55:56,229 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjI5MjU2LCJpYXQiOjE3NTQ2Mjg5NTYsImp0aSI6IjZkZ
jQ1ZjY3OGMzNzRlZWU4M2EwY2JiM2QxMjZjOGJmIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.YCoNuqRQWD5nluHL11c3m2wDbYlG_cbeSyGipP_eDFY', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcxNTM1NiwiaWF0IjoxNzU0NjI4OTU2LCJqdGkiOiJjYTc
5OWY5NWEzYjg0NTg0YjRiYTI3MmRjZDkyZTVhNSIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.tnemSKieYSJAhcPv0-XxSC8N6h6TmBxNkdcFLaAg7QM', 'email_verified': False}
2025-08-08 06:55:56,327 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 06:55:56,327 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 07:16:50,981 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T07:16:50.077782'}
2025-08-08 07:16:50,983 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NjMwNTEwLCJpYXQiOjE3NTQ2MzAyMTAsImp0aSI6IjA0Y
jkyZTMwZjU2MzQ2NTViYTBiOTk5MWZjZmRjOWM4IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.anb8cEy5DtFeLxAbTFaYWT3lClFntD0Q89n-mQU5Z08', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDcxNjYxMCwiaWF0IjoxNzU0NjMwMjEwLCJqdGkiOiIwODF
kYzQ5ZDQyOTY0YWFmYjBmMTgxMTUxYjM1NGY2NiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.dst1JnDJ6s9XsrWeZejLKTZCMiz4EGziv5pe5L3TodA', 'email_verified': False}
2025-08-08 07:16:51,052 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 07:16:51,052 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 19:44:35,081 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T19:44:34.683390'}
2025-08-08 19:44:35,101 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0Njc1Mzc1LCJpYXQiOjE3NTQ2NzUwNzUsImp0aSI6IjMyO
WE5MmFjOTA3ZTQ0N2Q5OGVjYTY5ZmZjNzFiNmY0IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.WMt5ZgxvF0SCbr40NkUFXj3jvsbtNlvWXgjO85Ki59A', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDc2MTQ3NSwiaWF0IjoxNzU0Njc1MDc1LCJqdGkiOiIwOWI
3Zjg4YWJmMWE0MzUxYjE0Mzc1ZWNjMWU3YTdhNyIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.Lpoisissxv54uBqyz7_r_SGbQkK9aehm0w28jlwuEX8', 'email_verified': False}
2025-08-08 19:44:35,185 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 19:44:35,185 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 19:46:28,538 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 19:46:28,538 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 19:55:02,846 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 19:55:02,846 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 19:55:09,690 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T19:55:09.291422'}
2025-08-08 19:55:09,693 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0Njc2MDA5LCJpYXQiOjE3NTQ2NzU3MDksImp0aSI6IjBiN
zIyZmQ4OWJjMzRiMmU4NzdmOWI0YTFlODI2NzY4IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.rBmyPz3VgL58PpI_xHMRW64lVyqNYZQf1fMMR4rZULg', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDc2MjEwOSwiaWF0IjoxNzU0Njc1NzA5LCJqdGkiOiI2NGZ
lMzc0MzhmMDA0MmYwYmVkMGUwYzMzZjlhMGYwNiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.k7f8G0Qoe2Bkg1rB2AChaUdQpVbWBYlkJ0q7Ysqv98s', 'email_verified': False}
2025-08-08 19:55:09,783 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 19:55:09,783 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 19:55:24,745 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c
2025-08-08 19:55:24,745 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-08-08 19:55:24,745 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-08-08 19:55:25,546 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T19:55:25.156434'}
2025-08-08 19:55:25,548 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0Njc2MDI1LCJpYXQiOjE3NTQ2NzU3MjUsImp0aSI6ImY5N
2NmMTRmMmM5MTQxMDhiYTQ4ODdmNmUwOWJkN2I0IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.tcfHdnFnU43ixrbfTNCgDlskDv120S3V64vbU-mfDME', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDc2MjEyNSwiaWF0IjoxNzU0Njc1NzI1LCJqdGkiOiJjYjJ
lN2MyMmM4MTE0OTcwOThmYmNjMWZjYzMzM2JhZCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.ctJjZizWAg6oUtyN-9PHqtsPoST4NaafpmOgGCZCiXg', 'email_verified': False}
2025-08-08 19:55:25,609 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 19:55:25,609 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 19:55:31,128 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c
2025-08-08 19:55:31,128 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-08-08 19:55:31,128 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-08-08 19:55:31,908 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T19:55:31.512942'}
2025-08-08 19:55:31,909 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0Njc2MDMxLCJpYXQiOjE3NTQ2NzU3MzEsImp0aSI6IjlmY
jY1MzUyNjU3MjQ5MTM5OGQyMmI5YWU5ZDJhMTRhIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9._NoJl5H3Rmyi8UFxc5eGM5VjrmoY2Wwa6bf2TaUcLzA', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDc2MjEzMSwiaWF0IjoxNzU0Njc1NzMxLCJqdGkiOiI1NGE
3YjhiZTEwNGM0YmIwOTFjODc5MjI1NTk0ZWQzMCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.RVGOu45JLs_HiSq3Ed7_PGV19FzxiBD4UljB2DYaW3k', 'email_verified': False}
2025-08-08 19:55:31,978 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 19:55:31,978 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:00:14,917 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:00:14,917 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:13:28,562 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:13:28,562 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:13:28,904 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:13:28,905 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:13:51,745 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:13:51,745 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:13:59,078 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T20:13:58.671401'}
2025-08-08 20:13:59,079 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0Njc3MTM5LCJpYXQiOjE3NTQ2NzY4MzksImp0aSI6ImUxM
WQ5MzFjOTQzMDQ1ZjRiODM1ZjU3OTU5NmYyZThmIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.h6NdUDonfwxkNtbKHOKyQiKADREHJfiGNzYJL0sTHo8', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDc2MzIzOSwiaWF0IjoxNzU0Njc2ODM5LCJqdGkiOiIxMGI
zYzdiNDEyMzg0ZTg1OTBiZGQ0MzE3NmZmMDg5ZiIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.tfVSOMknpvi6tpirtgbd_XWqJnvmd6tgpiVjC5XUJ3A', 'email_verified': False}
2025-08-08 20:13:59,166 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:13:59,167 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:17:12,664 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:17:12,664 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:17:12,951 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:17:12,951 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:17:35,761 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:17:35,761 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:31:49,632 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T20:31:49.177025'}
2025-08-08 20:31:49,687 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0Njc4MjA5LCJpYXQiOjE3NTQ2Nzc5MDksImp0aSI6Ijc0N
jVlZTAzMmIyMDQ0OWRiNGFjYzk3MmEwNDNkNjBiIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.Rxhs1FPg2WKyEQ8yVB5na2K9-cSG-qcMSLa2BW0uaBg', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDc2NDMwOSwiaWF0IjoxNzU0Njc3OTA5LCJqdGkiOiJiOWR
iMmJjOWQ1NGE0NzNjYTMwZWQ1MDg0NjI3ZjBkNyIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.FCOq5i9Ut1MNGeU3yxyxmQ8q2V2H1Knm1DWWVb64HwI', 'email_verified': False}
2025-08-08 20:31:50,455 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:31:50,455 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:33:53,226 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T20:31:38.768223'}
2025-08-08 20:33:53,227 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0Njc4MzMzLCJpYXQiOjE3NTQ2NzgwMzMsImp0aSI6ImYxO
TNlMGIxOGYwNzRiYjI5NjIwMjFkZjlkYzE0ZWUxIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.1OV_MciGU53wAgMjniXs5fVImx9sY2TNsQFSNwgOouk', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDc2NDQzMywiaWF0IjoxNzU0Njc4MDMzLCJqdGkiOiJjYmU
5YmUyMWRhNWI0MWU2OThhMWMyYjRiMDQ0ZTE0MyIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.Jj1lE1Cdnw13nJZYhSTyc9qDxpR-8q4MK12GJIt2m_8', 'email_verified': False}
2025-08-08 20:33:55,266 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T20:31:39.689104'}
2025-08-08 20:33:55,267 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0Njc4MzM1LCJpYXQiOjE3NTQ2NzgwMzUsImp0aSI6IjFhZ
DVkN2M5YTYzMDRlYWE4NzMwMTk3YWExYTRkMTI5IiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9._oPF57x4PAAqC77EslnRdAurrLpn63EmCWJkuZiSTCY', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDc2NDQzNSwiaWF0IjoxNzU0Njc4MDM1LCJqdGkiOiI3YTB
iYzk2MWMxMjU0M2U2OTMwMTc1NzFiM2MzMWVhNyIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.zBzhX2_Uuo747Hyy_erqTPljrTJq0FzgzV5xSA6UcGs', 'email_verified': False}
2025-08-08 20:37:41,433 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:37:41,433 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:37:41,714 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:37:41,714 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:41:32,500 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:41:32,500 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:41:33,010 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:41:33,010 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:42:03,825 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-08T20:42:03.335498'}
2025-08-08 20:42:03,827 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0Njc4ODIzLCJpYXQiOjE3NTQ2Nzg1MjMsImp0aSI6ImE2Z
TI3YTRlMDIyYTRjZmI4MDJkMDViYzQxYjY3NjVmIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.laQ2AmVPdDiZo7iYTwFUqP5BxgjFOgi_orYPmxBz1tc', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDc2NDkyMywiaWF0IjoxNzU0Njc4NTIzLCJqdGkiOiI2NzZ
hZDFmOTZhMmU0MWZiYWE1NjVhYTI2N2RlZTliZSIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.LNMel1UkZ-hhE2Zvg9IIYZiShdLGCGmmcBdOyVznprg', 'email_verified': False}
2025-08-08 20:42:04,095 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:42:04,096 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:42:41,627 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:42:41,627 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:42:41,924 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:42:41,924 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:44:59,860 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:44:59,860 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:45:10,455 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:45:10,455 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:45:10,742 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:45:10,742 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:50:17,836 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:50:17,836 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:50:23,005 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:50:23,005 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:50:35,593 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:50:35,594 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:54:22,442 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:54:22,442 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 20:58:23,684 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 20:58:23,684 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 21:02:35,146 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 21:02:35,147 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 21:06:52,587 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 21:06:52,587 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 21:09:51,409 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 21:09:51,410 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 21:12:24,362 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 21:12:24,363 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 21:13:22,794 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 21:13:22,794 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 21:17:33,525 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 21:17:33,525 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 21:46:21,571 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 21:46:21,571 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 21:52:39,956 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 21:52:39,956 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 21:56:55,064 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 21:56:55,064 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 21:58:57,523 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 21:58:57,523 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 22:50:45,855 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 22:50:45,855 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 23:01:30,423 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 23:01:30,424 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 23:07:27,982 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 23:07:27,982 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 23:19:19,235 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 23:19:19,236 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-08 23:29:18,177 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-08 23:29:18,177 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-09 22:36:39,404 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-09 22:36:39,405 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-09 22:37:23,241 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-09T22:37:21.827948'}
2025-08-09 22:37:23,256 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0NzcyMTQzLCJpYXQiOjE3NTQ3NzE4NDMsImp0aSI6IjgwN
jQ4Y2RmMmU5NDQ4NzI5ZGI5NGM5NDVlNTJiZWZlIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.r5Y5EpOQSZVb2iMu4JUlnDDkWQuSBUpE20mVzBQXfcM', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDg1ODI0MywiaWF0IjoxNzU0NzcxODQzLCJqdGkiOiIwMDU
yNDMyYjc3NjQ0MGMyYTQ2MTBmOGY4OTEyYWY0YSIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.5jsaT0isTdReroRF0TpDUG0SXwUXY-QWYqyAs9DGGas', 'email_verified': False}
2025-08-09 22:37:23,352 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-09 22:37:23,352 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 00:47:52,338 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-10T00:47:50.844400'}
2025-08-10 00:47:52,366 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0Nzc5OTcyLCJpYXQiOjE3NTQ3Nzk2NzIsImp0aSI6ImQzN
TNjOWUxYmRmMDQ4MmQ5NjVlZGM4MDM1OWNhMDQyIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.AjoNb8IrCQz4p4BKEPjPETPddXtaLtMwCPkx1b4VyDk', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDg2NjA3MiwiaWF0IjoxNzU0Nzc5NjcyLCJqdGkiOiJjNzc
wYjAwY2Q5NDM0Yzk3ODI4NTQ2M2IzMWEzYmQ2ZCIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.tj01aw3IeyIQmNWRacK0LqBZIjJ4ZVDAmTeCiHAxAmQ', 'email_verified': False}
2025-08-10 00:47:52,656 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 00:47:52,656 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 04:32:29,912 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 04:32:29,913 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 19:54:08,383 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 19:54:08,384 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 20:06:39,066 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 20:06:39,066 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 20:18:17,304 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 20:18:17,304 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 20:32:51,318 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 20:32:51,319 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 20:36:38,099 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 20:36:38,099 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 20:49:25,938 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 20:49:25,938 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 20:58:19,408 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 20:58:19,408 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 21:03:18,899 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 21:03:18,899 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 21:07:34,854 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 21:07:34,854 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 21:16:37,743 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 21:16:37,743 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 21:21:00,910 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 21:21:00,910 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 21:22:43,968 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-10T21:22:41.883932'}
2025-08-10 21:22:43,974 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0ODU0MDYzLCJpYXQiOjE3NTQ4NTM3NjMsImp0aSI6Ijg3N
jliZDg2MDYxMjQ2NGFhNDBiNTJlZWU0YzVmYWFkIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.gKuQJ2bO-D5PD8Mj45drC4Jp5SCyhMKMJItU6jBgBeA', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDk0MDE2MywiaWF0IjoxNzU0ODUzNzYzLCJqdGkiOiJmNzE
xNzMxYWViMDE0NjM5ODEwMTllZjVkNTk5ZjQ3YSIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.1aTSyV9FrOgLz7fxX35ujGW8ng0pFwYhdyn_DgliK9k', 'email_verified': False}
2025-08-10 21:22:44,689 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 21:22:44,689 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 22:11:55,238 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 22:11:55,240 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 22:18:28,453 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 22:18:28,453 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 22:22:29,421 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 22:22:29,421 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 22:36:18,355 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 22:36:18,355 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 22:40:55,329 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 22:40:55,329 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-10 22:46:37,327 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-10 22:46:37,327 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 00:19:46,511 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 00:19:46,527 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 00:20:17,576 |       INFO    |       auth_api        |       [LoginView] Incoming login 
request: data=data={'device_id': 'AE3A.240806.036', 'timestamp': '2025-08-11T00:20:17.224221'}
2025-08-11 00:20:17,702 |       INFO    |       auth_api        |       [LoginView] Login success: 
status=200, user_id=ddd52adb-f3fa-44b2-a845-4b3a2891ef6c, resp=resp={'message': 'Login successful', 
'user_id': UUID('ddd52adb-f3fa-44b2-a845-4b3a2891ef6c'), 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cC
I6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0ODY0NzE3LCJpYXQiOjE3NTQ4NjQ0MTcsImp0aSI6ImE1M
TIyNGY2MzlkMDQwYmJiYjdmZDhjNWQ2ZDBmNThhIiwidXNlcl9pZCI6ImRkZDUyYWRiLWYzZmEtNDRiMi1hODQ1LTRiM2EyODkxZ
WY2YyJ9.cg1DW-WsRxWiy88DXszvC77MfRtsxd_eveAmpt51e_Q', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6
IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NDk1MDgxNywiaWF0IjoxNzU0ODY0NDE3LCJqdGkiOiJjYzY
wMTE2ODA0MjM0MTc3YTE0MzYwMDM1NzgwYzdkYyIsInVzZXJfaWQiOiJkZGQ1MmFkYi1mM2ZhLTQ0YjItYTg0NS00YjNhMjg5MWV
mNmMifQ.DBEHl59a1bnyv0iJWA63Qsdo0PM11CUiRCafIROB3-0', 'email_verified': False}
2025-08-11 00:20:17,902 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 00:20:17,903 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 00:32:21,701 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 00:32:21,701 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 01:07:23,984 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 01:07:23,985 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 01:19:03,017 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 01:19:03,017 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 01:19:59,511 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 01:19:59,511 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 01:32:16,945 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 01:32:16,945 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 01:37:39,536 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 01:37:39,536 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 01:47:28,593 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 01:47:28,593 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 01:48:02,006 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 01:48:02,007 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 01:48:08,628 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 01:48:08,629 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 02:22:26,992 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 02:22:26,992 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 02:22:35,013 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 02:22:35,013 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 02:28:21,661 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 02:28:21,661 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 02:38:33,189 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 02:38:33,189 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 02:45:58,396 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 02:45:58,396 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 02:53:41,111 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 02:53:41,112 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 03:17:22,044 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 03:17:22,044 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 03:37:27,733 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 03:37:27,733 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 03:45:37,846 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 03:45:37,846 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 04:08:56,436 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 04:08:56,436 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 19:22:12,497 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 19:22:12,497 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 19:32:44,167 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 19:32:44,167 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 19:33:20,093 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'sanad', 'email': 'temp1@temp1.com'}
2025-08-11 19:33:20,131 |       ERROR   |       auth_api        |       [RegisterView] Unexpected 
registration error: table user_mang_custom_user has no column named temp_id, req={'username': 
'sanad', 'email': 'temp1@temp1.com'}
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
sqlite3.OperationalError: table user_mang_custom_user has no column named temp_id
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\views.py", line 
120, in post
    user = serializer.save()
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\rest_framework\serializers.py", line 208, in save
    self.instance = self.create(validated_data)
                    ~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\prompeteer_server\auth_api\serializer.py", 
line 98, in create
    user.save()
    ~~~~~~~~~^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\contrib\auth\base_user.py", line 62, in save
    super().save(*args, **kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\base.py", line 892, in save
    self.save_base(
    ~~~~~~~~~~~~~~^
        using=using,
        ^^^^^^^^^^^^
    ...<2 lines>...
        update_fields=update_fields,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\base.py", line 998, in save_base
    updated = self._save_table(
        raw,
    ...<4 lines>...
        update_fields,
    )
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\base.py", line 1161, in _save_table
    results = self._do_insert(
        cls._base_manager, using, fields, returning_fields, raw
    )
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\base.py", line 1202, in _do_insert
    return manager._insert(
           ~~~~~~~~~~~~~~~^
        [self],
        ^^^^^^^
    ...<3 lines>...
        raw=raw,
        ^^^^^^^^
    )
    ^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\query.py", line 1847, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\models\sql\compiler.py", line 1836, in execute_sql
    cursor.execute(sql, params)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 122, in execute
    return super().execute(sql, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 79, in execute
    return self._execute_with_wrappers(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        sql, params, many=False, executor=self._execute
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 92, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 100, in _execute
    with self.db.wrap_database_errors:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\utils.py", line 105, in _execute
    return self.cursor.execute(sql, params)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "E:\l-ozma-kapa-project\codebase\deploy\back-end\server_venv\Lib\site-
packages\django\db\backends\sqlite3\base.py", line 354, in execute
    return super().execute(query, params)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
django.db.utils.OperationalError: table user_mang_custom_user has no column named temp_id
2025-08-11 19:38:55,067 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 19:38:55,067 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 19:40:00,008 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'sanad', 'email': 'temp1@temp1.com'}
2025-08-11 19:40:00,340 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': 'ce86d59f-4b3c-4267-85b0-65d82145b170', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0OTM0MzAwLCJpYXQiOjE3NTQ5MzQwMDAsImp0aSI6ImQzODJmMjA
2OTllOTQxNDk5OTBhOGRmYWY0ZTViN2UwIiwidXNlcl9pZCI6ImNlODZkNTlmLTRiM2MtNDI2Ny04NWIwLTY1ZDgyMTQ1YjE3MCJ
9.EvC0tGvLoeDhstPvSNEzBRpG4cqQTQJUsqBygWgtxrc', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NTAyMDQwMCwiaWF0IjoxNzU0OTM0MDAwLCJqdGkiOiIzMjY2ZjU4O
WNlMzk0YzE0YWE5Zjc2OGVhOTU4MjY3NiIsInVzZXJfaWQiOiJjZTg2ZDU5Zi00YjNjLTQyNjctODViMC02NWQ4MjE0NWIxNzAif
Q.aLM-zmtQE0jPRh1b8fatQrirVior2xRBERQFkqniuwE', 'email': None, 'onboarding': True}
2025-08-11 19:40:31,717 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'sanad', 'email': 'temp1@temp1.com'}
2025-08-11 19:40:31,719 |       WARNING |       auth_api        |       [RegisterView] Registration 
failed: status=400, errors={'username': [ErrorDetail(string='A user with that username already 
exists.', code='unique')]}, req={'username': 'sanad', 'email': 'temp1@temp1.com'}
2025-08-11 20:22:50,451 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 20:22:50,451 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 20:25:29,818 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 20:25:29,818 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 20:25:45,903 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'sanad', 'email': 'temp1@temp1.com'}
2025-08-11 20:25:45,907 |       WARNING |       auth_api        |       [RegisterView] Registration 
failed: status=400, errors={'username': [ErrorDetail(string='A user with that username already 
exists.', code='unique')]}, req={'username': 'sanad', 'email': 'temp1@temp1.com'}
2025-08-11 20:26:04,608 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'sanadsanad', 'email': 'temp1@temp1.com'}
2025-08-11 20:26:04,611 |       WARNING |       auth_api        |       [RegisterView] Registration 
failed: status=400, errors={'email': [ErrorDetail(string='A user with this email already exists.', 
code='invalid')]}, req={'username': 'sanadsanad', 'email': 'temp1@temp1.com'}
2025-08-11 20:26:15,029 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'sanadsanad', 'email': 'temp111@temp111.com'}
2025-08-11 20:26:15,309 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': 'cf2e4228-8d95-4d6c-9900-a9dff1df243f', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0OTM3MDc1LCJpYXQiOjE3NTQ5MzY3NzUsImp0aSI6Ijk0MGE3ZmV
hZmY4YjQ5OTg5MGVhNmNiOTRiYjgxMWZjIiwidXNlcl9pZCI6ImNmMmU0MjI4LThkOTUtNGQ2Yy05OTAwLWE5ZGZmMWRmMjQzZiJ
9.oFa1kARchqnZYVw1QacME7pB7FxEHvH2w0DIZ1s5jEY', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NTAyMzE3NSwiaWF0IjoxNzU0OTM2Nzc1LCJqdGkiOiJkOGI4MGZiY
jNjMmI0ZDFhODZlOWE2OGMwYjA2NTQ4MyIsInVzZXJfaWQiOiJjZjJlNDIyOC04ZDk1LTRkNmMtOTkwMC1hOWRmZjFkZjI0M2Yif
Q.KG354WgiY5gNTlkF8i6mB3XwRguqy3T1RE1GOL5B0t0', 'email': None, 'onboarding': True}
2025-08-11 20:44:07,281 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 20:44:07,281 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 20:44:33,776 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'sanad sanad sanad', 'email': 'temprand@email.com'}
2025-08-11 20:44:33,780 |       WARNING |       auth_api        |       [RegisterView] Registration 
failed: status=400, errors={'username': [ErrorDetail(string='Enter a valid username. This value may 
contain only letters, numbers, and @/./+/-/_ characters.', code='invalid')]}, req={'username': 
'sanad sanad sanad', 'email': 'temprand@email.com'}
2025-08-11 20:44:42,129 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'sanad sanad sanad', 'email': 'temprand@email.com'}
2025-08-11 20:44:42,131 |       WARNING |       auth_api        |       [RegisterView] Registration 
failed: status=400, errors={'username': [ErrorDetail(string='Enter a valid username. This value may 
contain only letters, numbers, and @/./+/-/_ characters.', code='invalid')]}, req={'username': 
'sanad sanad sanad', 'email': 'temprand@email.com'}
2025-08-11 20:44:57,962 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'sanadsanadsanad', 'email': 'temprand@email.com'}
2025-08-11 20:44:57,984 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': '9b9b396f-be8b-496f-9a0c-7a50a2ec0889', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0OTM4MTk3LCJpYXQiOjE3NTQ5Mzc4OTcsImp0aSI6IjgxNjQxNTh
kNTE1MDRkZGQ5ODgyOTdkNzVhNWFkNmJkIiwidXNlcl9pZCI6IjliOWIzOTZmLWJlOGItNDk2Zi05YTBjLTdhNTBhMmVjMDg4OSJ
9.z59xOT4U6jsD0HbeWT1E-umRXLUldc-g3sf08s1THEY', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NTAyNDI5NywiaWF0IjoxNzU0OTM3ODk3LCJqdGkiOiI2YjQ5M2ZiZ
GRmM2M0MGNlYmFmZTI5NGQ4MDU2YTZiNCIsInVzZXJfaWQiOiI5YjliMzk2Zi1iZThiLTQ5NmYtOWEwYy03YTUwYTJlYzA4ODkif
Q.ohD8sLElooyOoZRPwfTeMlruArqtKegURoAbBJMtmzc', 'email': None, 'onboarding': True}
2025-08-11 20:48:11,866 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 20:48:11,866 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 20:50:46,923 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 20:50:46,923 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 20:51:00,879 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'samsamsam', 'email': 'sam@email.com'}
2025-08-11 20:51:00,902 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': '61508393-aec1-4d48-8f44-6ed9d91e76b4', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0OTM4NTYwLCJpYXQiOjE3NTQ5MzgyNjAsImp0aSI6Ijg3Njg4NjR
hYTI2ZDQ4MTM5YjlkYzNjNDg3M2QyZWY3IiwidXNlcl9pZCI6IjYxNTA4MzkzLWFlYzEtNGQ0OC04ZjQ0LTZlZDlkOTFlNzZiNCJ
9.hxzQ-NgARzwd45fiLnOdOGwoo6VKSCNqE8EDgJDgwC0', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NTAyNDY2MCwiaWF0IjoxNzU0OTM4MjYwLCJqdGkiOiJjNmYwOTliN
zUzMTY0NWI0YTI2Y2JlZDFmM2EwZjcyMyIsInVzZXJfaWQiOiI2MTUwODM5My1hZWMxLTRkNDgtOGY0NC02ZWQ5ZDkxZTc2YjQif
Q.y7pyI9YilUXNXBdnDc9Ck2giWim9nWA4tVfVIjWPmI8', 'email': None, 'onboarding': True}
2025-08-11 20:52:45,125 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 20:52:45,126 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 20:53:00,831 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'samsonite', 'email': 'samsonite@email.com'}
2025-08-11 20:53:00,856 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': '7da582b3-20e4-4c17-a84e-11fb639c42c2', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0OTM4NjgwLCJpYXQiOjE3NTQ5MzgzODAsImp0aSI6IjhjM2ZiNzA
2OTU4MDQ4NmI5Njc3YTIwMDQyZTc3MmZiIiwidXNlcl9pZCI6IjdkYTU4MmIzLTIwZTQtNGMxNy1hODRlLTExZmI2MzljNDJjMiJ
9.KRNsb6LfmZuROy_py2caRd41q0qhLcueE2HZHbPbUsY', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NTAyNDc4MCwiaWF0IjoxNzU0OTM4MzgwLCJqdGkiOiIyMzk3ZTJmZ
WZhMDY0OWZhOGQ2ZTg5MGM4YTUxNzBiMyIsInVzZXJfaWQiOiI3ZGE1ODJiMy0yMGU0LTRjMTctYTg0ZS0xMWZiNjM5YzQyYzIif
Q.zGtnY43TnEXRL-Y4lFu2_3TDpBb1vBdCkbf3a9RSJ_I', 'email': None, 'onboarding': True}
2025-08-11 21:01:57,612 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 21:01:57,612 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 21:03:22,069 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'randomperson', 'email': 'randomemail@randomemail.com'}
2025-08-11 21:03:22,111 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': '63b50c92-f496-4194-8a06-9c2eb4a45819', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0OTM5MzAyLCJpYXQiOjE3NTQ5MzkwMDIsImp0aSI6ImI5OTIyZDQ
2M2JiNzQ5OGU4ZjUwMWEwNTQ2ZjRkYmRiIiwidXNlcl9pZCI6IjYzYjUwYzkyLWY0OTYtNDE5NC04YTA2LTljMmViNGE0NTgxOSJ
9.iAJXqLqML0QcFIj2AYV8kAoqokiAESk6x0n-JwdZMcU', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NTAyNTQwMiwiaWF0IjoxNzU0OTM5MDAyLCJqdGkiOiI1NjI2NmNlN
DE0ZDU0MDFjOTY5MzlkNmNlNDNkYjFjYiIsInVzZXJfaWQiOiI2M2I1MGM5Mi1mNDk2LTQxOTQtOGEwNi05YzJlYjRhNDU4MTkif
Q.lrV0tMB_4nltDv7P8a3qKVvYbB1eYhv8WblOa39dmdY', 'email': None, 'onboarding': True}
2025-08-11 21:19:16,056 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 21:19:16,056 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 21:19:29,617 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'yoyoyo', 'email': 'yoyoyo@yoyoyo.com'}
2025-08-11 21:19:29,661 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': 'd7006706-4621-40b4-8574-347ef11198e2', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0OTQwMjY5LCJpYXQiOjE3NTQ5Mzk5NjksImp0aSI6IjkwNjNkNGU
xZjMzMDQxMTliOTQ2ODU5Mjg0ZDc3YjQ4IiwidXNlcl9pZCI6ImQ3MDA2NzA2LTQ2MjEtNDBiNC04NTc0LTM0N2VmMTExOThlMiJ
9.SThhcp-rfTj5PEbErBh-QCT7SYJqtu-Dfa4PsgpHc2A', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NTAyNjM2OSwiaWF0IjoxNzU0OTM5OTY5LCJqdGkiOiJkYTYzYWM3O
TgyZjA0OTg5OTVhNTBhZDI5ZWM3ZDM5YyIsInVzZXJfaWQiOiJkNzAwNjcwNi00NjIxLTQwYjQtODU3NC0zNDdlZjExMTk4ZTIif
Q.vv43F691tAuj0nUL8rpu1BrBye_iFH-CBsFOOviucj4', 'email': None, 'onboarding': True}
2025-08-11 21:31:28,013 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 21:31:28,013 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 21:32:19,644 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'SAMSAMSAM', 'email': 'SAM@SAM.COM'}
2025-08-11 21:32:19,686 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': '56ed3d3f-a31c-456f-a3c2-4218b9f15c3a', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0OTQxMDM5LCJpYXQiOjE3NTQ5NDA3MzksImp0aSI6IjY5ZmQwYTF
mM2E0NTQ3MmVhMDJmZjZhMGU2OTJlNzljIiwidXNlcl9pZCI6IjU2ZWQzZDNmLWEzMWMtNDU2Zi1hM2MyLTQyMThiOWYxNWMzYSJ
9.POcKqXd9jTNXWxLK_slXDFDvjL4fyJ9m0sHsRcF9bsk', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NTAyNzEzOSwiaWF0IjoxNzU0OTQwNzM5LCJqdGkiOiI1NmI2NGU1N
TIxYzU0NDJkYTg0OGExMmUyY2VkMGQzYSIsInVzZXJfaWQiOiI1NmVkM2QzZi1hMzFjLTQ1NmYtYTNjMi00MjE4YjlmMTVjM2Eif
Q.xxMCKUh76y4tzgKfe2eB45nphT5CehBs4dt8tAibBoM', 'email': None, 'onboarding': True}
2025-08-11 21:46:13,181 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 21:46:13,181 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 21:49:37,187 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 21:49:37,187 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 21:49:51,997 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 21:49:51,997 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 21:51:09,385 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'useruseruser99', 'email': 'useruseruser99@email.com'}
2025-08-11 21:51:09,442 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': '1f57b946-a69f-4d47-b54b-1dba9717b9a0', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0OTQyMTY5LCJpYXQiOjE3NTQ5NDE4NjksImp0aSI6ImE5MDI0YmR
kYTRmNDQ4NzNhOTE1N2MzZjYxNmFlZTU2IiwidXNlcl9pZCI6IjFmNTdiOTQ2LWE2OWYtNGQ0Ny1iNTRiLTFkYmE5NzE3YjlhMCJ
9.ZS80D13g8CCX3trI7lOEPl5LgCW1MbT_BwJLRKTmGJM', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NTAyODI2OSwiaWF0IjoxNzU0OTQxODY5LCJqdGkiOiI5ZTI0ZTM1M
mI1ODg0MDY2YmRkNmYyMGU3ZTQyMWE1OSIsInVzZXJfaWQiOiIxZjU3Yjk0Ni1hNjlmLTRkNDctYjU0Yi0xZGJhOTcxN2I5YTAif
Q.GxQlUT6hwvzuqkC2oZIhdJW-7dU91eDBiLD-A6ZpRyo', 'email': None, 'onboarding': True}
2025-08-11 22:09:21,339 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 22:09:21,339 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 22:09:53,497 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'emailer', 'email': 'emailer@emailer.com'}
2025-08-11 22:09:53,520 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': 'ec505364-d863-40fb-9310-9891205da3e3', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU0OTQzMjkzLCJpYXQiOjE3NTQ5NDI5OTMsImp0aSI6IjE1MjEzMjZ
mMzk0MzQwNWM5MTc4NjBiMWJmMDgxOWYzIiwidXNlcl9pZCI6ImVjNTA1MzY0LWQ4NjMtNDBmYi05MzEwLTk4OTEyMDVkYTNlMyJ
9.IdqidZMa_4lbYt9fOYMIpNFFPYx-W8tXq3Lz_Y4G92U', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NTAyOTM5MywiaWF0IjoxNzU0OTQyOTkzLCJqdGkiOiIzMDYwMWFlZ
GRkM2E0ZWI2YjNkYjYyYzc2M2Y0NzI0ZiIsInVzZXJfaWQiOiJlYzUwNTM2NC1kODYzLTQwZmItOTMxMC05ODkxMjA1ZGEzZTMif
Q.LKhwjAhD-n6ZiTZr82F8JWyciOPMedKStEyxWGmLHQE', 'email': None, 'onboarding': True}
2025-08-11 22:11:24,533 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 22:11:24,534 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 22:55:04,444 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 22:55:04,444 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 23:24:56,573 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 23:24:56,573 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 23:25:03,865 |       INFO    |       auth_api        |       [EmailPinVerifyView] 
Incoming PIN verify request: data=data={'email': 'emailer@emailer.com'}
2025-08-11 23:28:11,875 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 23:28:11,875 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 23:28:15,578 |       INFO    |       auth_api        |       [EmailPinVerifyView] 
Incoming PIN verify request: data=data={'email': 'emailer@emailer.com'}
2025-08-11 23:28:48,779 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 23:28:48,779 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-11 23:28:57,404 |       INFO    |       auth_api        |       [EmailPinVerifyView] 
Incoming PIN verify request: data=data={'email': 'emailer@emailer.com'}
2025-08-11 23:41:34,384 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-11 23:41:34,384 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-12 00:06:15,630 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-12 00:06:15,631 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-12 00:07:37,717 |       INFO    |       auth_api        |       [EmailPinVerifyView] 
Incoming PIN verify request: data=data={'email': 'emailer@emailer.com', 'pin': '12345'}
2025-08-12 00:07:37,736 |       WARNING |       auth_api        |       [EmailPinVerifyView] Invalid
 PIN for user_id=ec505364-d863-40fb-9310-9891205da3e3, email=emailer@emailer.com
2025-08-12 00:16:59,547 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-12 00:16:59,547 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-12 00:17:08,815 |       INFO    |       auth_api        |       [EmailPinVerifyView] 
Incoming PIN verify request: data=data={'email': 'emailer@emailer.com', 'pin': '12345'}
2025-08-12 00:17:08,817 |       WARNING |       auth_api        |       [EmailPinVerifyView] Invalid
 PIN for user_id=ec505364-d863-40fb-9310-9891205da3e3, email=emailer@emailer.com
2025-08-12 00:20:28,197 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=ec505364-d863-40fb-9310-9891205da3e3
2025-08-12 00:20:28,197 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-08-12 00:20:28,197 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-08-12 16:22:34,875 |       INFO    |       auth_api        |       [RegisterView] Incoming 
registration request: data=data={'username': 'tempuser', 'email': 'tesm@email.com'}
2025-08-12 16:22:35,339 |       INFO    |       auth_api        |       [RegisterView] Registration 
success: status=201, resp=resp={'message': 'User created. Verification PIN sent to email.', 
'user_id': 'ce16dc29-2f93-4d62-8cff-1fee9f39f161', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpX
VCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1MDA4ODU0LCJpYXQiOjE3NTUwMDg1NTQsImp0aSI6IjUwN2E3YTV
kZDYwZjQxZjA4ZmU3NzI4N2RmNjY5ZmEyIiwidXNlcl9pZCI6ImNlMTZkYzI5LTJmOTMtNGQ2Mi04Y2ZmLTFmZWU5ZjM5ZjE2MSJ
9.XNUhdShAk47jtv_ZUaHb7POBI_j4bYWcJv3KoGdxrEk', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVC
J9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NTA5NDk1NCwiaWF0IjoxNzU1MDA4NTU0LCJqdGkiOiIwMzU3NjYwZ
jMyYzU0MGQwOTJkODExY2YzNGJiMmE2OCIsInVzZXJfaWQiOiJjZTE2ZGMyOS0yZjkzLTRkNjItOGNmZi0xZmVlOWYzOWYxNjEif
Q.K9o5cAJ2zep8fvxIXboWqHhY3hnDJ0i8_-EpvWHYc2g', 'email': None, 'onboarding': True}
2025-08-12 16:23:46,973 |       INFO    |       auth_api        |       [EmailPinVerifyView] 
Incoming PIN verify request: data=data={'email': 'tesm@email.com', 'pin': '12345'}
2025-08-12 16:23:46,976 |       WARNING |       auth_api        |       [EmailPinVerifyView] Invalid
 PIN for user_id=ce16dc29-2f93-4d62-8cff-1fee9f39f161, email=tesm@email.com
2025-08-12 16:24:36,836 |       INFO    |       auth_api        |       [LogoutView] Incoming logout
 request: user_id=ce16dc29-2f93-4d62-8cff-1fee9f39f161
2025-08-12 16:24:36,837 |       INFO    |       auth_api        |       [LogoutView] User logged 
out: anonymous
2025-08-12 16:24:36,837 |       INFO    |       auth_api        |       [LogoutView] Logout 
response: status=200, resp=resp={'detail': 'Logged out successfully.'}
2025-08-12 16:24:38,684 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-12 16:24:38,684 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-13 15:35:16,502 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-13 15:35:16,503 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-13 22:05:51,234 |       INFO    |       auth_api        |       [GoogleAuthorizeSSRView] 
Redirecting user state=mDnvxq5FW6qp-GdznVg53dyC9b1XzaxO 
redirect_uri=http://127.0.0.1:8000/api/v1/auth_api/google/callback/ssr/ authorize_url=https://accoun
ts.google.com/o/oauth2/v2/auth?response_type=code&client_id=16029884030-
t1bmq5n4l2hn7tetj33mu01qq6rf6bo1.apps.googleusercontent.com&redirect_uri=http://127.0.0.1:8000/api/v
1/auth_api/google/callback/ssr/&scope=openid email profile&state=mDnvxq5FW6qp-
GdznVg53dyC9b1XzaxO&access_type=offline&prompt=consent&code_challenge=SOLGChcaXAILRGYGrK8anduVHa9Md-
EV7WDOvOPly8I&code_challenge_method=S256
2025-08-13 22:16:44,672 |       INFO    |       auth_api        |       [GoogleCallbackSSRView] 
Incoming callback state=mDnvxq5FW6qp-GdznVg53dyC9b1XzaxO error= code_present=True
2025-08-13 22:16:44,674 |       WARNING |       auth_api        |       [GoogleCallbackSSRView] 
State expired/used state=mDnvxq5FW6qp-GdznVg53dyC9b1XzaxO
2025-08-13 22:17:28,209 |       INFO    |       auth_api        |       [GoogleCallbackSSRView] 
Incoming callback state=mDnvxq5FW6qp-GdznVg53dyC9b1XzaxO error= code_present=True
2025-08-13 22:17:28,211 |       WARNING |       auth_api        |       [GoogleCallbackSSRView] 
State expired/used state=mDnvxq5FW6qp-GdznVg53dyC9b1XzaxO
2025-08-13 22:18:09,110 |       INFO    |       auth_api        |       [GoogleCallbackSSRView] 
Incoming callback state=mDnvxq5FW6qp-GdznVg53dyC9b1XzaxO error= code_present=True
2025-08-13 22:18:09,111 |       WARNING |       auth_api        |       [GoogleCallbackSSRView] 
State expired/used state=mDnvxq5FW6qp-GdznVg53dyC9b1XzaxO
2025-08-13 22:18:52,550 |       INFO    |       auth_api        |       [GoogleCallbackSSRView] 
Incoming callback state=mDnvxq5FW6qp-GdznVg53dyC9b1XzaxO error= code_present=True
2025-08-13 22:18:52,551 |       WARNING |       auth_api        |       [GoogleCallbackSSRView] 
State expired/used state=mDnvxq5FW6qp-GdznVg53dyC9b1XzaxO
2025-08-13 22:19:05,256 |       INFO    |       auth_api        |       [GoogleCallbackSSRView] 
Incoming callback state=mDnvxq5FW6qp-GdznVg53dyC9b1XzaxO error= code_present=True
2025-08-13 22:19:05,257 |       WARNING |       auth_api        |       [GoogleCallbackSSRView] 
State expired/used state=mDnvxq5FW6qp-GdznVg53dyC9b1XzaxO
2025-08-13 22:21:25,241 |       INFO    |       auth_api        |       [GoogleAuthorizeSSRView] 
Redirecting user state=59MD1ACcHJyGeUPSbvYQ4z3Py9pp2ygw 
redirect_uri=http://127.0.0.1:8000/api/v1/auth_api/google/callback/ssr/ authorize_url=https://accoun
ts.google.com/o/oauth2/v2/auth?response_type=code&client_id=16029884030-
t1bmq5n4l2hn7tetj33mu01qq6rf6bo1.apps.googleusercontent.com&redirect_uri=http://127.0.0.1:8000/api/v
1/auth_api/google/callback/ssr/&scope=openid email profile&state=59MD1ACcHJyGeUPSbvYQ4z3Py9pp2ygw&ac
cess_type=offline&prompt=consent&code_challenge=5SbLd6eRTf3eYv2srBHsHPL320QoCKqB9-
KpLhQpr38&code_challenge_method=S256
2025-08-13 22:21:30,898 |       INFO    |       auth_api        |       [GoogleCallbackSSRView] 
Incoming callback state=59MD1ACcHJyGeUPSbvYQ4z3Py9pp2ygw error= code_present=True
2025-08-13 22:21:32,307 |       INFO    |       auth_api        |       [GoogleCallbackSSRView] 
Success state=59MD1ACcHJyGeUPSbvYQ4z3Py9pp2ygw user=175c372e-04c8-4fca-8a7f-8d8719c43d25 
email=sanad.arousi@gmail.com expires_at=2025-08-13 21:21:31.263100+00:00
2025-08-13 22:28:18,901 |       INFO    |       auth_api        |       [GoogleCallbackSSRView] 
Incoming callback state=59MD1ACcHJyGeUPSbvYQ4z3Py9pp2ygw error= code_present=True
2025-08-13 22:28:18,903 |       WARNING |       auth_api        |       [GoogleCallbackSSRView] 
State used state=59MD1ACcHJyGeUPSbvYQ4z3Py9pp2ygw
2025-08-13 23:55:09,909 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-13 23:55:09,909 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-13 23:56:29,636 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-13 23:56:29,636 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 00:51:10,428 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 00:51:10,429 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 00:51:27,483 |       INFO    |       auth_api        |       [OpenRouterAuthorizeView] 
Generated state=xNBSAM88ZT3n7wmqt0ZnuMX9VAM3bZGc id=4c87d7f8-ce25-4a87-88a2-bf59287ebe3b 
redirect=prompeteer://oauth/openrouter
2025-08-14 00:52:30,665 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 00:52:30,665 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 00:57:31,740 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 00:57:31,740 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 00:57:35,627 |       INFO    |       auth_api        |       [GoogleAuthorizeView] 
Generated state=cGp-dkaAIBxMcU5wpU5ds3b-B61W9ZFe id=59d759da-b323-4455-9c8c-619f11801185 
redirect_uri=prompeteer://oauth/google/ authorize_url=https://accounts.google.com/o/oauth2/v2/auth?r
esponse_type=code&client_id=16029884030-
t1bmq5n4l2hn7tetj33mu01qq6rf6bo1.apps.googleusercontent.com&redirect_uri=prompeteer://oauth/google/&
scope=openid offline_access&state=cGp-dkaAIBxMcU5wpU5ds3b-
B61W9ZFe&access_type=offline&prompt=consent&code_challenge=f_fujlARMoFox4DR43y4uiUvExfxa-V1-
568guClEdI&code_challenge_method=S256
2025-08-14 01:18:07,690 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 01:18:07,691 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 01:19:52,854 |       INFO    |       auth_api        |       [GoogleAuthorizeView] 
Generated state=zW-1sDY0o2PclfcqZiB9NGKBP7lZu4QK id=fe344f37-10ec-45ad-894e-92e2c298c557 
redirect_uri=http://127.0.0.1:8000/api/v1/auth_api/google/callback/ 
mobile_redirect=prompeteer://oauth/google authorize_url=https://accounts.google.com/o/oauth2/v2/auth
?response_type=code&client_id=16029884030-
t1bmq5n4l2hn7tetj33mu01qq6rf6bo1.apps.googleusercontent.com&redirect_uri=http://127.0.0.1:8000/api/v
1/auth_api/google/callback/&scope=openid offline_access&state=zW-
1sDY0o2PclfcqZiB9NGKBP7lZu4QK&access_type=offline&prompt=consent&code_challenge=_aA0Zg_aVl_FhN1tIHC4
9z-I_48A0TewHyLP0HP8UPE&code_challenge_method=S256
2025-08-14 01:30:40,108 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 01:30:40,109 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 01:30:43,348 |       INFO    |       auth_api        |       [GoogleAuthorizeView] 
Generated state=v4HZMmr3Rk8sSWNdLhPzP0EA2FdFpeCT id=7ae99972-4c63-4d8f-81ab-bb88030d66cb 
redirect_uri=http://127.0.0.1:8000/api/v1/auth_api/google/callback/ 
mobile_redirect=prompeteer://oauth/google authorize_url=https://accounts.google.com/o/oauth2/v2/auth
?response_type=code&client_id=16029884030-
t1bmq5n4l2hn7tetj33mu01qq6rf6bo1.apps.googleusercontent.com&redirect_uri=http://127.0.0.1:8000/api/v
1/auth_api/google/callback/&scope=openid email profile&state=v4HZMmr3Rk8sSWNdLhPzP0EA2FdFpeCT&access
_type=offline&prompt=consent&code_challenge=Vj2c5zELYIEFHBqqtBYDJpnZgOeJufAyPN36tWq7XOY&code_challen
ge_method=S256
2025-08-14 01:38:04,186 |       INFO    |       auth_api        |       [GoogleCallbackView][GET] 
state=v4HZMmr3Rk8sSWNdLhPzP0EA2FdFpeCT error= code_present=True
2025-08-14 01:38:05,212 |       INFO    |       auth_api        |       [GoogleCallbackView][GET] 
Persisted provider token user=175c372e-04c8-4fca-8a7f-8d8719c43d25 token_id=7b7d0dac-5beb-4e45-84bf-
ca0e7ed03bb4 created=False
2025-08-14 01:46:28,039 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 01:46:28,039 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 01:46:30,998 |       INFO    |       auth_api        |       [GoogleAuthorizeView] 
Generated state=ggzL9IY9HFTvL4eccJNuUUpZgv2CPyy5 id=3e653d49-eedf-4056-bfff-310e81c992be 
redirect_uri=http://127.0.0.1:8000/api/v1/auth_api/google/callback/ 
mobile_redirect=prompeteer://oauth/google authorize_url=https://accounts.google.com/o/oauth2/v2/auth
?response_type=code&client_id=16029884030-
t1bmq5n4l2hn7tetj33mu01qq6rf6bo1.apps.googleusercontent.com&redirect_uri=http://127.0.0.1:8000/api/v
1/auth_api/google/callback/&scope=openid email profile&state=ggzL9IY9HFTvL4eccJNuUUpZgv2CPyy5&access
_type=offline&prompt=consent&code_challenge=TSM2OYdr02X-Z1L2q_A16yJNUMHWs-
KKQtE1ZGzbI4Y&code_challenge_method=S256
2025-08-14 01:47:46,332 |       INFO    |       auth_api        |       [GoogleCallbackView][GET] 
state=ggzL9IY9HFTvL4eccJNuUUpZgv2CPyy5 error= code_present=True
2025-08-14 01:47:47,583 |       INFO    |       auth_api        |       [GoogleCallbackView] Success
 state=ggzL9IY9HFTvL4eccJNuUUpZgv2CPyy5 user=175c372e-04c8-4fca-8a7f-8d8719c43d25 
email=sanad.arousi@gmail.com expires_at=2025-08-14 00:47:46.534689+00:00
2025-08-14 01:48:24,543 |       INFO    |       auth_api        |       [GoogleCallbackView][GET] 
state=ggzL9IY9HFTvL4eccJNuUUpZgv2CPyy5 error= code_present=True
2025-08-14 01:49:02,620 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 01:49:02,620 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 01:49:07,650 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 01:49:07,650 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 01:49:12,330 |       INFO    |       auth_api        |       [GoogleAuthorizeView] 
Generated state=Kj_FGVmdsHl7FriBTT1wc_VvEnBJwBL2 id=efd4b671-9be4-4692-a9a1-d6e773a63bc7 
redirect_uri=http://127.0.0.1:8000/api/v1/auth_api/google/callback/ 
mobile_redirect=prompeteer://oauth/google authorize_url=https://accounts.google.com/o/oauth2/v2/auth
?response_type=code&client_id=16029884030-
t1bmq5n4l2hn7tetj33mu01qq6rf6bo1.apps.googleusercontent.com&redirect_uri=http://127.0.0.1:8000/api/v
1/auth_api/google/callback/&scope=openid email profile&state=Kj_FGVmdsHl7FriBTT1wc_VvEnBJwBL2&access
_type=offline&prompt=consent&code_challenge=CbXFvT9cpKyjo4QuOzn-
0MidldyAHc7d4_uZKoDGk9E&code_challenge_method=S256
2025-08-14 01:50:02,421 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 01:50:02,421 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 01:50:05,679 |       INFO    |       auth_api        |       [GoogleAuthorizeView] 
Generated state=3zozwhEL2k2ATkEKReCr-2Cp8ftQMOJS id=be2c88c3-10ae-438a-b1a3-8d57afda53ad 
redirect_uri=http://127.0.0.1:8000/api/v1/auth_api/google/callback/ 
mobile_redirect=prompeteer://oauth/google authorize_url=https://accounts.google.com/o/oauth2/v2/auth
?response_type=code&client_id=16029884030-
t1bmq5n4l2hn7tetj33mu01qq6rf6bo1.apps.googleusercontent.com&redirect_uri=http://127.0.0.1:8000/api/v
1/auth_api/google/callback/&scope=openid email profile&state=3zozwhEL2k2ATkEKReCr-
2Cp8ftQMOJS&access_type=offline&prompt=consent&code_challenge=Z9zGCgoKe2IoSkLKuxI-
hdahJyRYCthhstbT55ASypw&code_challenge_method=S256
2025-08-14 01:50:33,991 |       INFO    |       auth_api        |       [GoogleCallbackView][GET] 
state=3zozwhEL2k2ATkEKReCr-2Cp8ftQMOJS error= code_present=True
2025-08-14 01:50:35,047 |       INFO    |       auth_api        |       [GoogleCallbackView] Success
 state=3zozwhEL2k2ATkEKReCr-2Cp8ftQMOJS user=175c372e-04c8-4fca-8a7f-8d8719c43d25 
email=sanad.arousi@gmail.com expires_at=2025-08-14 00:50:34.040822+00:00
2025-08-14 01:51:28,115 |       INFO    |       auth_api        |       [GoogleCallbackView][GET] 
state=3zozwhEL2k2ATkEKReCr-2Cp8ftQMOJS error= code_present=True
2025-08-14 01:53:12,523 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 01:53:12,523 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 01:53:14,780 |       INFO    |       auth_api        |       [GoogleAuthorizeView] 
Generated state=6yI1oN3peszRZrrdY4syaFBeinBAtl6r id=79dc84ca-316a-4351-aefd-d939537d17bd 
redirect_uri=http://127.0.0.1:8000/api/v1/auth_api/google/callback/ 
mobile_redirect=prompeteer://oauth/google authorize_url=https://accounts.google.com/o/oauth2/v2/auth
?response_type=code&client_id=16029884030-
t1bmq5n4l2hn7tetj33mu01qq6rf6bo1.apps.googleusercontent.com&redirect_uri=http://127.0.0.1:8000/api/v
1/auth_api/google/callback/&scope=openid email profile&state=6yI1oN3peszRZrrdY4syaFBeinBAtl6r&access
_type=offline&prompt=consent&code_challenge=QLzeyPVwxSd_0lQNRxc8PJ79QD1-neSs-
NLt6AGRhoM&code_challenge_method=S256
2025-08-14 02:05:06,556 |       INFO    |       auth_api        |       [GoogleAuthorizeView] Auto-
swapped redirect host to emulator 10.0.2.2 for mobile bridge (was 127.0.0.1)
2025-08-14 02:05:06,572 |       INFO    |       auth_api        |       [GoogleAuthorizeView] 
Generated state=bl3no-sgzlMDGzOww-rTqZxm7L-WZ9o4 id=a3aa8215-52ff-4934-b8f1-a7ad07a1cb2a 
redirect_uri=http://10.0.2.2:8000/api/v1/auth_api/google/callback/ 
mobile_redirect=prompeteer://oauth/google authorize_url=https://accounts.google.com/o/oauth2/v2/auth
?response_type=code&client_id=16029884030-
t1bmq5n4l2hn7tetj33mu01qq6rf6bo1.apps.googleusercontent.com&redirect_uri=http://10.0.2.2:8000/api/v1
/auth_api/google/callback/&scope=openid email profile&state=bl3no-sgzlMDGzOww-rTqZxm7L-
WZ9o4&access_type=offline&prompt=consent&code_challenge=mWU0XFIDlBhstkWB314fqm1ddgHJCi_jH9IVF74cqYE&
code_challenge_method=S256
2025-08-14 02:07:51,155 |       INFO    |       auth_api        |       [GoogleAuthorizeView] Auto-
swapped redirect host to emulator 10.0.2.2 for mobile bridge (was 127.0.0.1)
2025-08-14 02:07:51,195 |       INFO    |       auth_api        |       [GoogleAuthorizeView] 
Generated state=WWfgiRjDIwBnPxDh3YWyGcVJEPteNmjK id=f805a059-dba8-4e60-bed6-9d2f0da600e3 
redirect_uri=http://10.0.2.2:8000/api/v1/auth_api/google/callback/ 
mobile_redirect=prompeteer://oauth/google authorize_url=https://accounts.google.com/o/oauth2/v2/auth
?response_type=code&client_id=16029884030-
t1bmq5n4l2hn7tetj33mu01qq6rf6bo1.apps.googleusercontent.com&redirect_uri=http://10.0.2.2:8000/api/v1
/auth_api/google/callback/&scope=openid email profile&state=WWfgiRjDIwBnPxDh3YWyGcVJEPteNmjK&access_
type=offline&prompt=consent&code_challenge=OwUn1w1IgokXHMQ7dqHUwm6am2iBjWHGrmbw7ex2-
OA&code_challenge_method=S256
2025-08-14 02:13:02,114 |       INFO    |       auth_api        |       [GoogleAuthorizeView] Auto-
swapped redirect host to emulator 10.0.2.2 for mobile bridge (was 127.0.0.1)
2025-08-14 02:13:02,133 |       INFO    |       auth_api        |       [GoogleAuthorizeView] 
Generated state=RX6xR09E167eBkiizWcVNZBnr9PMP4Un id=3a425b6d-f98c-4fae-b075-de87700e4c50 
redirect_uri=http://10.0.2.2:8000/api/v1/auth_api/google/callback/ 
mobile_redirect=prompeteer://oauth/google authorize_url=https://accounts.google.com/o/oauth2/v2/auth
?response_type=code&client_id=16029884030-
t1bmq5n4l2hn7tetj33mu01qq6rf6bo1.apps.googleusercontent.com&redirect_uri=http://10.0.2.2:8000/api/v1
/auth_api/google/callback/&scope=openid email profile&state=RX6xR09E167eBkiizWcVNZBnr9PMP4Un&access_
type=offline&prompt=consent&code_challenge=odeqUJgakTdfMeWk2GkVj_JQtytidL82xVSkrNA2KRI&code_challeng
e_method=S256
2025-08-14 18:56:56,217 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 18:56:56,218 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 18:57:57,216 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 18:57:57,216 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 19:08:53,702 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 19:08:53,703 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 19:18:01,632 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 19:18:01,632 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 19:22:17,342 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 19:22:17,342 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 19:23:03,917 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 19:23:03,917 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 19:25:05,987 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 19:25:05,987 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 19:28:24,723 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 19:28:24,723 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-14 19:30:40,339 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-14 19:30:40,339 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-15 18:49:26,888 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-15 18:49:26,888 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-15 19:43:30,965 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-15 19:43:30,965 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-15 19:48:38,974 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-15 19:48:38,975 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-15 20:08:41,965 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-15 20:08:41,965 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-15 20:12:37,215 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-15 20:12:37,215 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-15 20:18:11,592 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-15 20:18:11,592 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-15 20:23:25,238 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-15 20:23:25,238 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-15 20:26:18,715 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-15 20:26:18,715 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-15 20:35:05,929 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-15 20:35:05,929 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-15 20:40:25,959 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-15 20:40:25,959 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-15 20:49:43,679 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-15 20:49:43,679 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-15 20:54:37,187 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-15 20:54:37,187 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
2025-08-15 21:51:27,931 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check performed.
2025-08-15 21:51:27,931 |       INFO    |       auth_api        |       [HealthCheckView] Health 
check response: status=200, resp=resp={'status': 'ok', 'message': 'Server is up'}
